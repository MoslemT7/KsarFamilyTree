{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar rxjs_1 = require(\"rxjs\");\nvar result_rx_1 = __importDefault(require(\"./result-rx\"));\n// eslint-disable-next-line no-unused-vars\nvar neo4j_driver_core_1 = __importDefault(require(\"neo4j-driver-core\"));\n/**\n * A reactive transaction, which provides the same functionality as {@link Transaction} but through a Reactive API.\n */\nvar RxTransaction = /** @class */function () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Transaction} txc - The underlying transaction instance to relay requests\n   */\n  function RxTransaction(txc) {\n    this._txc = txc;\n  }\n  /**\n   * Creates a reactive result that will execute the query in this transaction, with the provided parameters.\n   *\n   * @public\n   * @param {string} query - Query to be executed.\n   * @param {Object} parameters - Parameter values to use in query execution.\n   * @returns {RxResult} - A reactive result\n   */\n  RxTransaction.prototype.run = function (query, parameters) {\n    var _this = this;\n    return new result_rx_1.default(new rxjs_1.Observable(function (observer) {\n      try {\n        observer.next(_this._txc.run(query, parameters));\n        observer.complete();\n      } catch (err) {\n        observer.error(err);\n      }\n      return function () {};\n    }));\n  };\n  /**\n   *  Commits the transaction.\n   *\n   * @public\n   * @returns {Observable} - An empty observable\n   */\n  RxTransaction.prototype.commit = function () {\n    var _this = this;\n    return new rxjs_1.Observable(function (observer) {\n      _this._txc.commit().then(function () {\n        observer.complete();\n      }).catch(function (err) {\n        return observer.error(err);\n      });\n    });\n  };\n  /**\n   *  Rolls back the transaction.\n   *\n   * @public\n   * @returns {Observable} - An empty observable\n   */\n  RxTransaction.prototype.rollback = function () {\n    var _this = this;\n    return new rxjs_1.Observable(function (observer) {\n      _this._txc.rollback().then(function () {\n        observer.complete();\n      }).catch(function (err) {\n        return observer.error(err);\n      });\n    });\n  };\n  /**\n   * Check if this transaction is active, which means commit and rollback did not happen.\n   * @return {boolean} `true` when not committed and not rolled back, `false` otherwise.\n   */\n  RxTransaction.prototype.isOpen = function () {\n    return this._txc.isOpen();\n  };\n  /**\n   * Closes the transaction\n   *\n   * This method will roll back the transaction if it is not already committed or rolled back.\n   *\n   * @returns {Observable} - An empty observable\n   */\n  RxTransaction.prototype.close = function () {\n    var _this = this;\n    return new rxjs_1.Observable(function (observer) {\n      _this._txc.close().then(function () {\n        observer.complete();\n      }).catch(function (err) {\n        return observer.error(err);\n      });\n    });\n  };\n  return RxTransaction;\n}();\nexports.default = RxTransaction;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","rxjs_1","require","result_rx_1","neo4j_driver_core_1","RxTransaction","txc","_txc","prototype","run","query","parameters","_this","default","Observable","observer","next","complete","err","error","commit","then","catch","rollback","isOpen","close"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver/lib/transaction-rx.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar rxjs_1 = require(\"rxjs\");\nvar result_rx_1 = __importDefault(require(\"./result-rx\"));\n// eslint-disable-next-line no-unused-vars\nvar neo4j_driver_core_1 = __importDefault(require(\"neo4j-driver-core\"));\n/**\n * A reactive transaction, which provides the same functionality as {@link Transaction} but through a Reactive API.\n */\nvar RxTransaction = /** @class */ (function () {\n    /**\n     * @constructor\n     * @protected\n     * @param {Transaction} txc - The underlying transaction instance to relay requests\n     */\n    function RxTransaction(txc) {\n        this._txc = txc;\n    }\n    /**\n     * Creates a reactive result that will execute the query in this transaction, with the provided parameters.\n     *\n     * @public\n     * @param {string} query - Query to be executed.\n     * @param {Object} parameters - Parameter values to use in query execution.\n     * @returns {RxResult} - A reactive result\n     */\n    RxTransaction.prototype.run = function (query, parameters) {\n        var _this = this;\n        return new result_rx_1.default(new rxjs_1.Observable(function (observer) {\n            try {\n                observer.next(_this._txc.run(query, parameters));\n                observer.complete();\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            return function () { };\n        }));\n    };\n    /**\n     *  Commits the transaction.\n     *\n     * @public\n     * @returns {Observable} - An empty observable\n     */\n    RxTransaction.prototype.commit = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._txc\n                .commit()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    /**\n     *  Rolls back the transaction.\n     *\n     * @public\n     * @returns {Observable} - An empty observable\n     */\n    RxTransaction.prototype.rollback = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._txc\n                .rollback()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    /**\n     * Check if this transaction is active, which means commit and rollback did not happen.\n     * @return {boolean} `true` when not committed and not rolled back, `false` otherwise.\n     */\n    RxTransaction.prototype.isOpen = function () {\n        return this._txc.isOpen();\n    };\n    /**\n     * Closes the transaction\n     *\n     * This method will roll back the transaction if it is not already committed or rolled back.\n     *\n     * @returns {Observable} - An empty observable\n     */\n    RxTransaction.prototype.close = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._txc\n                .close()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    return RxTransaction;\n}());\nexports.default = RxTransaction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}