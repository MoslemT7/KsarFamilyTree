{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WRITE = exports.READ = exports.Driver = void 0;\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar session_rx_1 = __importDefault(require(\"./session-rx\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar READ = neo4j_driver_core_1.driver.READ,\n  WRITE = neo4j_driver_core_1.driver.WRITE;\nexports.READ = READ;\nexports.WRITE = WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\nvar Driver = /** @class */function (_super) {\n  __extends(Driver, _super);\n  function Driver() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Acquire a reactive session to communicate with the database. The session will\n   * borrow connections from the underlying connection pool as required and\n   * should be considered lightweight and disposable.\n   *\n   * This comes with some responsibility - make sure you always call\n   * {@link close} when you are done using a session, and likewise,\n   * make sure you don't close your session before you are done using it. Once\n   * it is closed, the underlying connection will be released to the connection\n   * pool and made available for others to use.\n   *\n   * @public\n   * @param {SessionConfig} config\n   * @returns {RxSession} new reactive session.\n   */\n  Driver.prototype.rxSession = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.defaultAccessMode,\n      defaultAccessMode = _c === void 0 ? WRITE : _c,\n      bookmarks = _b.bookmarks,\n      _d = _b.database,\n      database = _d === void 0 ? '' : _d,\n      fetchSize = _b.fetchSize,\n      impersonatedUser = _b.impersonatedUser,\n      bookmarkManager = _b.bookmarkManager,\n      notificationFilter = _b.notificationFilter,\n      auth = _b.auth;\n    return new session_rx_1.default({\n      session: this._newSession({\n        defaultAccessMode: defaultAccessMode,\n        bookmarkOrBookmarks: bookmarks,\n        database: database,\n        impersonatedUser: impersonatedUser,\n        auth: auth,\n        reactive: false,\n        fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\n        bookmarkManager: bookmarkManager,\n        notificationFilter: notificationFilter,\n        log: this._log\n      }),\n      config: this._config,\n      log: this._log\n    });\n  };\n  return Driver;\n}(neo4j_driver_core_1.Driver);\nexports.Driver = Driver;\n/**\n * @private\n */\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n  var fetchSize = parseInt(rawValue, 10);\n  if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n    return fetchSize;\n  } else if (fetchSize === 0 || fetchSize < 0) {\n    throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n  } else {\n    return defaultWhenAbsent;\n  }\n}\nexports.default = Driver;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","WRITE","READ","Driver","neo4j_driver_core_1","require","session_rx_1","FETCH_ALL","internal","constants","driver","_super","apply","arguments","rxSession","_a","_b","_c","defaultAccessMode","bookmarks","_d","database","fetchSize","impersonatedUser","bookmarkManager","notificationFilter","auth","default","session","_newSession","bookmarkOrBookmarks","reactive","validateFetchSizeValue","_config","log","_log","config","rawValue","defaultWhenAbsent","parseInt","Error","concat"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver/lib/driver.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WRITE = exports.READ = exports.Driver = void 0;\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar session_rx_1 = __importDefault(require(\"./session-rx\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar READ = neo4j_driver_core_1.driver.READ, WRITE = neo4j_driver_core_1.driver.WRITE;\nexports.READ = READ;\nexports.WRITE = WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\nvar Driver = /** @class */ (function (_super) {\n    __extends(Driver, _super);\n    function Driver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Acquire a reactive session to communicate with the database. The session will\n     * borrow connections from the underlying connection pool as required and\n     * should be considered lightweight and disposable.\n     *\n     * This comes with some responsibility - make sure you always call\n     * {@link close} when you are done using a session, and likewise,\n     * make sure you don't close your session before you are done using it. Once\n     * it is closed, the underlying connection will be released to the connection\n     * pool and made available for others to use.\n     *\n     * @public\n     * @param {SessionConfig} config\n     * @returns {RxSession} new reactive session.\n     */\n    Driver.prototype.rxSession = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultAccessMode, defaultAccessMode = _c === void 0 ? WRITE : _c, bookmarks = _b.bookmarks, _d = _b.database, database = _d === void 0 ? '' : _d, fetchSize = _b.fetchSize, impersonatedUser = _b.impersonatedUser, bookmarkManager = _b.bookmarkManager, notificationFilter = _b.notificationFilter, auth = _b.auth;\n        return new session_rx_1.default({\n            session: this._newSession({\n                defaultAccessMode: defaultAccessMode,\n                bookmarkOrBookmarks: bookmarks,\n                database: database,\n                impersonatedUser: impersonatedUser,\n                auth: auth,\n                reactive: false,\n                fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\n                bookmarkManager: bookmarkManager,\n                notificationFilter: notificationFilter,\n                log: this._log\n            }),\n            config: this._config,\n            log: this._log\n        });\n    };\n    return Driver;\n}(neo4j_driver_core_1.Driver));\nexports.Driver = Driver;\n/**\n * @private\n */\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n    var fetchSize = parseInt(rawValue, 10);\n    if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n        return fetchSize;\n    }\n    else if (fetchSize === 0 || fetchSize < 0) {\n        throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n    }\n    else {\n        return defaultWhenAbsent;\n    }\n}\nexports.default = Driver;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}