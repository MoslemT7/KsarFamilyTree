{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\Copy 4\\\\client\\\\src\\\\components\\\\RelationChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport './RelationChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nconst compoundNames = require('./compundNames.json');\nrequire('dotenv').config();\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nconst driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\nconst session = driver.session();\nfunction countBenAndBent(str) {\n  const words = str.trim().split(/\\s+/);\n  if (words.length < 3) return 0;\n  const interior = words.slice(1, -1);\n  return interior.filter(w => w === 'ÿ®ŸÜ' || w === 'ÿ®ŸÜÿ™').length;\n}\nfunction isCompoundName(name) {\n  return Object.values(compoundNames).includes(name);\n}\nfunction splitName(fullName) {\n  const parts = fullName.replace(/\\s*(ÿ®ŸÜ|ÿ®ŸÜÿ™)\\s*/gi, ' ').trim().split(/\\s+/);\n  const bentCount = countBenAndBent(fullName);\n  if (isCompoundName(parts[0] + \" \" + parts[1])) {\n    console.log(\"It's a compound name!\");\n  }\n  let compundName;\n  if (parts.length === 2) {\n    if (bentCount === 0) {\n      if (isCompoundName(parts[0] + \" \" + parts[1])) {\n        compundName = `${parts[0]} ${parts[1]}`;\n        return {\n          personName: compundName,\n          fatherName: \"\",\n          grandfatherName: \"\",\n          familyName: \"\"\n        };\n      } else {\n        return {\n          personName: parts[0],\n          fatherName: \"\",\n          grandfatherName: \"\",\n          familyName: parts[1]\n        };\n      }\n    } else if (bentCount === 1) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: \"\",\n        familyName: \"\"\n      };\n    }\n  } else if (parts.length === 3) {\n    if (bentCount === 1) {\n      if (isCompoundName(parts[0] + \" \" + parts[1])) {\n        console.log(\"COMPUND DETECTED\");\n        compundName = `${parts[0]} ${parts[1]}`;\n        return {\n          personName: compundName,\n          fatherName: parts[2],\n          grandfatherName: \"\",\n          familyName: \"\"\n        };\n      } else if (isCompoundName(parts[1] + \" \" + parts[2])) {\n        console.log(\"COMPUND DETECTED\");\n        compundName = `${parts[1]} ${parts[2]}`;\n        return {\n          personName: parts[0],\n          fatherName: compundName,\n          grandfatherName: \"\",\n          familyName: \"\"\n        };\n      } else {\n        return {\n          personName: parts[0],\n          fatherName: parts[1],\n          grandfatherName: \"\",\n          familyName: parts[2]\n        };\n      }\n    } else if (bentCount === 2) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: parts[2],\n        familyName: \"\"\n      };\n    }\n  } else if (parts.length === 4) {\n    if (bentCount === 1) {\n      if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2] + \" \" + parts[3])) {\n        return {\n          personName: `${parts[0]} ${parts[1]}`,\n          fatherName: `${parts[2]} ${parts[3]}`,\n          grandfatherName: \"\",\n          familyName: \"\"\n        };\n      }\n      if (isCompoundName(parts[0] + \" \" + parts[1])) {\n        return {\n          personName: `${parts[0]} ${parts[1]}`,\n          fatherName: parts[2],\n          grandfatherName: \"\",\n          familyName: parts[3]\n        };\n      }\n      if (isCompoundName(parts[1] + \" \" + parts[2])) {\n        return {\n          personName: parts[0],\n          fatherName: `${parts[1]} ${parts[2]}`,\n          grandfatherName: \"\",\n          familyName: parts[3]\n        };\n      }\n    } else if (bentCount === 2) {\n      if (isCompoundName(parts[0] + \" \" + parts[1])) {\n        return {\n          personName: `${parts[0]} ${parts[1]}`,\n          fatherName: parts[2],\n          grandfatherName: parts[3],\n          familyName: \"\"\n        };\n      }\n      if (isCompoundName(parts[1] + \" \" + parts[2])) {\n        return {\n          personName: parts[0],\n          fatherName: `${parts[1]} ${parts[2]}`,\n          grandfatherName: parts[3],\n          familyName: \"\"\n        };\n      }\n    }\n  } else if (parts.length === 5) {\n    if (bentCount === 2) {\n      if (isCompoundName(parts[0] + \" \" + parts[1])) {\n        return {\n          personName: `${parts[0]} ${parts[1]}`,\n          fatherName: parts[2],\n          grandfatherName: parts[3],\n          familyName: parts[4]\n        };\n      }\n      if (isCompoundName(parts[1] + \" \" + parts[2])) {\n        return {\n          personName: parts[0],\n          fatherName: `${parts[1]} ${parts[2]}`,\n          grandfatherName: parts[3],\n          familyName: parts[4]\n        };\n      }\n      if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2] + \" \" + parts[3])) {\n        return {\n          personName: `${parts[0]} ${parts[1]}`,\n          fatherName: `${parts[2]} ${parts[3]}`,\n          grandfatherName: parts[4],\n          familyName: \"\"\n        };\n      }\n    }\n  } else if (parts.length === 6) {\n    if (bentCount === 2) {\n      if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2] + \" \" + parts[3]) && isCompoundName(parts[4] + \" \" + parts[5])) {\n        return {\n          personName: `${parts[0]} ${parts[1]}`,\n          fatherName: `${parts[2]} ${parts[3]}`,\n          grandfatherName: `${parts[4]} ${parts[5]}`,\n          familyName: \"\"\n        };\n      }\n    }\n  } else if (parts.length === 7) {\n    if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2] + \" \" + parts[3]) && isCompoundName(parts[4] + \" \" + parts[5])) {\n      return {\n        personName: `${parts[0]} ${parts[1]}`,\n        fatherName: `${parts[2]} ${parts[3]}`,\n        grandfatherName: `${parts[4]} ${parts[5]}`,\n        familyName: parts[6]\n      };\n    }\n  }\n  return {\n    personName: parts[0],\n    fatherName: \"\",\n    grandfatherName: \"\",\n    familyName: parts[1] || \"\"\n  };\n}\nfunction buildTreePath(path) {\n  // Handle case where the path is empty\n  if (path.length === 0) return null;\n  return path.reduceRight((acc, person) => {\n    return {\n      id: person.id.toNumber(),\n      name: `${person.name} ${person.lastName}`,\n      children: acc ? [acc] : []\n    };\n  }, null);\n}\nfunction mergePaths(pathToP1, pathToP2) {\n  // Handle empty paths by returning null or an empty object\n  if (pathToP1.length === 0 && pathToP2.length === 0) return null;\n  const ancestor = pathToP1[0]; // Assuming both paths share the same ancestor\n  const branch1 = pathToP1.slice(1);\n  const branch2 = pathToP2.slice(1);\n\n  // Check if any of the branches are empty and handle accordingly\n  const children = [];\n  if (branch1.length > 0) {\n    children.push(buildTreePath(branch1));\n  }\n  if (branch2.length > 0) {\n    children.push(buildTreePath(branch2));\n  }\n\n  // Return the merged structure\n  return {\n    id: ancestor.id.toNumber(),\n    name: `${ancestor.name} ${ancestor.lastName}`,\n    children: children.length > 0 ? children : undefined // Only include children if there are any\n  };\n}\nexport const translateName = (fullName, language = true) => {\n  const reverseTranslations = Object.fromEntries(Object.entries(translations).map(([key, value]) => [value, key]));\n  const reverseCompound = Object.fromEntries(Object.entries(compoundNames).map(([key, value]) => [value, key]));\n  const dict = language ? translations : reverseTranslations;\n  const compoundDict = language ? compoundNames : reverseCompound;\n  const normalized = fullName.trim().replace(/\\s+/g, ' ');\n  if (compoundDict[normalized]) {\n    return compoundDict[normalized];\n  }\n  const nameParts = normalized.split(' ');\n  const translatedParts = nameParts.map(part => dict[part] || part);\n  return translatedParts.join(' ');\n};\nconst RelationPage = () => {\n  _s();\n  var _relationship$relatio, _relationship$relatio2, _relationship$relatio3, _relationship$relatio4, _relationship$relatio5, _relationship$relatio6, _relationship$relatio7, _relationship$relatio8, _relationship$relatio9, _relationship$relatio0, _relationship$relatio1, _relationship$relatio10, _relationship$relatio11, _relationship$relatio12, _relationship$relatio13, _relationship$commonA, _relationship$commonA2, _relationship$commonA3, _relationship$commonA4, _relationship$commonA5, _relationship$commonA6, _relationship$commonA7, _relationship$commonA8, _relationship$relatio14, _relationship$relatio15, _relationship$relatio16, _relationship$relatio17;\n  const [person1, setPerson1] = useState('');\n  const [person2, setPerson2] = useState('');\n  const [relationship, setRelationship] = useState('');\n  const [duplicates, setDuplicates] = useState({\n    person1: [],\n    person2: []\n  });\n  const [error, setError] = useState(null);\n  const [selectedPerson1, setSelectedPerson1] = useState(null);\n  const [selectedPerson2, setSelectedPerson2] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\n  const fetchRelationship = async (e, customPerson1 = person1, customPerson2 = person2) => {\n    if (e) e.preventDefault();\n    console.log(\"üöÄ fetchRelationship START\");\n    console.log(\"‚û°Ô∏è person1:\", customPerson1);\n    console.log(\"‚û°Ô∏è person2:\", customPerson2);\n    if (!customPerson1 || !customPerson2) {\n      console.error(\"‚ùå One of the names is undefined or empty\");\n      setError(true);\n      setRelationship({\n        relationshipDescription: 'ÿ£ÿØÿÆŸÑ ÿßÿ≥ŸÖŸä ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠',\n        relationshipScore: null\n      });\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    setLoadingMessage(\"üîé ÿ®ÿØÿßŸäÿ© ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿπŸÑÿßŸÇÿ©...\");\n    try {\n      var _result$person, _result$person2, _result$score, _result$levelsTuple, _result$generation, _result$explanation$t, _result$explanation, _result$explanation$e, _result$explanation2, _result$relationshipT, _result$ancestor, _result$treeData, _result$person1ID, _result$person2ID;\n      const result = await getRelationship(customPerson1, customPerson2);\n      console.log(\"‚úÖ Result received:\", result);\n      if (result.error === 'non-unique-name') {\n        var _result$duplicates;\n        setSelectedPerson1(null);\n        setSelectedPerson2(null);\n        setDuplicates((_result$duplicates = result.duplicates) !== null && _result$duplicates !== void 0 ? _result$duplicates : {\n          person1: [],\n          person2: []\n        });\n        setRelationship(result.message);\n        return;\n      }\n      setDuplicates({\n        person1: [],\n        person2: []\n      });\n      setRelationship({\n        relationshipDescription: result.relation,\n        relationshipPerson1Details: (_result$person = result.person1) !== null && _result$person !== void 0 ? _result$person : null,\n        relationshipPerson2Details: (_result$person2 = result.person2) !== null && _result$person2 !== void 0 ? _result$person2 : null,\n        relationshipScore: (_result$score = result.score) !== null && _result$score !== void 0 ? _result$score : null,\n        relationshipLevels: (_result$levelsTuple = result.levelsTuple) !== null && _result$levelsTuple !== void 0 ? _result$levelsTuple : null,\n        relationshipGenerationGap: (_result$generation = result.generation) !== null && _result$generation !== void 0 ? _result$generation : null,\n        relationshipExplanationType: (_result$explanation$t = (_result$explanation = result.explanation) === null || _result$explanation === void 0 ? void 0 : _result$explanation.type) !== null && _result$explanation$t !== void 0 ? _result$explanation$t : null,\n        relationshipExplanationDesc: (_result$explanation$e = (_result$explanation2 = result.explanation) === null || _result$explanation2 === void 0 ? void 0 : _result$explanation2.explanation) !== null && _result$explanation$e !== void 0 ? _result$explanation$e : null,\n        relationshipType: (_result$relationshipT = result.relationshipType) !== null && _result$relationshipT !== void 0 ? _result$relationshipT : null,\n        commonAncestor: (_result$ancestor = result.ancestor) !== null && _result$ancestor !== void 0 ? _result$ancestor : null,\n        ancestorstreeData: (_result$treeData = result.treeData) !== null && _result$treeData !== void 0 ? _result$treeData : null,\n        person1ID: (_result$person1ID = result.person1ID) !== null && _result$person1ID !== void 0 ? _result$person1ID : null,\n        person2ID: (_result$person2ID = result.person2ID) !== null && _result$person2ID !== void 0 ? _result$person2ID : null\n      });\n    } catch (error) {\n      console.error('‚ùå Error fetching relationship:', error);\n      setRelationship({\n        relationshipDescription: 'ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿßŸÑÿ®ÿ≠ÿ´',\n        relationshipScore: null\n      });\n      setError(true);\n    } finally {\n      console.log(\"üõë fetchRelationship END\");\n      setLoading(false);\n    }\n  };\n  const checkMarriage = async (person1ID, person2ID, gender1, gender2) => {\n    if (gender1 === gender2) {\n      return {\n        areMarried: false\n      };\n    }\n    setLoadingMessage(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿπŸÑÿßŸÇÿ© ÿ≤Ÿàÿßÿ¨\");\n    const result = await session.run(`\n          MATCH (Husband:Person)-[:HUSBAND_OF]->(Wife:Person)\n          MATCH (Wife)-[:WIFE_OF]->(Husband)\n          WHERE (id(Wife) = $person1ID AND id(Husband) = $person2ID) \n            OR (id(Wife) = $person2ID AND id(Husband) = $person1ID)\n          RETURN Husband AS P1, Wife AS P2\n        `, {\n      person1ID,\n      person2ID\n    });\n    if (result.records.length === 0) {\n      return {\n        areMarried: false\n      };\n    }\n    const record = result.records[0];\n    const P1 = record.get(\"P1\").properties;\n    const P2 = record.get(\"P2\").properties;\n    return record.length === 0 ? {\n      areMarried: false\n    } : {\n      areMarried: true,\n      P1,\n      P2\n    };\n  };\n  async function getMarriageRelation(session, person1ID, person2ID, translatedName1, translatedName2, gender1, gender2) {\n    var _ownRecord$get$toNumb, _ownRecord$get, _ownRecord$get$toNumb2, _ownRecord$get2, _ownRecord$get3, _ownRecord$get4, _ownRecord$get5, _ownRecord$get6, _spouseRecord$get$toN, _spouseRecord$get, _spouseRecord$get$toN2, _spouseRecord$get2, _spouseRecord$get3, _spouseRecord$get4, _spouseRecord$get5;\n    console.log('üîç Checking marriage-based relationship between', translatedName1, 'and', translatedName2);\n\n    // Step 1: Person's own family\n    const ownFamilyQuery = `\n      MATCH (P:Person)\n      WHERE id(P) = $personId\n\n      // Person's Father and Mother\n      OPTIONAL MATCH (Father:Person)-[:FATHER_OF]->(P)\n      OPTIONAL MATCH (Mother:Person)-[:MOTHER_OF]->(P)\n\n      // Person's Siblings\n      OPTIONAL MATCH (Father)-[:FATHER_OF]->(Sibling:Person)\n      WHERE Sibling <> P\n\n      // Spouses of Siblings\n      OPTIONAL MATCH (Sibling)-[:HUSBAND_OF|:WIFE_OF]->(SiblingSpouse:Person)\n\n      // Person's Children\n      OPTIONAL MATCH (P)-[:MOTHER_OF|:FATHER_OF]->(Child:Person)\n\n      // Spouses of Children\n      OPTIONAL MATCH (Child)-[:HUSBAND_OF|:WIFE_OF]->(ChildSpouse:Person)\n\n      RETURN \n        id(Father) AS fatherId,\n        id(Mother) AS motherId,\n        collect(DISTINCT id(Sibling)) AS siblingIds,\n        collect(DISTINCT id(SiblingSpouse)) AS siblingSpouseIds,\n        collect(DISTINCT id(Child)) AS childIds,\n        collect(DISTINCT id(ChildSpouse)) AS childSpouseIds\n    `;\n    const ownResult = await session.run(ownFamilyQuery, {\n      personId: person1ID\n    });\n    const ownRecord = ownResult.records[0];\n    const fatherId = (_ownRecord$get$toNumb = (_ownRecord$get = ownRecord.get(\"fatherId\")) === null || _ownRecord$get === void 0 ? void 0 : _ownRecord$get.toNumber()) !== null && _ownRecord$get$toNumb !== void 0 ? _ownRecord$get$toNumb : null;\n    const motherId = (_ownRecord$get$toNumb2 = (_ownRecord$get2 = ownRecord.get(\"motherId\")) === null || _ownRecord$get2 === void 0 ? void 0 : _ownRecord$get2.toNumber()) !== null && _ownRecord$get$toNumb2 !== void 0 ? _ownRecord$get$toNumb2 : null;\n    const siblingIds = ((_ownRecord$get3 = ownRecord.get(\"siblingIds\")) !== null && _ownRecord$get3 !== void 0 ? _ownRecord$get3 : []).map(id => id.toNumber());\n    const siblingSpouseIds = ((_ownRecord$get4 = ownRecord.get(\"siblingSpouseIds\")) !== null && _ownRecord$get4 !== void 0 ? _ownRecord$get4 : []).map(id => id.toNumber());\n    const childIds = ((_ownRecord$get5 = ownRecord.get(\"childIds\")) !== null && _ownRecord$get5 !== void 0 ? _ownRecord$get5 : []).map(id => id.toNumber());\n    const fchildrenSpouseIds = ((_ownRecord$get6 = ownRecord.get(\"childSpouseIds\")) !== null && _ownRecord$get6 !== void 0 ? _ownRecord$get6 : []).map(id => id.toNumber());\n    console.log('üë®‚Äçüë©‚Äçüëß Own Family:');\n    console.log('Father ID:', fatherId);\n    console.log('Mother ID:', motherId);\n    console.log('Sibling IDs:', siblingIds);\n    console.log('Sibling Spouse IDs:', siblingSpouseIds);\n    console.log('Childs IDs:', childIds);\n    console.log('Children Spouse IDs:', fchildrenSpouseIds);\n\n    // Step 2: Spouse's family\n    const spouseFamilyQuery = `\n      MATCH (P:Person)-[:HUSBAND_OF|:WIFE_OF]->(Spouse:Person)\n      WHERE id(P) = $personId\n\n      OPTIONAL MATCH (SFather:Person)-[:FATHER_OF]->(Spouse)\n      OPTIONAL MATCH (SMother:Person)-[:MOTHER_OF]->(Spouse)\n      OPTIONAL MATCH (SFather)-[:FATHER_OF]->(SSibling:Person)\n      WHERE SSibling <> Spouse\n\n      OPTIONAL MATCH (SSibling)-[:HUSBAND_OF|:WIFE_OF]->(SSiblingSpouse:Person)\n\n      // Get children of the spouse\n      OPTIONAL MATCH (Spouse)-[:MOTHER_OF|:FATHER_OF]->(Child:Person)\n      OPTIONAL MATCH (Child)-[:HUSBAND_OF|:WIFE_OF]->(ChildSpouse:Person)\n\n      RETURN \n        id(SFather) AS sFatherId,\n        id(SMother) AS sMotherId,\n        collect(DISTINCT id(SSibling)) AS sSiblingIds,\n        collect(DISTINCT id(SSiblingSpouse)) AS sSiblingSpouseIds,\n        collect(DISTINCT id(Child)) AS childIds,\n        collect(DISTINCT id(ChildSpouse)) AS childSpouseIds\n    `;\n    const spouseResult = await session.run(spouseFamilyQuery, {\n      personId: person1ID\n    });\n    const spouseRecord = spouseResult.records[0];\n    const sFatherId = (_spouseRecord$get$toN = spouseRecord === null || spouseRecord === void 0 ? void 0 : (_spouseRecord$get = spouseRecord.get(\"sFatherId\")) === null || _spouseRecord$get === void 0 ? void 0 : _spouseRecord$get.toNumber()) !== null && _spouseRecord$get$toN !== void 0 ? _spouseRecord$get$toN : null;\n    const sMotherId = (_spouseRecord$get$toN2 = spouseRecord === null || spouseRecord === void 0 ? void 0 : (_spouseRecord$get2 = spouseRecord.get(\"sMotherId\")) === null || _spouseRecord$get2 === void 0 ? void 0 : _spouseRecord$get2.toNumber()) !== null && _spouseRecord$get$toN2 !== void 0 ? _spouseRecord$get$toN2 : null;\n    const sSiblingIds = ((_spouseRecord$get3 = spouseRecord === null || spouseRecord === void 0 ? void 0 : spouseRecord.get(\"sSiblingIds\")) !== null && _spouseRecord$get3 !== void 0 ? _spouseRecord$get3 : []).map(id => id.toNumber());\n    const sSiblingSpouseIds = ((_spouseRecord$get4 = spouseRecord === null || spouseRecord === void 0 ? void 0 : spouseRecord.get(\"sSiblingSpouseIds\")) !== null && _spouseRecord$get4 !== void 0 ? _spouseRecord$get4 : []).map(id => id.toNumber());\n    const childrenSpouseIds = ((_spouseRecord$get5 = spouseRecord === null || spouseRecord === void 0 ? void 0 : spouseRecord.get(\"childSpouseIds\")) !== null && _spouseRecord$get5 !== void 0 ? _spouseRecord$get5 : []).map(id => id.toNumber());\n    console.log('üßë‚Äçü§ù‚Äçüßë Spouse Family:');\n    console.log('Spouse Father ID:', sFatherId);\n    console.log('Spouse Mother ID:', sMotherId);\n    console.log('Spouse Sibling IDs:', sSiblingIds);\n    console.log('Spouse Sibling Spouse IDs:', sSiblingSpouseIds);\n    console.log('Children Spouse IDs:', childrenSpouseIds);\n\n    // Step 3: Matching\n    const match = id => {\n      return id !== null && id === person2ID;\n    };\n    const isIn = list => {\n      const result = list.some(id => id === person2ID);\n      return result;\n    };\n\n    // Sibling check\n    if (isIn(sSiblingIds)) {\n      console.log('‚úÖ Match: Sibling');\n      if (gender1 === 'Male') {\n        return `${translatedName1} ŸáŸà ÿ≤Ÿàÿ¨ ÿßÿÆÿ™ ${translatedName2}`;\n      } else {\n        return `${translatedName1} ŸáŸä ÿ≤Ÿàÿ¨ÿ© ÿßÿÆ ${translatedName2}`;\n      }\n    }\n\n    // Sibling Spouse check\n    if (isIn(siblingSpouseIds)) {\n      console.log('‚úÖ Match: Spouse Siblings');\n      // Male person with male sibling-in-law (spouse of the sibling)\n      if (gender1 === 'Male') {\n        if (gender2 === 'Male') {\n          return `${translatedName1} ŸáŸà ÿßÿÆ ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\n        } else {\n          return `${translatedName1} ŸáŸà ÿßÿÆ ÿ≤Ÿàÿ¨ ${translatedName2}`;\n        }\n      } else {\n        // Female person with female sibling-in-law (spouse of the sibling)\n        if (gender2 === 'Male') {\n          return `${translatedName1} ŸáŸä ÿßÿÆÿ™ ÿ≤Ÿàÿ¨ ${translatedName2}`;\n        } else {\n          return `${translatedName1} ŸáŸà ÿßÿÆ ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\n        }\n      }\n    }\n\n    // Children Spouses check\n    if (isIn(fchildrenSpouseIds)) {\n      console.log('‚úÖ Match: Children Spouses');\n      if (gender1 === 'Male') {\n        return `${translatedName1} ŸáŸà ÿ£ÿ® ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\n      } else {\n        return `${translatedName1} ŸáŸä ÿ£ŸÖ ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\n      }\n    }\n\n    // Further check for Children Spouses (with childrenSpouseIds mapping and match)\n    if (match(sFatherId) || match(sMotherId)) {\n      console.log('‚úÖ Match: Children Spouses (extended)');\n      if (gender1 === 'Male') {\n        console.log(`${translatedName1} ŸáŸà ÿ≤Ÿàÿ¨ ÿßÿ®ŸÜÿ© ${translatedName2}`);\n        return `${translatedName1} ŸáŸà ÿ≤Ÿàÿ¨ ÿßÿ®ŸÜÿ© ${translatedName2}`;\n      } else {\n        console.log(`${translatedName1} ŸáŸä ÿ≤Ÿàÿ¨ÿ© ÿßÿ®ŸÜ ${translatedName2} | ${translatedName1} ŸáŸä ŸÉŸÜÿ© ${translatedName2}`);\n        return `${translatedName1} ŸáŸä ÿ≤Ÿàÿ¨ÿ© ÿßÿ®ŸÜ ${translatedName2} | ${translatedName1} ŸáŸä ŸÉŸÜÿ© ${translatedName2}`;\n      }\n    }\n    return \"ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÑÿßŸÇÿ© Ÿàÿßÿ∂ÿ≠ÿ©\";\n  }\n  const getAncestors = async (person1ID, person2ID) => {\n    setLoadingMessage(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿ£ÿ¨ÿØÿßÿØ ÿßŸÑŸÖÿ¥ÿ™ÿ±ŸÉÿ©\");\n    const result = await session.run(`\n          MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..12]->(p1:Person)\n          WHERE id(p1) = $person1ID\n\n          MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..12]->(p2:Person)\n          WHERE id(p2) = $person2ID\n            AND id(p1) <> id(p2)\n\n          WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\n\n          // Prioritize father ancestors by explicitly matching FATHER_OF first, then MOTHER_OF\n          OPTIONAL MATCH (cGF:Person)-[:FATHER_OF]->(cF:Person)-[:FATHER_OF]->(common)\n\n          // Check if the common ancestor is married and get the husband if married\n          OPTIONAL MATCH (common)-[:WIFE_OF]->(husband:Person)\n\n          // Include spouse information\n          WITH common, cF, cGF, husband, path1, path2, level1, level2\n\n          ORDER BY (level1 + level2) ASC\n          LIMIT 1\n\n          RETURN \n            // If common ancestor is female and married, return the husband's name\n            common.name AS commonAncestorName,\n            cF.name AS commonAncestorFatherName,\n            cGF.name AS commonAncestorGrandFatherName,\n            common.lastName AS commonAncestorLastName,\n            id(common) AS commonAncestorID,\n\n            common.gender AS commonAncestorGender,\n            level1 AS generationsFromP1,\n            level2 AS generationsFromP2,\n\n            // Include spouse information if married\n            CASE \n              WHEN husband IS NOT NULL THEN { id: id(husband), name: husband.name, lastName: husband.lastName, gender: husband.gender }\n              ELSE null\n            END AS spouseOfAncestor,\n\n            [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\n            [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\n\n\n        `, {\n      person1ID,\n      person2ID\n    });\n    const record = result.records[0];\n    if (result.records.length === 0) {\n      return null;\n    }\n    return {\n      id: record.get('commonAncestorID').toNumber(),\n      name: record.get('commonAncestorName'),\n      lastName: record.get('commonAncestorLastName'),\n      fatherName: record.get('commonAncestorFatherName'),\n      grandfatherName: record.get('commonAncestorGrandFatherName'),\n      gender: record.get('commonAncestorGender'),\n      spouseOfAncestor: record.get('spouseOfAncestor'),\n      levelFromP1: record.get('generationsFromP1').toNumber(),\n      levelFromP2: record.get('generationsFromP2').toNumber(),\n      pathFromAncestorToP1: record.get('pathToP1'),\n      pathFromAncestorToP2: record.get('pathToP2')\n    };\n  };\n  const getPersonMatches = async (personName, fatherName = \"\", grandfatherName = \"\", familyName) => {\n    let cypherQuery = ``;\n    const queryParamsObject = {};\n    if (personName) {\n      if (fatherName) {\n        if (grandfatherName) {\n          if (familyName) {\n            cypherQuery += `\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\n              WHERE child.name = $personName AND \n                    father.name = $fatherName AND \n                    grandfather.name = $grandfatherName AND \n                    child.lastName = $familyName\n              RETURN \n                id(child) AS childID,\n                child.name AS childName, \n                father.name AS fatherName, \n                grandfather.name AS grandfatherName, \n                child.lastName AS familyName,\n                child.gender AS gender,\n                child.YoB AS YoB,\n                child.YoD AS YoD\n            `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n            queryParamsObject.grandfatherName = grandfatherName;\n            queryParamsObject.familyName = familyName;\n          } else {\n            cypherQuery += `\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\n              WHERE child.name = $personName AND \n                    father.name = $fatherName AND\n                    grandfather.name = $grandfatherName\n              RETURN \n                    id(child) AS childID, \n                    child.name AS childName, \n                    father.name AS fatherName, \n                    grandfather.name AS grandfatherName,\n                    child.lastName AS familyName,\n                    child.gender AS gender,\n                    child.YoB AS YoB,\n                    child.YoD AS YoD\n              `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n            queryParamsObject.grandfatherName = grandfatherName;\n          }\n        } else {\n          if (familyName) {\n            cypherQuery += `\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\n            WHERE child.name = $personName AND \n                  father.name = $fatherName AND\n                  child.lastName = $familyName\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n            RETURN  \n              id(child) AS childID,\n              child.name AS childName, \n              father.name AS fatherName,\n              grandfather.name AS grandfatherName,\n              child.lastName AS familyName,\n              child.gender AS gender,\n              child.YoB AS YoB,\n              child.YoD AS YoD\n            `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n            queryParamsObject.familyName = familyName;\n          } else {\n            cypherQuery += `\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\n            \n            WHERE child.name = $personName AND \n                  father.name = $fatherName\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n            RETURN  id(child) AS childID, \n                    child.name AS childName, \n                    father.name AS fatherName, \n                    grandfather.name AS grandfatherName,\n                    child.lastName AS familyName,\n                    child.gender AS gender,\n                    child.YoB AS YoB,\n                    child.YoD AS YoD\n            `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n          }\n        }\n      } else {\n        if (familyName) {\n          cypherQuery += `\n          MATCH (child:Person)\n          WHERE child.name = $personName AND child.lastName = $familyName\n          OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n          RETURN \n            id(child) AS childID,\n            child.name AS childName, \n            father.name AS fatherName,\n            grandfather.name AS grandfatherName,\n            child.lastName AS familyName,\n            child.gender AS gender,\n            child.YoB AS YoB,\n            child.YoD AS YoD\n        `;\n          queryParamsObject.personName = personName;\n          queryParamsObject.familyName = familyName;\n        } else {\n          cypherQuery += `\n            MATCH (child:Person)\n            WHERE child.name = $personName\n            OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n            RETURN\n              id(child) AS childID,\n              child.name AS childName, \n              father.name AS fatherName, \n              grandfather.name AS grandfatherName,\n              child.lastName AS familyName,\n              child.gender AS gender,\n              child.YoB AS YoB,\n              child.YoD AS YoD\n          `;\n          queryParamsObject.personName = personName;\n        }\n      }\n    }\n    const session = driver.session();\n    try {\n      const result = await session.run(cypherQuery, queryParamsObject);\n      return result.records.map(record => ({\n        id: record.get('childID').toNumber(),\n        gender: record.get('gender'),\n        name: record.get('childName'),\n        father: record.get('fatherName') || \"\",\n        grandfather: record.get('grandfatherName') || \"\",\n        lastName: record.get('familyName') || \"\",\n        YoB: record.get(\"YoB\") || -1,\n        YoD: record.get(\"YoD\") || -1\n      }));\n    } catch (Error) {\n      console.error('Query Error:', Error);\n      setError('ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿßŸÑÿ®ÿ≠ÿ´.');\n    } finally {\n      await session.close();\n    }\n  };\n  const getRelationship = async (person1FullName, person2FullName) => {\n    const isArabic = text => /[\\u0600-\\u06FF]/.test(text);\n    let gender1, gender2;\n    let relationshipType;\n    let relation = '',\n      score = 0;\n    let explanation;\n    let relationshipExplanation = [{\n      type: \"ÿßŸÑÿπÿßÿ¶ŸÑÿ©\",\n      explanation: \"Ÿáÿ§ŸÑÿßÿ° ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ŸäŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿ∞Ÿà ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑÿ£ŸàŸÑŸâ.\"\n    }, {\n      type: \"ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿßŸÑŸÖŸÇÿ±ÿ®ÿ©\",\n      explanation: \"Ÿáÿ§ŸÑÿßÿ° ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ŸäŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ£ÿπŸÖÿßŸÖ Ÿàÿ£ÿÆŸàÿßŸÑ ŸÖÿ¥ÿ™ÿ±ŸÉŸäŸÜ.\"\n    }, {\n      type: \"ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿßŸÑŸÖŸàÿ≥ÿπÿ©\",\n      explanation: \"Ÿáÿ§ŸÑÿßÿ° ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ŸäŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ£ÿπŸÖÿßŸÖ ÿ£Ÿà ÿ£ÿÆŸàÿßŸÑ ÿßŸÑÿ£ÿ® ÿå ÿ£Ÿà ÿ£ÿ¨ÿØÿßÿØ ÿßŸÑÿ£ÿ® Ÿà ÿßŸÑÿ£ŸÖ.\"\n    }, {\n      type: \"ŸÇÿ±ÿßÿ®ÿ© ÿßŸÑÿ≤Ÿàÿßÿ¨\",\n      explanation: \"Ÿáÿ∞ÿßŸÜ ÿßŸÑÿ¥ÿÆÿµÿßŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ÿßŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿ≤Ÿàÿßÿ¨.\"\n    }, {\n      type: \"ÿµŸáÿ± / ŸÜÿ≥Ÿäÿ®\",\n      explanation: \"Ÿáÿ∞ÿßŸÜ ÿßŸÑÿ¥ÿÆÿµÿßŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ÿßŸÜ ÿπÿ®ÿ± ÿßŸÑÿ≤Ÿàÿßÿ¨ ŸàŸÑŸäÿ≥ ÿßŸÑŸÜÿ≥ÿ® ÿßŸÑÿØŸÖŸàŸä.\"\n    }, {\n      type: \"ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÑÿßŸÇÿ©\",\n      explanation: \"ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ£Ÿä ÿµŸÑÿ© ŸÇÿ±ÿßÿ®ÿ© ÿ®ŸäŸÜ ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÅŸä ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™.\"\n    }, {\n      type: \"ŸÜŸÅÿ≥ ÿßŸÑÿ¥ÿÆÿµ\",\n      explanation: \"ÿßŸÑÿßÿ≥ŸÖŸäŸÜ Ÿäÿ¥Ÿäÿ±ÿßŸÜ ÿ•ŸÑŸâ ŸÜŸÅÿ≥ ÿßŸÑÿ¥ÿÆÿµ.\"\n    }];\n\n    // Split the full names first (before translation)\n    const {\n      personName: person1Name,\n      fatherName: person1FatherName,\n      grandfatherName: person1GrandfatherName,\n      familyName: person1LastName\n    } = splitName(person1FullName);\n    const {\n      personName: person2Name,\n      fatherName: person2FatherName,\n      grandfatherName: person2GrandfatherName,\n      familyName: person2LastName\n    } = splitName(person2FullName);\n    console.log(\"Name\", person1Name, \" Father : \", person1FatherName);\n    // Translate each part separately\n    let translatedPerson1Name = isArabic(person1Name) ? translateName(person1Name, false) : person1Name;\n    let translatedPerson1FatherName = isArabic(person1FatherName) ? translateName(person1FatherName, false) : person1FatherName;\n    let translatedPerson1GrandfatherName = isArabic(person1GrandfatherName) ? translateName(person1GrandfatherName, false) : person1GrandfatherName;\n    let translatedPerson1LastName = isArabic(person1LastName) ? translateName(person1LastName, false) : person1LastName;\n    let translatedPerson2Name = isArabic(person2Name) ? translateName(person2Name, false) : person2Name;\n    let translatedPerson2FatherName = isArabic(person2FatherName) ? translateName(person2FatherName, false) : person2FatherName;\n    let translatedPerson2GrandfatherName = isArabic(person2GrandfatherName) ? translateName(person2GrandfatherName, false) : person2GrandfatherName;\n    let translatedPerson2LastName = isArabic(person2LastName) ? translateName(person2LastName, false) : person2LastName;\n    const errorContainer = document.getElementById('error-container');\n    try {\n      const person1Matches = await getPersonMatches(translatedPerson1Name, translatedPerson1FatherName, translatedPerson1GrandfatherName, translatedPerson1LastName);\n      if (person1Matches.length === 0) {\n        throw new Error(`ŸÑÿß ŸäŸàÿ¨ÿØ ÿ£ÿ¥ÿÆÿßÿµ ÿ®ÿ•ÿ≥ŸÖ ${person1FullName} ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßŸÑÿ™ÿ´ÿ®ÿ™ ŸÅŸä ÿßŸÑÿ•ÿ≥ŸÖ ÿ¨ŸäÿØÿß`);\n      }\n      const person2Matches = await getPersonMatches(translatedPerson2Name, translatedPerson2FatherName, translatedPerson2GrandfatherName, translatedPerson2LastName);\n      if (person2Matches.length === 0) {\n        throw new Error(`ŸÑÿß ŸäŸàÿ¨ÿØ ÿ£ÿ¥ÿÆÿßÿµ ÿ®ÿ•ÿ≥ŸÖ ${person2FullName} ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßŸÑÿ™ÿ´ÿ®ÿ™ ŸÅŸä ÿßŸÑÿ•ÿ≥ŸÖ ÿ¨ŸäÿØÿß`);\n      }\n      setLoadingMessage(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿ£ÿ¥ÿÆÿßÿµ\");\n      console.log(\"P1 matches : \", person1Matches);\n      console.log(\"P2 matches : \", person2Matches);\n      let person1ID, person2ID;\n      if (person1Matches.length > 1 || person2Matches.length > 1) {\n        return {\n          error: 'non-unique-name',\n          message: 'ÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿπÿØÿ© ÿ£ÿ¥ÿÆÿßÿµ ÿ®ŸÜŸÅÿ≥ ÿßŸÑÿßÿ≥ŸÖ. ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿµÿ≠Ÿäÿ≠.',\n          duplicates: {\n            person1: person1Matches.length > 1 ? person1Matches : [],\n            person2: person2Matches.length > 1 ? person2Matches : []\n          }\n        };\n      } else {\n        person1ID = person1Matches[0].id;\n        person2ID = person2Matches[0].id;\n        gender1 = person1Matches[0].gender;\n        gender2 = person2Matches[0].gender;\n      }\n      const translatedName1 = translateName(person1Matches[0].name + \" \" + person1Matches[0].lastName);\n      const translatedName2 = translateName(person2Matches[0].name + \" \" + person2Matches[0].lastName);\n      console.log(person1Matches[0], person2Matches[0]);\n    } catch (error) {\n      console.error('Error in relationship lookup:', error);\n      setError(`‚ùå ÿÆÿ∑ÿ£: ${error.message || error}`);\n      if (errorContainer) {\n        errorContainer.innerText = `‚ùå ÿÆÿ∑ÿ£: ${error.message || error}`;\n      }\n      setLoading(false);\n      return '';\n    }\n  };\n  useEffect(() => {\n    if (selectedPerson1 && selectedPerson2) {\n      fetchRelationship(null, selectedPerson1, selectedPerson2);\n    }\n  }, [selectedPerson1, selectedPerson2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relation-page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relation-form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\u0645\\u0627\\u0647\\u064A \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\\u061F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"DescriptionZone\",\n          children: \"\\u0627\\u0644\\u0647\\u062F\\u0641 \\u0645\\u0646 \\u0647\\u0630\\u0647 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0647\\u0648 \\u062A\\u062D\\u062F\\u064A\\u062F \\u0635\\u0644\\u0629 \\u0627\\u0644\\u0642\\u0631\\u0627\\u0628\\u0629 \\u0628\\u064A\\u0646 \\u0634\\u062E\\u0635\\u064A\\u0646 \\u0628\\u0646\\u0627\\u0621\\u064B\\u0627 \\u0639\\u0644\\u0649 \\u0627\\u0633\\u0645\\u0647\\u0645. \\u0643\\u0644 \\u0645\\u0627\\u0639\\u0644\\u064A\\u0643 \\u0641\\u0639\\u0644\\u0647 \\u0647\\u0648 \\u0627\\u062F\\u062E\\u0627\\u0644 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0627\\u0648\\u0644 \\u0648\\u0627\\u0644\\u062B\\u0627\\u0646\\u064A \\u0648\\u062B\\u0645 \\u0627\\u0644\\u0646\\u0642\\u0631 \\u0639\\u0644\\u0649 \\\"\\u0627\\u0644\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\\\" \\u0633\\u062A\\u0638\\u0647\\u0631 \\u0644\\u0643 \\u0627\\u0644\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0641\\u064A \\u0627\\u0633\\u0647\\u0644 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0648\\u0627\\u0644\\u062A\\u064A \\u064A\\u062A\\u0648\\u0636\\u062D \\u0644\\u0643 \\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0648\\u0645\\u062F\\u0649 \\u0642\\u0631\\u0627\\u0628\\u062A\\u0647\\u0627\\u061F \\u0641\\u064A \\u062D\\u0627\\u0644 \\u0648\\u062C\\u0648\\u062F \\u0627\\u064A \\u062A\\u0634\\u0627\\u0628\\u0647\\u0627\\u062A \\u0627\\u0648 \\u062A\\u0643\\u0631\\u0627\\u0631\\u0627\\u062A \\u0641\\u064A \\u0627\\u0644\\u0627\\u0633\\u0645\\u0627\\u0621 \\u0633\\u064A\\u0645 \\u062A\\u0648\\u0641\\u064A\\u0631 \\u062E\\u064A\\u0627\\u0631\\u0627\\u062A \\u0644\\u062A\\u062D\\u062F\\u064A\\u062F \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: fetchRelationship,\n          className: \"relation-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u0623\\u0648\\u0644\",\n              value: person1,\n              onChange: e => setPerson1(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u062B\\u0627\\u0646\\u064A\",\n              value: person2,\n              onChange: e => setPerson2(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ButtonSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button checkButton\",\n              children: \"\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"button resetButton\",\n              children: \"\\u0625\\u0644\\u063A\\u0627\\u0621\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button swapButton\",\n              onClick: () => {\n                // Swap the values of person1 and person2\n                setPerson1(person2);\n                setPerson2(person1);\n              },\n              children: \"\\u062A\\u0628\\u062F\\u064A\\u0644 \\u0627\\u0644\\u0623\\u0634\\u062E\\u0627\\u0635\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 9\n        }, this), (duplicates.person1.length > 0 || duplicates.person2.length > 0) && /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"duplicates-panel\",\n          children: [duplicates.person1.length > 0 && !selectedPerson1 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"duplicates-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83E\\uDDE0 \\u0623\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0645\\u0642\\u0635\\u0648\\u062F (\\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0623\\u0648\\u0644):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"person-info-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0627\\u0644\\u0627\\u0633\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0633\\u0646\\u0629 \\u0627\\u0644\\u0645\\u064A\\u0644\\u0627\\u062F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0633\\u0646\\u0629 \\u0627\\u0644\\u0648\\u0641\\u0627\\u0629\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 927,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0627\\u062E\\u062A\\u064A\\u0627\\u0631\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: duplicates.person1.map((p, idx) => {\n                  const fullName = (p.name ? `${translateName(p.name)} ÿ®ŸÜ ` : '') + (p.father ? `${translateName(p.father)} ÿ®ŸÜ ` : '') + (p.grandfather ? `${translateName(p.grandfather)} ` : '') + (p.lastName ? `${translateName(p.lastName)}` : '');\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 941,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: p.YoB !== -1 ? p.YoB : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 942,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: p.YoD !== -1 ? p.YoD : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 943,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"duplicate-button\",\n                        onClick: () => {\n                          setSelectedPerson1(fullName);\n                        },\n                        children: \"\\u0627\\u062E\\u062A\\u064A\\u0627\\u0631\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 944,\n                      columnNumber: 27\n                    }, this)]\n                  }, `p1-${idx}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 15\n          }, this), duplicates.person2.length > 0 && !selectedPerson2 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"duplicates-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83E\\uDDE0 \\u0623\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0645\\u0642\\u0635\\u0648\\u062F (\\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u062B\\u0627\\u0646\\u064A):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"person-info-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0627\\u0644\\u0627\\u0633\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0633\\u0646\\u0629 \\u0627\\u0644\\u0645\\u064A\\u0644\\u0627\\u062F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0633\\u0646\\u0629 \\u0627\\u0644\\u0648\\u0641\\u0627\\u0629\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0627\\u062E\\u062A\\u064A\\u0627\\u0631\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: duplicates.person2.map((p, idx) => {\n                  const fullName = (p.name ? `${translateName(p.name)} ÿ®ŸÜ ` : '') + (p.father ? `${translateName(p.father)} ÿ®ŸÜ ` : '') + (p.grandfather ? `${translateName(p.grandfather)} ` : '') + (p.lastName ? `${translateName(p.lastName)}` : '');\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 987,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: p.YoB !== -1 ? p.YoB : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 988,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: p.YoD !== -1 ? p.YoD : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 989,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"duplicate-button\",\n                        onClick: () => {\n                          setSelectedPerson2(fullName);\n                        },\n                        children: \"\\u0627\\u062E\\u062A\\u064A\\u0627\\u0631\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 27\n                    }, this)]\n                  }, `p2-${idx}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 986,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 17\n      }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: loadingMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 9\n      }, this), !loading && relationship && !error && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relationship-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"foundPersons\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0627\\u0644\\u0623\\u0634\\u062E\\u0627\\u0635 \\u0627\\u0644\\u0630\\u064A\\u0646 \\u062A\\u0645 \\u0627\\u0644\\u0628\\u062D\\u062B \\u0639\\u0646\\u0647\\u0645:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-card\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [translateName((_relationship$relatio = (_relationship$relatio2 = relationship.relationshipPerson1Details) === null || _relationship$relatio2 === void 0 ? void 0 : _relationship$relatio2.name) !== null && _relationship$relatio !== void 0 ? _relationship$relatio : ''), ((_relationship$relatio3 = relationship.relationshipPerson1Details) === null || _relationship$relatio3 === void 0 ? void 0 : _relationship$relatio3.father) && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson1Details.father)}`, ((_relationship$relatio4 = relationship.relationshipPerson1Details) === null || _relationship$relatio4 === void 0 ? void 0 : _relationship$relatio4.grandfather) && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson1Details.grandfather)}`, ((_relationship$relatio5 = relationship.relationshipPerson1Details) === null || _relationship$relatio5 === void 0 ? void 0 : _relationship$relatio5.lastName) && ` ${translateName(relationship.relationshipPerson1Details.lastName)}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-card\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [translateName((_relationship$relatio6 = (_relationship$relatio7 = relationship.relationshipPerson2Details) === null || _relationship$relatio7 === void 0 ? void 0 : _relationship$relatio7.name) !== null && _relationship$relatio6 !== void 0 ? _relationship$relatio6 : ''), ((_relationship$relatio8 = relationship.relationshipPerson2Details) === null || _relationship$relatio8 === void 0 ? void 0 : _relationship$relatio8.father) && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson2Details.father)}`, ((_relationship$relatio9 = relationship.relationshipPerson2Details) === null || _relationship$relatio9 === void 0 ? void 0 : _relationship$relatio9.grandfather) && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson2Details.grandfather)}`, ((_relationship$relatio0 = relationship.relationshipPerson2Details) === null || _relationship$relatio0 === void 0 ? void 0 : _relationship$relatio0.lastName) && ` ${translateName(relationship.relationshipPerson2Details.lastName)}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"resultTitle\",\n          children: \"\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"relationText\",\n          children: relationship.relationshipDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"result-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062F\\u0631\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"score-cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score-bar-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"score-bar-fill\",\n                      style: {\n                        width: `${(_relationship$relatio1 = relationship.relationshipScore) !== null && _relationship$relatio1 !== void 0 ? _relationship$relatio1 : 0}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1061,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"score-value\",\n                      children: (_relationship$relatio10 = relationship.relationshipScore) !== null && _relationship$relatio10 !== void 0 ? _relationship$relatio10 : 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1064,\n                      columnNumber: 23\n                    }, this), relationship.relationshipScore !== null && relationship.relationshipScore !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: relationship.relationshipScore >= 80 ? \"score-category high\" : relationship.relationshipScore >= 60 ? \"score-category medium\" : \"score-category low\",\n                      children: relationship.relationshipScore >= 80 ? \"ŸÇŸàŸäÿ©\" : relationship.relationshipScore >= 60 ? \"ŸÖÿ™Ÿàÿ≥ÿ∑ÿ©\" : \"ÿ∂ÿπŸäŸÅÿ©\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1066,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1063,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1086,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"relationship-tag\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `tag ${relationship.relationshipType}`,\n                    children: relationship.relationshipType === \"Blood\" ? \"ÿØŸÖ\" : relationship.relationshipType === \"Marriage-related\" ? \"ÿ≤Ÿàÿßÿ¨ ŸÖÿ±ÿ™ÿ®ÿ∑\" : relationship.relationshipType === \"Marriage\" ? \"ÿ≤Ÿàÿßÿ¨\" : relationship.relationshipType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062A\\u0641\\u0633\\u064A\\u0631 \\u0625\\u0636\\u0627\\u0641\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"relation-explanation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"relation-explanation-type\",\n                    children: (_relationship$relatio11 = relationship.relationshipExplanationType) !== null && _relationship$relatio11 !== void 0 ? _relationship$relatio11 : 'ŸÜŸàÿπ ÿßŸÑÿ™ŸÅÿ≥Ÿäÿ± ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1100,\n                    columnNumber: 21\n                  }, this), \":\", (_relationship$relatio12 = relationship.relationshipExplanationDesc) !== null && _relationship$relatio12 !== void 0 ? _relationship$relatio12 : \"ŸÑÿß ŸäŸàÿ¨ÿØ ÿ™ŸÅÿ≥Ÿäÿ± ŸÖÿ™ÿßÿ≠.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627 \\u062D\\u0633\\u0628 \\u0627\\u0644\\u062C\\u062F \\u0627\\u0644\\u0645\\u0634\\u062A\\u0631\\u0643\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"generation-distance\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tooltip-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"numGen\",\n                      children: (_relationship$relatio13 = relationship.relationshipGenerationGap) !== null && _relationship$relatio13 !== void 0 ? _relationship$relatio13 : '-'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1111,\n                      columnNumber: 23\n                    }, this), \" \\u0623\\u062C\\u064A\\u0627\\u0644\", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"custom-tooltip\",\n                      children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0647\\u0648 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u0634\\u062E\\u0627\\u0635 \\u0627\\u0644\\u0641\\u0627\\u0635\\u0644\\u064A\\u0646 \\u0641\\u064A \\u0634\\u062C\\u0631\\u0629 \\u0627\\u0644\\u0639\\u0627\\u0626\\u0644\\u0629 \\u0628\\u064A\\u0646 \\u0627\\u0644\\u0634\\u062E\\u0635\\u064A\\u0646.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1112,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1110,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tooltip-container\",\n                    children: [\"\\u0627\\u0644\\u062C\\u062F \\u0627\\u0644\\u0645\\u0634\\u062A\\u0631\\u0643\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"custom-tooltip\",\n                      children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0647\\u0648 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u0634\\u062E\\u0627\\u0635 \\u0627\\u0644\\u0641\\u0627\\u0635\\u0644\\u064A\\u0646 \\u0641\\u064A \\u0634\\u062C\\u0631\\u0629 \\u0627\\u0644\\u0639\\u0627\\u0626\\u0644\\u0629 \\u0628\\u064A\\u0646 \\u0627\\u0644\\u0634\\u062E\\u0635\\u064A\\u0646.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1122,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1120,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"generation-distance\",\n                  children: [((_relationship$commonA = relationship.commonAncestor) === null || _relationship$commonA === void 0 ? void 0 : _relationship$commonA.ancestorName) && `${(_relationship$commonA2 = relationship.commonAncestor) === null || _relationship$commonA2 === void 0 ? void 0 : _relationship$commonA2.ancestorName} ÿ®ŸÜ `, ((_relationship$commonA3 = relationship.commonAncestor) === null || _relationship$commonA3 === void 0 ? void 0 : _relationship$commonA3.ancestorFatherName) && `${(_relationship$commonA4 = relationship.commonAncestor) === null || _relationship$commonA4 === void 0 ? void 0 : _relationship$commonA4.ancestorFatherName} ÿ®ŸÜ `, ((_relationship$commonA5 = relationship.commonAncestor) === null || _relationship$commonA5 === void 0 ? void 0 : _relationship$commonA5.ancestorGrandFatherName) && `${(_relationship$commonA6 = relationship.commonAncestor) === null || _relationship$commonA6 === void 0 ? void 0 : _relationship$commonA6.ancestorGrandFatherName} `, ((_relationship$commonA7 = relationship.commonAncestor) === null || _relationship$commonA7 === void 0 ? void 0 : _relationship$commonA7.ancestorLastName) && `${(_relationship$commonA8 = relationship.commonAncestor) === null || _relationship$commonA8 === void 0 ? void 0 : _relationship$commonA8.ancestorLastName}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-wrapper\",\n            style: {\n              height: `${Math.max((Math.max((_relationship$relatio14 = (_relationship$relatio15 = relationship.relationshipLevels) === null || _relationship$relatio15 === void 0 ? void 0 : _relationship$relatio15.levelFromP1) !== null && _relationship$relatio14 !== void 0 ? _relationship$relatio14 : 0, (_relationship$relatio16 = (_relationship$relatio17 = relationship.relationshipLevels) === null || _relationship$relatio17 === void 0 ? void 0 : _relationship$relatio17.levelFromP2) !== null && _relationship$relatio16 !== void 0 ? _relationship$relatio16 : 0) + 1) * 100, 100 // Ensure minimum height is 100px\n              ) + 1}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"titleTree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 17\n            }, this), relationship.ancestorstreeData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-container\",\n              children: /*#__PURE__*/_jsxDEV(Tree, {\n                data: relationship.ancestorstreeData,\n                orientation: \"vertical\",\n                pathFunc: \"step\",\n                nodeSize: {\n                  x: 50,\n                  y: 90\n                },\n                separation: {\n                  siblings: 3,\n                  nonSiblings: 3\n                },\n                translate: {\n                  x: 325,\n                  y: 27\n                },\n                renderCustomNodeElement: ({\n                  nodeDatum\n                }) => /*#__PURE__*/_jsxDEV(\"g\", {\n                  className: \"tree-node\",\n                  children: [/*#__PURE__*/_jsxDEV(\"title\", {\n                    children: nodeDatum.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1156,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                    className: \"tree-node-rect\",\n                    x: \"-50\",\n                    y: \"-20\",\n                    width: \"100\",\n                    height: \"40\",\n                    style: {\n                      fill: nodeDatum.id === relationship.person1ID || nodeDatum.id === relationship.person2ID ? '#d3f9d8' // Leaf node color (light green)\n                      : nodeDatum.id === relationship.commonAncestor.ancestorID ? '#ffe4b5' // Ancestor node color (light yellow)\n                      : '#ffffff',\n                      // Default color for other nodes\n                      stroke: nodeDatum.id === relationship.person1ID || nodeDatum.id === relationship.person2ID ? '#4caf50' // Leaf node border (green)\n                      : nodeDatum.id === relationship.commonAncestor.ancestorID ? '#ffa500' // Ancestor node border (orange)\n                      : '#4a90e2',\n                      // Default border color\n                      strokeWidth: '2.5px',\n                      rx: '10',\n                      // Rounded corners\n                      ry: '10' // Rounded corners\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1157,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"tree-node-text\",\n                    x: \"0\",\n                    y: \"5\",\n                    style: {\n                      fontSize: '16px',\n                      fontFamily: 'Cairo',\n                      fill: nodeDatum.id === relationship.person1ID || nodeDatum.id === relationship.person2ID ? '#388e3c' // Leaf node text color (dark green)\n                      : nodeDatum.id === relationship.commonAncestor.ancestorID ? '#ff9800' // Ancestor node text color (orange)\n                      : '#333',\n                      // Default text color (dark gray)\n                      textAnchor: 'middle',\n                      dominantBaseline: 'middle',\n                      letterSpacing: '1px',\n                      strokeWidth: '1px',\n                      pointerEvents: 'none'\n                    },\n                    children: translateName(nodeDatum.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1180,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 871,\n    columnNumber: 5\n  }, this);\n};\n_s(RelationPage, \"nibM5RrjipkoR46WLuIeNV6hbYQ=\");\n_c = RelationPage;\nexport default RelationPage;\nvar _c;\n$RefreshReg$(_c, \"RelationPage\");","map":{"version":3,"names":["React","useEffect","useState","Tree","jsxDEV","_jsxDEV","translations","require","compoundNames","config","neo4jURI","process","env","REACT_APP_NEO4J_URI","neo4jUser","REACT_APP_NEO4J_USER","neo4jPassword","REACT_APP_NEO4J_PASSWORD","driver","auth","basic","session","countBenAndBent","str","words","trim","split","length","interior","slice","filter","w","isCompoundName","name","Object","values","includes","splitName","fullName","parts","replace","bentCount","console","log","compundName","personName","fatherName","grandfatherName","familyName","buildTreePath","path","reduceRight","acc","person","id","toNumber","lastName","children","mergePaths","pathToP1","pathToP2","ancestor","branch1","branch2","push","undefined","translateName","language","reverseTranslations","fromEntries","entries","map","key","value","reverseCompound","dict","compoundDict","normalized","nameParts","translatedParts","part","join","RelationPage","_s","_relationship$relatio","_relationship$relatio2","_relationship$relatio3","_relationship$relatio4","_relationship$relatio5","_relationship$relatio6","_relationship$relatio7","_relationship$relatio8","_relationship$relatio9","_relationship$relatio0","_relationship$relatio1","_relationship$relatio10","_relationship$relatio11","_relationship$relatio12","_relationship$relatio13","_relationship$commonA","_relationship$commonA2","_relationship$commonA3","_relationship$commonA4","_relationship$commonA5","_relationship$commonA6","_relationship$commonA7","_relationship$commonA8","_relationship$relatio14","_relationship$relatio15","_relationship$relatio16","_relationship$relatio17","person1","setPerson1","person2","setPerson2","relationship","setRelationship","duplicates","setDuplicates","error","setError","selectedPerson1","setSelectedPerson1","selectedPerson2","setSelectedPerson2","loading","setLoading","loadingMessage","setLoadingMessage","fetchRelationship","e","customPerson1","customPerson2","preventDefault","relationshipDescription","relationshipScore","_result$person","_result$person2","_result$score","_result$levelsTuple","_result$generation","_result$explanation$t","_result$explanation","_result$explanation$e","_result$explanation2","_result$relationshipT","_result$ancestor","_result$treeData","_result$person1ID","_result$person2ID","result","getRelationship","_result$duplicates","message","relation","relationshipPerson1Details","relationshipPerson2Details","score","relationshipLevels","levelsTuple","relationshipGenerationGap","generation","relationshipExplanationType","explanation","type","relationshipExplanationDesc","relationshipType","commonAncestor","ancestorstreeData","treeData","person1ID","person2ID","checkMarriage","gender1","gender2","areMarried","run","records","record","P1","get","properties","P2","getMarriageRelation","translatedName1","translatedName2","_ownRecord$get$toNumb","_ownRecord$get","_ownRecord$get$toNumb2","_ownRecord$get2","_ownRecord$get3","_ownRecord$get4","_ownRecord$get5","_ownRecord$get6","_spouseRecord$get$toN","_spouseRecord$get","_spouseRecord$get$toN2","_spouseRecord$get2","_spouseRecord$get3","_spouseRecord$get4","_spouseRecord$get5","ownFamilyQuery","ownResult","personId","ownRecord","fatherId","motherId","siblingIds","siblingSpouseIds","childIds","fchildrenSpouseIds","spouseFamilyQuery","spouseResult","spouseRecord","sFatherId","sMotherId","sSiblingIds","sSiblingSpouseIds","childrenSpouseIds","match","isIn","list","some","getAncestors","gender","spouseOfAncestor","levelFromP1","levelFromP2","pathFromAncestorToP1","pathFromAncestorToP2","getPersonMatches","cypherQuery","queryParamsObject","father","grandfather","YoB","YoD","Error","close","person1FullName","person2FullName","isArabic","text","test","relationshipExplanation","person1Name","person1FatherName","person1GrandfatherName","person1LastName","person2Name","person2FatherName","person2GrandfatherName","person2LastName","translatedPerson1Name","translatedPerson1FatherName","translatedPerson1GrandfatherName","translatedPerson1LastName","translatedPerson2Name","translatedPerson2FatherName","translatedPerson2GrandfatherName","translatedPerson2LastName","errorContainer","document","getElementById","person1Matches","person2Matches","innerText","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","onClick","p","idx","style","width","ancestorName","ancestorFatherName","ancestorGrandFatherName","ancestorLastName","height","Math","max","data","orientation","pathFunc","nodeSize","x","y","separation","siblings","nonSiblings","translate","renderCustomNodeElement","nodeDatum","fill","ancestorID","stroke","strokeWidth","rx","ry","fontSize","fontFamily","textAnchor","dominantBaseline","letterSpacing","pointerEvents","_c","$RefreshReg$"],"sources":["D:/Study/Projects/Copy 4/client/src/components/RelationChecker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Tree from 'react-d3-tree';\r\nimport './RelationChecker.css';\r\nconst translations = require('./translation.json');\r\nconst compoundNames = require('./compundNames.json');\r\nrequire('dotenv').config();\r\n\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nconst driver = require('neo4j-driver').driver(\r\n    neo4jURI,\r\n    require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n);\r\nconst session = driver.session();\r\n\r\nfunction countBenAndBent(str) {\r\n  const words = str.trim().split(/\\s+/);\r\n  if (words.length < 3) return 0;\r\n  const interior = words.slice(1, -1);\r\n  return interior.filter(w => w === 'ÿ®ŸÜ' || w === 'ÿ®ŸÜÿ™').length;\r\n}\r\n\r\nfunction isCompoundName(name) {\r\n  return Object.values(compoundNames).includes(name);\r\n}\r\n\r\nfunction splitName(fullName) {\r\n  const parts = fullName.replace(/\\s*(ÿ®ŸÜ|ÿ®ŸÜÿ™)\\s*/gi, ' ').trim().split(/\\s+/);\r\n  const bentCount = countBenAndBent(fullName);\r\n\r\n  if (isCompoundName(parts[0] + \" \" + parts[1])) {\r\n    console.log(\"It's a compound name!\");\r\n  }\r\n  let compundName;\r\n\r\n  if (parts.length === 2) {\r\n    if (bentCount === 0) {\r\n      if (isCompoundName(parts[0]+ \" \" + parts[1])){\r\n        compundName = `${parts[0]} ${parts[1]}`;\r\n        return {\r\n          personName: compundName,\r\n          fatherName: \"\",\r\n          grandfatherName: \"\",\r\n          familyName: \"\"\r\n        };\r\n      }\r\n      else{\r\n        return {\r\n          personName: parts[0],\r\n          fatherName: \"\",\r\n          grandfatherName: \"\",\r\n          familyName: parts[1]\r\n        };\r\n      }\r\n    } \r\n    else if (bentCount === 1) {\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: \"\",\r\n        familyName: \"\"\r\n      };\r\n    }\r\n  } \r\n\r\n  else if (parts.length === 3) {\r\n    if (bentCount === 1) {\r\n      if (isCompoundName(parts[0]+ \" \" + parts[1])){\r\n        console.log(\"COMPUND DETECTED\");\r\n        compundName = `${parts[0]} ${parts[1]}`;\r\n        return {\r\n          personName: compundName,\r\n          fatherName: parts[2],\r\n          grandfatherName: \"\",\r\n          familyName: \"\"\r\n        };\r\n      }\r\n      else if (isCompoundName(parts[1]+ \" \" + parts[2])){\r\n          console.log(\"COMPUND DETECTED\");\r\n          compundName = `${parts[1]} ${parts[2]}`;\r\n          return {\r\n            personName: parts[0],\r\n            fatherName: compundName,\r\n            grandfatherName: \"\",\r\n            familyName: \"\"\r\n          };\r\n        }\r\n      else{\r\n        return {\r\n          personName: parts[0],\r\n          fatherName: parts[1],\r\n          grandfatherName: \"\",\r\n          familyName: parts[2]\r\n        };}\r\n        \r\n    }\r\n    else if (bentCount === 2) {\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: parts[2],\r\n        familyName: \"\"\r\n      };\r\n    }\r\n  }\r\n\r\n  else if (parts.length === 4) {\r\n    if (bentCount === 1) {\r\n      if (isCompoundName(parts[0]+ \" \" + parts[1]) && isCompoundName(parts[2]+ \" \" + parts[3])){\r\n        return {\r\n          personName: `${parts[0]} ${parts[1]}`,\r\n          fatherName: `${parts[2]} ${parts[3]}`,\r\n          grandfatherName: \"\",\r\n          familyName: \"\"\r\n        };\r\n      }\r\n      if (isCompoundName(parts[0]+ \" \" + parts[1])){\r\n        return {\r\n          personName: `${parts[0]} ${parts[1]}`,\r\n          fatherName: parts[2],\r\n          grandfatherName: \"\",\r\n          familyName: parts[3]\r\n        };\r\n      }\r\n      if (isCompoundName(parts[1]+ \" \" + parts[2])){\r\n        return {\r\n          personName: parts[0],\r\n          fatherName: `${parts[1]} ${parts[2]}`,\r\n          grandfatherName: \"\",\r\n          familyName: parts[3]\r\n        };\r\n      }\r\n    }\r\n    else if (bentCount === 2){\r\n        if (isCompoundName(parts[0]+ \" \" + parts[1])){\r\n          return {\r\n            personName: `${parts[0]} ${parts[1]}`,\r\n            fatherName: parts[2],\r\n            grandfatherName: parts[3],\r\n            familyName: \"\"\r\n          };\r\n        }\r\n        if (isCompoundName(parts[1] + \" \" + parts[2])){\r\n          return {\r\n            personName: parts[0],\r\n            fatherName: `${parts[1]} ${parts[2]}`,\r\n            grandfatherName: parts[3],\r\n            familyName: \"\"\r\n          };\r\n        }\r\n    }\r\n  }\r\n  else if (parts.length === 5) {\r\n    if (bentCount === 2){\r\n      if (isCompoundName(parts[0]+ \" \" + parts[1])){\r\n        return {\r\n          personName: `${parts[0]} ${parts[1]}`,\r\n          fatherName: parts[2],\r\n          grandfatherName: parts[3],\r\n          familyName: parts[4]\r\n        };\r\n      }\r\n      if (isCompoundName(parts[1] + \" \" + parts[2])){\r\n        return {\r\n          personName: parts[0],\r\n          fatherName: `${parts[1]} ${parts[2]}`,\r\n          grandfatherName: parts[3],\r\n          familyName: parts[4]\r\n        };\r\n      }\r\n      if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2]+ \" \" + parts[3])){\r\n        return {\r\n          personName: `${parts[0]} ${parts[1]}`,\r\n          fatherName: `${parts[2]} ${parts[3]}`,\r\n          grandfatherName: parts[4],\r\n          familyName: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n  else if (parts.length === 6) {\r\n    if (bentCount === 2){\r\n      if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2]+ \" \" + parts[3]) && isCompoundName(parts[4]+ \" \" + parts[5])){\r\n        return {\r\n          personName: `${parts[0]} ${parts[1]}`,\r\n          fatherName: `${parts[2]} ${parts[3]}`,\r\n          grandfatherName: `${parts[4]} ${parts[5]}`,\r\n          familyName: \"\"\r\n        };\r\n      }\r\n    }\r\n  }\r\n  else if (parts.length === 7) {\r\n      if (isCompoundName(parts[0] + \" \" + parts[1]) && isCompoundName(parts[2]+ \" \" + parts[3]) && isCompoundName(parts[4]+ \" \" + parts[5])){\r\n        return {\r\n          personName: `${parts[0]} ${parts[1]}`,\r\n          fatherName: `${parts[2]} ${parts[3]}`,\r\n          grandfatherName: `${parts[4]} ${parts[5]}`,\r\n          familyName: parts[6]\r\n        };\r\n      }\r\n  }\r\n  return { personName: parts[0], fatherName: \"\", grandfatherName: \"\", familyName: parts[1] || \"\" };\r\n}\r\n\r\nfunction buildTreePath(path) {\r\n  // Handle case where the path is empty\r\n  if (path.length === 0) return null;\r\n\r\n  return path.reduceRight((acc, person) => {\r\n    return {\r\n      id: (person.id).toNumber(),\r\n      name: `${person.name} ${person.lastName}`,\r\n      children: acc ? [acc] : []\r\n    };\r\n  }, null);\r\n}\r\n\r\nfunction mergePaths(pathToP1, pathToP2) {\r\n  // Handle empty paths by returning null or an empty object\r\n  if (pathToP1.length === 0 && pathToP2.length === 0) return null;\r\n\r\n  const ancestor = pathToP1[0]; // Assuming both paths share the same ancestor\r\n  const branch1 = pathToP1.slice(1);\r\n  const branch2 = pathToP2.slice(1);\r\n\r\n  // Check if any of the branches are empty and handle accordingly\r\n  const children = [];\r\n  if (branch1.length > 0) {\r\n    children.push(buildTreePath(branch1));\r\n  }\r\n  if (branch2.length > 0) {\r\n    children.push(buildTreePath(branch2));\r\n  }\r\n\r\n  // Return the merged structure\r\n  return {\r\n    id: (ancestor.id).toNumber(),\r\n    name: `${ancestor.name} ${ancestor.lastName}`,\r\n    children: children.length > 0 ? children : undefined // Only include children if there are any\r\n  };\r\n}\r\n\r\nexport const translateName = (fullName, language = true) => {\r\n  const reverseTranslations = Object.fromEntries(\r\n    Object.entries(translations).map(([key, value]) => [value, key])\r\n  );\r\n  const reverseCompound = Object.fromEntries(\r\n    Object.entries(compoundNames).map(([key, value]) => [value, key])\r\n  );\r\n\r\n  const dict = language ? translations : reverseTranslations;\r\n  const compoundDict = language ? compoundNames : reverseCompound;\r\n\r\n  const normalized = fullName.trim().replace(/\\s+/g, ' ');\r\n  if (compoundDict[normalized]) {\r\n    return compoundDict[normalized];\r\n  }\r\n\r\n  const nameParts = normalized.split(' ');\r\n  const translatedParts = nameParts.map(part => dict[part] || part);\r\n\r\n  return translatedParts.join(' ');\r\n};\r\n\r\n\r\nconst RelationPage = () => {\r\n  const [person1, setPerson1] = useState('');\r\n  const [person2, setPerson2] = useState('');\r\n  const [relationship, setRelationship] = useState('');\r\n  const [duplicates, setDuplicates] = useState({ person1: [], person2: [] });\r\n  const [error, setError] = useState(null);\r\n  const [selectedPerson1, setSelectedPerson1] = useState(null);\r\n  const [selectedPerson2, setSelectedPerson2] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\r\n\r\n  const fetchRelationship = async (e, customPerson1 = person1, customPerson2 = person2) => {\r\n  if (e) e.preventDefault();\r\n\r\n  console.log(\"üöÄ fetchRelationship START\");\r\n  console.log(\"‚û°Ô∏è person1:\", customPerson1);\r\n  console.log(\"‚û°Ô∏è person2:\", customPerson2);\r\n\r\n  if (!customPerson1 || !customPerson2) {\r\n    console.error(\"‚ùå One of the names is undefined or empty\");\r\n    setError(true);\r\n    setRelationship({ relationshipDescription: 'ÿ£ÿØÿÆŸÑ ÿßÿ≥ŸÖŸä ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠', relationshipScore: null });\r\n    return;\r\n  }\r\n\r\n  setLoading(true);\r\n  setError(false);\r\n  setLoadingMessage(\"üîé ÿ®ÿØÿßŸäÿ© ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿπŸÑÿßŸÇÿ©...\");\r\n\r\n  try {\r\n    const result = await getRelationship(customPerson1, customPerson2);\r\n\r\n    console.log(\"‚úÖ Result received:\", result);\r\n\r\n    if (result.error === 'non-unique-name') {\r\n      setSelectedPerson1(null);\r\n      setSelectedPerson2(null);\r\n      setDuplicates(result.duplicates ?? { person1: [], person2: [] });\r\n      setRelationship(result.message);\r\n      return;\r\n    }\r\n\r\n    setDuplicates({ person1: [], person2: [] });\r\n    setRelationship({\r\n      relationshipDescription: result.relation,\r\n      relationshipPerson1Details: result.person1 ?? null,\r\n      relationshipPerson2Details: result.person2 ?? null,\r\n      relationshipScore: result.score ?? null,\r\n      relationshipLevels: result.levelsTuple ?? null,\r\n      relationshipGenerationGap: result.generation ?? null,\r\n      relationshipExplanationType: result.explanation?.type ?? null,\r\n      relationshipExplanationDesc: result.explanation?.explanation ?? null,\r\n      relationshipType: result.relationshipType ?? null,\r\n      commonAncestor: result.ancestor ?? null,\r\n      ancestorstreeData: result.treeData ?? null,\r\n      person1ID: result.person1ID ?? null,\r\n      person2ID: result.person2ID ?? null\r\n    });\r\n  } catch (error) {\r\n    console.error('‚ùå Error fetching relationship:', error);\r\n    setRelationship({ relationshipDescription: 'ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿßŸÑÿ®ÿ≠ÿ´', relationshipScore: null });\r\n    setError(true);\r\n  } finally {\r\n    console.log(\"üõë fetchRelationship END\");\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  const checkMarriage = async (person1ID, person2ID, gender1, gender2) => {\r\n    if (gender1 === gender2) {return {areMarried : false}}\r\n        setLoadingMessage(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿπŸÑÿßŸÇÿ© ÿ≤Ÿàÿßÿ¨\");\r\n        const result = await session.run(`\r\n          MATCH (Husband:Person)-[:HUSBAND_OF]->(Wife:Person)\r\n          MATCH (Wife)-[:WIFE_OF]->(Husband)\r\n          WHERE (id(Wife) = $person1ID AND id(Husband) = $person2ID) \r\n            OR (id(Wife) = $person2ID AND id(Husband) = $person1ID)\r\n          RETURN Husband AS P1, Wife AS P2\r\n        `, { person1ID, person2ID });\r\n\r\n        if (result.records.length === 0) {\r\n          return { areMarried: false };\r\n        }\r\n        const record = result.records[0];\r\n        const P1 = record.get(\"P1\").properties;\r\n        const P2 = record.get(\"P2\").properties;\r\n        return record.length === 0 ? {areMarried : false} : {areMarried : true, P1, P2};\r\n  };\r\n\r\n  async function getMarriageRelation(session, person1ID, person2ID, translatedName1, translatedName2, gender1, gender2) {\r\n    console.log('üîç Checking marriage-based relationship between', translatedName1, 'and', translatedName2);\r\n\r\n    // Step 1: Person's own family\r\n    const ownFamilyQuery = `\r\n      MATCH (P:Person)\r\n      WHERE id(P) = $personId\r\n\r\n      // Person's Father and Mother\r\n      OPTIONAL MATCH (Father:Person)-[:FATHER_OF]->(P)\r\n      OPTIONAL MATCH (Mother:Person)-[:MOTHER_OF]->(P)\r\n\r\n      // Person's Siblings\r\n      OPTIONAL MATCH (Father)-[:FATHER_OF]->(Sibling:Person)\r\n      WHERE Sibling <> P\r\n\r\n      // Spouses of Siblings\r\n      OPTIONAL MATCH (Sibling)-[:HUSBAND_OF|:WIFE_OF]->(SiblingSpouse:Person)\r\n\r\n      // Person's Children\r\n      OPTIONAL MATCH (P)-[:MOTHER_OF|:FATHER_OF]->(Child:Person)\r\n\r\n      // Spouses of Children\r\n      OPTIONAL MATCH (Child)-[:HUSBAND_OF|:WIFE_OF]->(ChildSpouse:Person)\r\n\r\n      RETURN \r\n        id(Father) AS fatherId,\r\n        id(Mother) AS motherId,\r\n        collect(DISTINCT id(Sibling)) AS siblingIds,\r\n        collect(DISTINCT id(SiblingSpouse)) AS siblingSpouseIds,\r\n        collect(DISTINCT id(Child)) AS childIds,\r\n        collect(DISTINCT id(ChildSpouse)) AS childSpouseIds\r\n    `;\r\n\r\n    const ownResult = await session.run(ownFamilyQuery, { personId: person1ID });\r\n    const ownRecord = ownResult.records[0];\r\n\r\n    const fatherId = ownRecord.get(\"fatherId\")?.toNumber() ?? null;\r\n    const motherId = ownRecord.get(\"motherId\")?.toNumber() ?? null;\r\n    const siblingIds = (ownRecord.get(\"siblingIds\") ?? []).map(id => id.toNumber());\r\n    const siblingSpouseIds = (ownRecord.get(\"siblingSpouseIds\") ?? []).map(id => id.toNumber());\r\n    const childIds = (ownRecord.get(\"childIds\") ?? []).map(id => id.toNumber());\r\n    const fchildrenSpouseIds = (ownRecord.get(\"childSpouseIds\") ?? []).map(id => id.toNumber());\r\n\r\n    console.log('üë®‚Äçüë©‚Äçüëß Own Family:');\r\n    console.log('Father ID:', fatherId);\r\n    console.log('Mother ID:', motherId);\r\n    console.log('Sibling IDs:', siblingIds);\r\n    console.log('Sibling Spouse IDs:', siblingSpouseIds);\r\n    console.log('Childs IDs:', childIds);\r\n    console.log('Children Spouse IDs:', fchildrenSpouseIds);\r\n\r\n    // Step 2: Spouse's family\r\n    const spouseFamilyQuery = `\r\n      MATCH (P:Person)-[:HUSBAND_OF|:WIFE_OF]->(Spouse:Person)\r\n      WHERE id(P) = $personId\r\n\r\n      OPTIONAL MATCH (SFather:Person)-[:FATHER_OF]->(Spouse)\r\n      OPTIONAL MATCH (SMother:Person)-[:MOTHER_OF]->(Spouse)\r\n      OPTIONAL MATCH (SFather)-[:FATHER_OF]->(SSibling:Person)\r\n      WHERE SSibling <> Spouse\r\n\r\n      OPTIONAL MATCH (SSibling)-[:HUSBAND_OF|:WIFE_OF]->(SSiblingSpouse:Person)\r\n\r\n      // Get children of the spouse\r\n      OPTIONAL MATCH (Spouse)-[:MOTHER_OF|:FATHER_OF]->(Child:Person)\r\n      OPTIONAL MATCH (Child)-[:HUSBAND_OF|:WIFE_OF]->(ChildSpouse:Person)\r\n\r\n      RETURN \r\n        id(SFather) AS sFatherId,\r\n        id(SMother) AS sMotherId,\r\n        collect(DISTINCT id(SSibling)) AS sSiblingIds,\r\n        collect(DISTINCT id(SSiblingSpouse)) AS sSiblingSpouseIds,\r\n        collect(DISTINCT id(Child)) AS childIds,\r\n        collect(DISTINCT id(ChildSpouse)) AS childSpouseIds\r\n    `;\r\n\r\n    const spouseResult = await session.run(spouseFamilyQuery, { personId: person1ID });\r\n    const spouseRecord = spouseResult.records[0];\r\n\r\n    const sFatherId = spouseRecord?.get(\"sFatherId\")?.toNumber() ?? null;\r\n    const sMotherId = spouseRecord?.get(\"sMotherId\")?.toNumber() ?? null;\r\n    const sSiblingIds = (spouseRecord?.get(\"sSiblingIds\") ?? []).map(id => id.toNumber());\r\n    const sSiblingSpouseIds = (spouseRecord?.get(\"sSiblingSpouseIds\") ?? []).map(id => id.toNumber());\r\n    const childrenSpouseIds = (spouseRecord?.get(\"childSpouseIds\") ?? []).map(id => id.toNumber());\r\n\r\n    console.log('üßë‚Äçü§ù‚Äçüßë Spouse Family:');\r\n    console.log('Spouse Father ID:', sFatherId);\r\n    console.log('Spouse Mother ID:', sMotherId);\r\n    console.log('Spouse Sibling IDs:', sSiblingIds);\r\n    console.log('Spouse Sibling Spouse IDs:', sSiblingSpouseIds);\r\n    console.log('Children Spouse IDs:', childrenSpouseIds);\r\n\r\n    // Step 3: Matching\r\n    const match = (id) => {\r\n      return id !== null && id === person2ID;\r\n    };\r\n\r\n    const isIn = (list) => {\r\n      const result = list.some(id => id === person2ID);\r\n      return result;\r\n    };\r\n\r\n\r\n    // Sibling check\r\n    if (isIn(sSiblingIds)) {\r\n      console.log('‚úÖ Match: Sibling');\r\n      if (gender1 === 'Male') {\r\n        return `${translatedName1} ŸáŸà ÿ≤Ÿàÿ¨ ÿßÿÆÿ™ ${translatedName2}`;\r\n      } else {\r\n        return `${translatedName1} ŸáŸä ÿ≤Ÿàÿ¨ÿ© ÿßÿÆ ${translatedName2}`;\r\n      }\r\n    }\r\n\r\n    // Sibling Spouse check\r\n    if (isIn(siblingSpouseIds)) {\r\n      console.log('‚úÖ Match: Spouse Siblings');\r\n      // Male person with male sibling-in-law (spouse of the sibling)\r\n      if (gender1 === 'Male') {\r\n        if(gender2 === 'Male'){\r\n          return `${translatedName1} ŸáŸà ÿßÿÆ ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} ŸáŸà ÿßÿÆ ÿ≤Ÿàÿ¨ ${translatedName2}`;\r\n        }\r\n      } else {\r\n        // Female person with female sibling-in-law (spouse of the sibling)\r\n        if(gender2 === 'Male'){\r\n        return `${translatedName1} ŸáŸä ÿßÿÆÿ™ ÿ≤Ÿàÿ¨ ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} ŸáŸà ÿßÿÆ ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Children Spouses check\r\n    if (isIn(fchildrenSpouseIds)) {\r\n      console.log('‚úÖ Match: Children Spouses');\r\n      if (gender1 === 'Male') {\r\n        return `${translatedName1} ŸáŸà ÿ£ÿ® ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\r\n      } else {\r\n        return `${translatedName1} ŸáŸä ÿ£ŸÖ ÿ≤Ÿàÿ¨ÿ© ${translatedName2}`;\r\n      }\r\n    }\r\n\r\n    // Further check for Children Spouses (with childrenSpouseIds mapping and match)\r\n    if (match(sFatherId) || match(sMotherId)) {\r\n      console.log('‚úÖ Match: Children Spouses (extended)');\r\n      if (gender1 === 'Male') {\r\n        console.log(`${translatedName1} ŸáŸà ÿ≤Ÿàÿ¨ ÿßÿ®ŸÜÿ© ${translatedName2}`);\r\n        return `${translatedName1} ŸáŸà ÿ≤Ÿàÿ¨ ÿßÿ®ŸÜÿ© ${translatedName2}`;\r\n      } else {\r\n        console.log(`${translatedName1} ŸáŸä ÿ≤Ÿàÿ¨ÿ© ÿßÿ®ŸÜ ${translatedName2} | ${translatedName1} ŸáŸä ŸÉŸÜÿ© ${translatedName2}`);\r\n        return `${translatedName1} ŸáŸä ÿ≤Ÿàÿ¨ÿ© ÿßÿ®ŸÜ ${translatedName2} | ${translatedName1} ŸáŸä ŸÉŸÜÿ© ${translatedName2}`;\r\n      }\r\n    }\r\n    \r\n    return \"ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÑÿßŸÇÿ© Ÿàÿßÿ∂ÿ≠ÿ©\";\r\n  }\r\n\r\n  const getAncestors = async (person1ID, person2ID) => {\r\n        setLoadingMessage(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿ£ÿ¨ÿØÿßÿØ ÿßŸÑŸÖÿ¥ÿ™ÿ±ŸÉÿ©\");\r\n        const result = await session.run(`\r\n          MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..12]->(p1:Person)\r\n          WHERE id(p1) = $person1ID\r\n\r\n          MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..12]->(p2:Person)\r\n          WHERE id(p2) = $person2ID\r\n            AND id(p1) <> id(p2)\r\n\r\n          WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\r\n\r\n          // Prioritize father ancestors by explicitly matching FATHER_OF first, then MOTHER_OF\r\n          OPTIONAL MATCH (cGF:Person)-[:FATHER_OF]->(cF:Person)-[:FATHER_OF]->(common)\r\n\r\n          // Check if the common ancestor is married and get the husband if married\r\n          OPTIONAL MATCH (common)-[:WIFE_OF]->(husband:Person)\r\n\r\n          // Include spouse information\r\n          WITH common, cF, cGF, husband, path1, path2, level1, level2\r\n\r\n          ORDER BY (level1 + level2) ASC\r\n          LIMIT 1\r\n\r\n          RETURN \r\n            // If common ancestor is female and married, return the husband's name\r\n            common.name AS commonAncestorName,\r\n            cF.name AS commonAncestorFatherName,\r\n            cGF.name AS commonAncestorGrandFatherName,\r\n            common.lastName AS commonAncestorLastName,\r\n            id(common) AS commonAncestorID,\r\n\r\n            common.gender AS commonAncestorGender,\r\n            level1 AS generationsFromP1,\r\n            level2 AS generationsFromP2,\r\n\r\n            // Include spouse information if married\r\n            CASE \r\n              WHEN husband IS NOT NULL THEN { id: id(husband), name: husband.name, lastName: husband.lastName, gender: husband.gender }\r\n              ELSE null\r\n            END AS spouseOfAncestor,\r\n\r\n            [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\r\n            [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\r\n\r\n\r\n        `, { person1ID, person2ID });\r\n\r\n        const record = result.records[0];\r\n        if (result.records.length === 0){\r\n            return null;\r\n        }\r\n        return {\r\n            id: record.get('commonAncestorID').toNumber(),\r\n            name: record.get('commonAncestorName'),\r\n            lastName: record.get('commonAncestorLastName'),\r\n            fatherName: record.get('commonAncestorFatherName'),\r\n            grandfatherName: record.get('commonAncestorGrandFatherName'),\r\n            gender: record.get('commonAncestorGender'),\r\n            spouseOfAncestor: record.get('spouseOfAncestor'),\r\n            levelFromP1: record.get('generationsFromP1').toNumber(),\r\n            levelFromP2: record.get('generationsFromP2').toNumber(),\r\n            pathFromAncestorToP1: record.get('pathToP1'),\r\n            pathFromAncestorToP2: record.get('pathToP2')\r\n        };\r\n  };\r\n\r\n  const getPersonMatches = async (personName, fatherName = \"\", grandfatherName = \"\", familyName) => {\r\n\r\n    let cypherQuery = ``;\r\n    const queryParamsObject = {};\r\n  \r\n    if (personName){\r\n      if (fatherName) {\r\n        if (grandfatherName) {\r\n          if (familyName) {\r\n            cypherQuery += `\r\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\r\n              WHERE child.name = $personName AND \r\n                    father.name = $fatherName AND \r\n                    grandfather.name = $grandfatherName AND \r\n                    child.lastName = $familyName\r\n              RETURN \r\n                id(child) AS childID,\r\n                child.name AS childName, \r\n                father.name AS fatherName, \r\n                grandfather.name AS grandfatherName, \r\n                child.lastName AS familyName,\r\n                child.gender AS gender,\r\n                child.YoB AS YoB,\r\n                child.YoD AS YoD\r\n            `;\r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n            queryParamsObject.grandfatherName = grandfatherName;\r\n            queryParamsObject.familyName = familyName;\r\n          } \r\n          else {\r\n            cypherQuery += `\r\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\r\n              WHERE child.name = $personName AND \r\n                    father.name = $fatherName AND\r\n                    grandfather.name = $grandfatherName\r\n              RETURN \r\n                    id(child) AS childID, \r\n                    child.name AS childName, \r\n                    father.name AS fatherName, \r\n                    grandfather.name AS grandfatherName,\r\n                    child.lastName AS familyName,\r\n                    child.gender AS gender,\r\n                    child.YoB AS YoB,\r\n                    child.YoD AS YoD\r\n              `;\r\n            \r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n            queryParamsObject.grandfatherName = grandfatherName;\r\n          }\r\n          \r\n        } else {\r\n          if (familyName){\r\n            cypherQuery += `\r\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\r\n            WHERE child.name = $personName AND \r\n                  father.name = $fatherName AND\r\n                  child.lastName = $familyName\r\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n            RETURN  \r\n              id(child) AS childID,\r\n              child.name AS childName, \r\n              father.name AS fatherName,\r\n              grandfather.name AS grandfatherName,\r\n              child.lastName AS familyName,\r\n              child.gender AS gender,\r\n              child.YoB AS YoB,\r\n              child.YoD AS YoD\r\n            `;\r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n            queryParamsObject.familyName = familyName;\r\n          }\r\n          else{\r\n            cypherQuery += `\r\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\r\n            \r\n            WHERE child.name = $personName AND \r\n                  father.name = $fatherName\r\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n            RETURN  id(child) AS childID, \r\n                    child.name AS childName, \r\n                    father.name AS fatherName, \r\n                    grandfather.name AS grandfatherName,\r\n                    child.lastName AS familyName,\r\n                    child.gender AS gender,\r\n                    child.YoB AS YoB,\r\n                    child.YoD AS YoD\r\n            `;\r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n          }\r\n          }\r\n      }\r\n      else {\r\n        if (familyName){\r\n          cypherQuery += `\r\n          MATCH (child:Person)\r\n          WHERE child.name = $personName AND child.lastName = $familyName\r\n          OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\r\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n          RETURN \r\n            id(child) AS childID,\r\n            child.name AS childName, \r\n            father.name AS fatherName,\r\n            grandfather.name AS grandfatherName,\r\n            child.lastName AS familyName,\r\n            child.gender AS gender,\r\n            child.YoB AS YoB,\r\n            child.YoD AS YoD\r\n        `;\r\n        queryParamsObject.personName = personName;\r\n        queryParamsObject.familyName = familyName;\r\n        }\r\n        else{\r\n          cypherQuery += `\r\n            MATCH (child:Person)\r\n            WHERE child.name = $personName\r\n            OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\r\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n            RETURN\r\n              id(child) AS childID,\r\n              child.name AS childName, \r\n              father.name AS fatherName, \r\n              grandfather.name AS grandfatherName,\r\n              child.lastName AS familyName,\r\n              child.gender AS gender,\r\n              child.YoB AS YoB,\r\n              child.YoD AS YoD\r\n          `;\r\n          queryParamsObject.personName = personName;\r\n        }\r\n      }\r\n    }\r\n\r\n    const session = driver.session();\r\n    try {\r\n      const result = await session.run(cypherQuery, queryParamsObject);\r\n  \r\n      return result.records.map(record => ({\r\n        id: record.get('childID').toNumber(),\r\n        gender: record.get('gender'),\r\n        name: record.get('childName'),\r\n        father: record.get('fatherName') || \"\",\r\n        grandfather: record.get('grandfatherName') || \"\",\r\n        lastName: record.get('familyName') || \"\",\r\n        YoB: record.get(\"YoB\") || -1,\r\n        YoD: record.get(\"YoD\") || -1\r\n      }));\r\n    } \r\n    catch (Error) {\r\n      console.error('Query Error:', Error);\r\n      setError('ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿßŸÑÿ®ÿ≠ÿ´.');\r\n    } \r\n    finally {\r\n      await session.close();\r\n    }\r\n  };\r\n\r\n  const getRelationship = async (person1FullName, person2FullName) => {\r\n    const isArabic = (text) => /[\\u0600-\\u06FF]/.test(text);\r\n    let gender1, gender2;\r\n    let relationshipType;\r\n    let relation = '', score = 0;\r\n    let explanation;\r\n    let relationshipExplanation = [\r\n      {\r\n        type: \"ÿßŸÑÿπÿßÿ¶ŸÑÿ©\",\r\n        explanation: \"Ÿáÿ§ŸÑÿßÿ° ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ŸäŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿ∞Ÿà ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑÿ£ŸàŸÑŸâ.\"\r\n      },\r\n      {\r\n        type: \"ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿßŸÑŸÖŸÇÿ±ÿ®ÿ©\",\r\n        explanation: \"Ÿáÿ§ŸÑÿßÿ° ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ŸäŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ£ÿπŸÖÿßŸÖ Ÿàÿ£ÿÆŸàÿßŸÑ ŸÖÿ¥ÿ™ÿ±ŸÉŸäŸÜ.\"\r\n      },\r\n      {\r\n        type: \"ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿßŸÑŸÖŸàÿ≥ÿπÿ©\",\r\n        explanation: \"Ÿáÿ§ŸÑÿßÿ° ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ŸäŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿ£ÿπŸÖÿßŸÖ ÿ£Ÿà ÿ£ÿÆŸàÿßŸÑ ÿßŸÑÿ£ÿ® ÿå ÿ£Ÿà ÿ£ÿ¨ÿØÿßÿØ ÿßŸÑÿ£ÿ® Ÿà ÿßŸÑÿ£ŸÖ.\"\r\n      },\r\n      {\r\n        type: \"ŸÇÿ±ÿßÿ®ÿ© ÿßŸÑÿ≤Ÿàÿßÿ¨\",\r\n        explanation: \"Ÿáÿ∞ÿßŸÜ ÿßŸÑÿ¥ÿÆÿµÿßŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ÿßŸÜ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿ≤Ÿàÿßÿ¨.\"\r\n      },\r\n      {\r\n        type: \"ÿµŸáÿ± / ŸÜÿ≥Ÿäÿ®\",\r\n        explanation: \"Ÿáÿ∞ÿßŸÜ ÿßŸÑÿ¥ÿÆÿµÿßŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ÿßŸÜ ÿπÿ®ÿ± ÿßŸÑÿ≤Ÿàÿßÿ¨ ŸàŸÑŸäÿ≥ ÿßŸÑŸÜÿ≥ÿ® ÿßŸÑÿØŸÖŸàŸä.\"\r\n      },\r\n      {\r\n        type: \"ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÑÿßŸÇÿ©\",\r\n        explanation: \"ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ£Ÿä ÿµŸÑÿ© ŸÇÿ±ÿßÿ®ÿ© ÿ®ŸäŸÜ ÿßŸÑÿ¥ÿÆÿµŸäŸÜ ŸÅŸä ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™.\"\r\n      },\r\n      {\r\n        type: \"ŸÜŸÅÿ≥ ÿßŸÑÿ¥ÿÆÿµ\",\r\n        explanation: \"ÿßŸÑÿßÿ≥ŸÖŸäŸÜ Ÿäÿ¥Ÿäÿ±ÿßŸÜ ÿ•ŸÑŸâ ŸÜŸÅÿ≥ ÿßŸÑÿ¥ÿÆÿµ.\"\r\n      }\r\n    ];\r\n\r\n    // Split the full names first (before translation)\r\n    const { personName: person1Name, fatherName: person1FatherName, grandfatherName: person1GrandfatherName, familyName: person1LastName } = splitName(person1FullName);\r\n    const { personName: person2Name, fatherName: person2FatherName, grandfatherName: person2GrandfatherName, familyName: person2LastName } = splitName(person2FullName);\r\n    console.log(\"Name\", person1Name, \" Father : \", person1FatherName);\r\n    // Translate each part separately\r\n    let translatedPerson1Name = isArabic(person1Name) ? translateName(person1Name, false) : person1Name;\r\n    let translatedPerson1FatherName = isArabic(person1FatherName) ? translateName(person1FatherName, false) : person1FatherName;\r\n    let translatedPerson1GrandfatherName = isArabic(person1GrandfatherName) ? translateName(person1GrandfatherName, false) : person1GrandfatherName;\r\n    let translatedPerson1LastName = isArabic(person1LastName) ? translateName(person1LastName, false) : person1LastName;\r\n\r\n    let translatedPerson2Name = isArabic(person2Name) ? translateName(person2Name, false) : person2Name;\r\n    let translatedPerson2FatherName = isArabic(person2FatherName) ? translateName(person2FatherName, false) : person2FatherName;\r\n    let translatedPerson2GrandfatherName = isArabic(person2GrandfatherName) ? translateName(person2GrandfatherName, false) : person2GrandfatherName;\r\n    let translatedPerson2LastName = isArabic(person2LastName) ? translateName(person2LastName, false) : person2LastName;\r\n\r\n    const errorContainer = document.getElementById('error-container');\r\n    try {\r\n      const person1Matches = await getPersonMatches(\r\n        translatedPerson1Name,\r\n        translatedPerson1FatherName,\r\n        translatedPerson1GrandfatherName,\r\n        translatedPerson1LastName\r\n      );\r\n\r\n      if (person1Matches.length === 0) {\r\n        throw new Error(`ŸÑÿß ŸäŸàÿ¨ÿØ ÿ£ÿ¥ÿÆÿßÿµ ÿ®ÿ•ÿ≥ŸÖ ${person1FullName} ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßŸÑÿ™ÿ´ÿ®ÿ™ ŸÅŸä ÿßŸÑÿ•ÿ≥ŸÖ ÿ¨ŸäÿØÿß`);\r\n      }\r\n\r\n      const person2Matches = await getPersonMatches(\r\n        translatedPerson2Name,\r\n        translatedPerson2FatherName,\r\n        translatedPerson2GrandfatherName,\r\n        translatedPerson2LastName\r\n      );\r\n\r\n      if (person2Matches.length === 0) {\r\n        throw new Error(`ŸÑÿß ŸäŸàÿ¨ÿØ ÿ£ÿ¥ÿÆÿßÿµ ÿ®ÿ•ÿ≥ŸÖ ${person2FullName} ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßŸÑÿ™ÿ´ÿ®ÿ™ ŸÅŸä ÿßŸÑÿ•ÿ≥ŸÖ ÿ¨ŸäÿØÿß`);\r\n      }\r\n      setLoadingMessage(\"ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿ£ÿ¥ÿÆÿßÿµ\");\r\n\r\n      console.log(\"P1 matches : \", person1Matches);\r\n      console.log(\"P2 matches : \", person2Matches);\r\n      \r\n      let person1ID, person2ID;\r\n      if (person1Matches.length > 1 || person2Matches.length > 1) {\r\n      return {\r\n        error: 'non-unique-name',\r\n        message: 'ÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿπÿØÿ© ÿ£ÿ¥ÿÆÿßÿµ ÿ®ŸÜŸÅÿ≥ ÿßŸÑÿßÿ≥ŸÖ. ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿµÿ≠Ÿäÿ≠.',\r\n        duplicates: {\r\n          person1: person1Matches.length > 1 ? person1Matches : [],\r\n          person2: person2Matches.length > 1 ? person2Matches : []\r\n        }\r\n      };\r\n      }\r\n      else{\r\n        person1ID = person1Matches[0].id;\r\n        person2ID = person2Matches[0].id;\r\n        gender1 = person1Matches[0].gender;\r\n        gender2 = person2Matches[0].gender;\r\n      }\r\n\r\n      const translatedName1 = translateName(person1Matches[0].name + \" \" + person1Matches[0].lastName);\r\n      const translatedName2 = translateName(person2Matches[0].name + \" \" + person2Matches[0].lastName);\r\n      \r\n      console.log(person1Matches[0], person2Matches[0]);\r\n      \r\n        \r\n    } \r\n    catch (error) {\r\n      console.error('Error in relationship lookup:', error);\r\n    \r\n      setError(`‚ùå ÿÆÿ∑ÿ£: ${error.message || error}`);\r\n    \r\n      if (errorContainer) {\r\n        errorContainer.innerText = `‚ùå ÿÆÿ∑ÿ£: ${error.message || error}`;\r\n      }\r\n      setLoading(false);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedPerson1 && selectedPerson2) {\r\n      fetchRelationship(null, selectedPerson1, selectedPerson2);\r\n    }\r\n  }, [selectedPerson1, selectedPerson2]);\r\n\r\n  return (\r\n    <div className=\"relation-page\">\r\n    \r\n    <main className=\"main-panel\">\r\n      \r\n      <section className=\"relation-form-section\">\r\n        <h2 className=\"section-title\">ŸÖÿßŸáŸä ÿßŸÑÿπŸÑÿßŸÇÿ© ÿ®ŸäŸÜŸáŸÖÿßÿü</h2>\r\n        <p id=\"DescriptionZone\">\r\n          ÿßŸÑŸáÿØŸÅ ŸÖŸÜ Ÿáÿ∞Ÿá ÿßŸÑÿµŸÅÿ≠ÿ© ŸáŸà ÿ™ÿ≠ÿØŸäÿØ ÿµŸÑÿ© ÿßŸÑŸÇÿ±ÿßÿ®ÿ© ÿ®ŸäŸÜ ÿ¥ÿÆÿµŸäŸÜ ÿ®ŸÜÿßÿ°Ÿãÿß ÿπŸÑŸâ ÿßÿ≥ŸÖŸáŸÖ. ŸÉŸÑ ŸÖÿßÿπŸÑŸäŸÉ ŸÅÿπŸÑŸá\r\n          ŸáŸà ÿßÿØÿÆÿßŸÑ ÿßŸÑÿßÿ≥ŸÖ ŸÑŸÑÿ¥ÿÆÿµ ÿßŸÑÿßŸàŸÑ ŸàÿßŸÑÿ´ÿßŸÜŸä Ÿàÿ´ŸÖ ÿßŸÑŸÜŸÇÿ± ÿπŸÑŸâ \"ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿπŸÑÿßŸÇÿ©\" ÿ≥ÿ™ÿ∏Ÿáÿ± ŸÑŸÉ ÿßŸÑŸÜÿ™Ÿäÿ¨ÿ© ŸÅŸä ÿßÿ≥ŸáŸÑ ÿßŸÑÿµŸÅÿ≠ÿ©\r\n          ŸàÿßŸÑÿ™Ÿä Ÿäÿ™Ÿàÿ∂ÿ≠ ŸÑŸÉ ŸÜŸàÿπ ÿßŸÑÿπŸÑÿßŸÇÿ© ŸàŸÖÿØŸâ ŸÇÿ±ÿßÿ®ÿ™Ÿáÿßÿü ŸÅŸä ÿ≠ÿßŸÑ Ÿàÿ¨ŸàÿØ ÿßŸä ÿ™ÿ¥ÿßÿ®Ÿáÿßÿ™ ÿßŸà ÿ™ŸÉÿ±ÿßÿ±ÿßÿ™ ŸÅŸä ÿßŸÑÿßÿ≥ŸÖÿßÿ° ÿ≥ŸäŸÖ ÿ™ŸàŸÅŸäÿ± ÿÆŸäÿßÿ±ÿßÿ™ ŸÑÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑÿµÿ≠Ÿäÿ≠\r\n        </p>\r\n        <form onSubmit={fetchRelationship} className=\"relation-form\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ÿßŸÑÿ•ÿ≥ŸÖ ÿßŸÑŸÉÿßŸÖŸÑ ÿßŸÑÿ£ŸàŸÑ\"\r\n              value={person1}\r\n              onChange={(e) => setPerson1(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ÿßŸÑÿ•ÿ≥ŸÖ ÿßŸÑŸÉÿßŸÖŸÑ ÿßŸÑÿ´ÿßŸÜŸä\"\r\n              value={person2}\r\n              onChange={(e) => setPerson2(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className='ButtonSection'>\r\n            <button type=\"submit\" className=\"button checkButton\">ÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿπŸÑÿßŸÇÿ©</button>\r\n            <button type=\"reset\" className=\"button resetButton\">ÿ•ŸÑÿ∫ÿßÿ°</button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"button swapButton\"\r\n              onClick={() => {\r\n                // Swap the values of person1 and person2\r\n                setPerson1(person2);\r\n                setPerson2(person1);\r\n              }}\r\n            >\r\n              ÿ™ÿ®ÿØŸäŸÑ ÿßŸÑÿ£ÿ¥ÿÆÿßÿµ\r\n            </button>\r\n          </div>  \r\n        </form>\r\n        {(duplicates.person1.length > 0 || duplicates.person2.length > 0) && (\r\n          <aside className=\"duplicates-panel\">\r\n            {duplicates.person1.length > 0 && !selectedPerson1 && (\r\n              <section className=\"duplicates-group\">\r\n                <h3>üß† ÿ£ÿÆÿ™ÿ± ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖŸÇÿµŸàÿØ (ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑÿ£ŸàŸÑ):</h3>\r\n                <table className=\"person-info-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ÿßŸÑÿßÿ≥ŸÖ</th>\r\n                      <th>ÿ≥ŸÜÿ© ÿßŸÑŸÖŸäŸÑÿßÿØ</th>\r\n                      <th>ÿ≥ŸÜÿ© ÿßŸÑŸàŸÅÿßÿ©</th>\r\n                      <th>ÿßÿÆÿ™Ÿäÿßÿ±</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {duplicates.person1.map((p, idx) => {\r\n                      const fullName =\r\n                        (p.name ? `${translateName(p.name)} ÿ®ŸÜ ` : '') +\r\n                        (p.father ? `${translateName(p.father)} ÿ®ŸÜ ` : '') +\r\n                        (p.grandfather ? `${translateName(p.grandfather)} ` : '') +\r\n                        (p.lastName ? `${translateName(p.lastName)}` : '');\r\n\r\n                      return (\r\n                        <tr key={`p1-${idx}`}>\r\n                          <td>{fullName}</td>\r\n                          <td>{p.YoB !== -1 ? p.YoB : ''}</td>\r\n                          <td>{p.YoD !== -1 ? p.YoD : ''}</td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"duplicate-button\"\r\n                              onClick={() => {\r\n                                setSelectedPerson1(fullName);\r\n                              }}\r\n                            >\r\n                              ÿßÿÆÿ™Ÿäÿßÿ±\r\n                            </button>\r\n\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n\r\n            )}\r\n\r\n            {duplicates.person2.length > 0 && !selectedPerson2 && (\r\n              <section className=\"duplicates-group\">\r\n                <h3>üß† ÿ£ÿÆÿ™ÿ± ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖŸÇÿµŸàÿØ (ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑÿ´ÿßŸÜŸä):</h3>\r\n                <table className=\"person-info-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ÿßŸÑÿßÿ≥ŸÖ</th>\r\n                      <th>ÿ≥ŸÜÿ© ÿßŸÑŸÖŸäŸÑÿßÿØ</th>\r\n                      <th>ÿ≥ŸÜÿ© ÿßŸÑŸàŸÅÿßÿ©</th>\r\n                      <th>ÿßÿÆÿ™Ÿäÿßÿ±</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {duplicates.person2.map((p, idx) => {\r\n                      const fullName =\r\n                        (p.name ? `${translateName(p.name)} ÿ®ŸÜ ` : '') +\r\n                        (p.father ? `${translateName(p.father)} ÿ®ŸÜ ` : '') +\r\n                        (p.grandfather ? `${translateName(p.grandfather)} ` : '') +\r\n                        (p.lastName ? `${translateName(p.lastName)}` : '');\r\n\r\n                      return (\r\n                        <tr key={`p2-${idx}`}>\r\n                          <td>{fullName}</td>\r\n                          <td>{p.YoB !== -1 ? p.YoB : ''}</td>\r\n                          <td>{p.YoD !== -1 ? p.YoD : ''}</td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"duplicate-button\"\r\n                              onClick={() => {\r\n                                setSelectedPerson2(fullName);\r\n                              }}\r\n                            >\r\n                              ÿßÿÆÿ™Ÿäÿßÿ±\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n\r\n\r\n\r\n\r\n      )}\r\n\r\n\r\n    </aside>\r\n    )}\r\n\r\n      </section>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>} {/* Show the error message */}\r\n      {loading && (\r\n        <div className=\"loading-message\">\r\n          <div className=\"spinner\"></div>\r\n          <p>{loadingMessage}</p>\r\n        </div>\r\n      )}\r\n      {}\r\n      {!loading && relationship && !error  && (\r\n        <section className=\"relationship-result\">\r\n          <div className=\"foundPersons\">\r\n          <h3>ÿßŸÑÿ£ÿ¥ÿÆÿßÿµ ÿßŸÑÿ∞ŸäŸÜ ÿ™ŸÖ ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜŸáŸÖ:</h3>\r\n          <div className=\"person-card\">\r\n          <h4>\r\n            {translateName(relationship.relationshipPerson1Details?.name ?? '')} \r\n            {relationship.relationshipPerson1Details?.father && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson1Details.father)}`} \r\n            {relationship.relationshipPerson1Details?.grandfather && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson1Details.grandfather)}`} \r\n            {relationship.relationshipPerson1Details?.lastName && ` ${translateName(relationship.relationshipPerson1Details.lastName)}`}\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"person-card\">\r\n          <h4>\r\n            {translateName(relationship.relationshipPerson2Details?.name ?? '')} \r\n            {relationship.relationshipPerson2Details?.father && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson2Details.father)}`} \r\n            {relationship.relationshipPerson2Details?.grandfather && ` ÿ®ŸÜ ${translateName(relationship.relationshipPerson2Details.grandfather)}`} \r\n            {relationship.relationshipPerson2Details?.lastName && ` ${translateName(relationship.relationshipPerson2Details.lastName)}`}\r\n          </h4>\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n          <h2 id=\"resultTitle\">ŸÜÿ™Ÿäÿ¨ÿ© ÿßŸÑÿπŸÑÿßŸÇÿ©</h2>\r\n          <p className=\"relationText\">{relationship.relationshipDescription}</p>\r\n          <div className=\"result-details\">\r\n            <table className=\"result-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>ÿØÿ±ÿ¨ÿ© ÿßŸÑÿπŸÑÿßŸÇÿ©</th>\r\n                  <td className=\"score-cell\">\r\n                    <div className=\"score-bar-wrapper\">\r\n                      <div className=\"score-bar-fill\" style={{ width: `${relationship.relationshipScore ?? 0}%` }}></div>\r\n                    </div>\r\n                    <div className=\"score-meta\">\r\n                      <span className=\"score-value\">{relationship.relationshipScore ?? 'N/A'}</span>\r\n                      {relationship.relationshipScore !== null && relationship.relationshipScore !== undefined && (\r\n                        <span className={\r\n                          relationship.relationshipScore >= 80\r\n                            ? \"score-category high\"\r\n                            : relationship.relationshipScore >= 60\r\n                            ? \"score-category medium\"\r\n                            : \"score-category low\"\r\n                        }>\r\n                          {\r\n                            relationship.relationshipScore >= 80\r\n                              ? \"ŸÇŸàŸäÿ©\"\r\n                              : relationship.relationshipScore >= 60\r\n                              ? \"ŸÖÿ™Ÿàÿ≥ÿ∑ÿ©\"\r\n                              : \"ÿ∂ÿπŸäŸÅÿ©\"\r\n                          }\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>ŸÜŸàÿπ ÿßŸÑÿπŸÑÿßŸÇÿ©</th>\r\n                  <td className=\"relationship-tag\">\r\n                    <span className={`tag ${relationship.relationshipType}`}>\r\n                      {relationship.relationshipType === \"Blood\" ? \"ÿØŸÖ\" :\r\n                      relationship.relationshipType === \"Marriage-related\" ? \"ÿ≤Ÿàÿßÿ¨ ŸÖÿ±ÿ™ÿ®ÿ∑\" :\r\n                      relationship.relationshipType === \"Marriage\" ? \"ÿ≤Ÿàÿßÿ¨\" :\r\n                      relationship.relationshipType}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr>\r\n                  <th>ÿ™ŸÅÿ≥Ÿäÿ± ÿ•ÿ∂ÿßŸÅŸä</th>\r\n                  <td className=\"relation-explanation\">\r\n                    <span className='relation-explanation-type'>\r\n                      {relationship.relationshipExplanationType ?? 'ŸÜŸàÿπ ÿßŸÑÿ™ŸÅÿ≥Ÿäÿ± ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠'}\r\n                    </span>: \r\n                    {relationship.relationshipExplanationDesc ?? \"ŸÑÿß ŸäŸàÿ¨ÿØ ÿ™ŸÅÿ≥Ÿäÿ± ŸÖÿ™ÿßÿ≠.\"}\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr>\r\n                  <th>ÿπÿØÿØ ÿßŸÑÿ£ÿ¨ŸäÿßŸÑ ÿ®ŸäŸÜŸáŸÖÿß ÿ≠ÿ≥ÿ® ÿßŸÑÿ¨ÿØ ÿßŸÑŸÖÿ¥ÿ™ÿ±ŸÉ</th>\r\n                  <td className=\"generation-distance\">\r\n                    <div className=\"tooltip-container\">\r\n                      <span id=\"numGen\">{relationship.relationshipGenerationGap ?? '-'}</span> ÿ£ÿ¨ŸäÿßŸÑ\r\n                      <div className=\"custom-tooltip\">\r\n                        ÿπÿØÿØ ÿßŸÑÿ£ÿ¨ŸäÿßŸÑ ŸáŸà ÿπÿØÿØ ÿßŸÑÿ£ÿ¥ÿÆÿßÿµ ÿßŸÑŸÅÿßÿµŸÑŸäŸÜ ŸÅŸä ÿ¥ÿ¨ÿ±ÿ© ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿ®ŸäŸÜ ÿßŸÑÿ¥ÿÆÿµŸäŸÜ.\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <div className=\"tooltip-container\">\r\n                      ÿßŸÑÿ¨ÿØ ÿßŸÑŸÖÿ¥ÿ™ÿ±ŸÉ\r\n                      <span className=\"custom-tooltip\">\r\n                        ÿπÿØÿØ ÿßŸÑÿ£ÿ¨ŸäÿßŸÑ ŸáŸà ÿπÿØÿØ ÿßŸÑÿ£ÿ¥ÿÆÿßÿµ ÿßŸÑŸÅÿßÿµŸÑŸäŸÜ ŸÅŸä ÿ¥ÿ¨ÿ±ÿ© ÿßŸÑÿπÿßÿ¶ŸÑÿ© ÿ®ŸäŸÜ ÿßŸÑÿ¥ÿÆÿµŸäŸÜ.\r\n                      </span>\r\n                    </div>\r\n                  </th>\r\n                  <td className=\"generation-distance\">\r\n                    {relationship.commonAncestor?.ancestorName && `${relationship.commonAncestor?.ancestorName} ÿ®ŸÜ `}\r\n                    {relationship.commonAncestor?.ancestorFatherName && `${relationship.commonAncestor?.ancestorFatherName} ÿ®ŸÜ `}\r\n                    {relationship.commonAncestor?.ancestorGrandFatherName && `${relationship.commonAncestor?.ancestorGrandFatherName} `}\r\n                    {relationship.commonAncestor?.ancestorLastName && `${relationship.commonAncestor?.ancestorLastName}`}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div className=\"tree-wrapper\" style={{\r\n              height: `${Math.max(\r\n                ((Math.max(relationship.relationshipLevels?.levelFromP1 ?? 0, relationship.relationshipLevels?.levelFromP2 ?? 0)) + 1) * 100,\r\n                100 // Ensure minimum height is 100px\r\n              ) + 1}px`\r\n            }}>\r\n\r\n                <div className='titleTree'>\r\n                </div>\r\n                {relationship.ancestorstreeData && (\r\n                <div className=\"tree-container\">\r\n                  <Tree\r\n                    data={relationship.ancestorstreeData}\r\n                    orientation=\"vertical\"\r\n                    pathFunc=\"step\"\r\n                    nodeSize={{ x: 50, y: 90 }}\r\n                    separation={{ siblings: 3, nonSiblings: 3 }}\r\n                    translate={{ x: 325, y: 27 }} \r\n                    renderCustomNodeElement={({ nodeDatum }) => (\r\n                     <g className=\"tree-node\">\r\n                        <title>{nodeDatum.id}</title>\r\n                        <rect\r\n                          className=\"tree-node-rect\"\r\n                          x=\"-50\"\r\n                          y=\"-20\"\r\n                          width=\"100\"\r\n                          \r\n                          height=\"40\"\r\n                          style={{\r\n                            fill: nodeDatum.id === relationship.person1ID || nodeDatum.id === relationship.person2ID\r\n                              ? '#d3f9d8'  // Leaf node color (light green)\r\n                              : nodeDatum.id === relationship.commonAncestor.ancestorID\r\n                              ? '#ffe4b5'  // Ancestor node color (light yellow)\r\n                              : '#ffffff', // Default color for other nodes\r\n                            stroke: nodeDatum.id === relationship.person1ID || nodeDatum.id === relationship.person2ID\r\n                              ? '#4caf50'  // Leaf node border (green)\r\n                              : nodeDatum.id === relationship.commonAncestor.ancestorID\r\n                              ? '#ffa500'  // Ancestor node border (orange)\r\n                              : '#4a90e2', // Default border color\r\n                            strokeWidth: '2.5px',\r\n                            rx: '10',  // Rounded corners\r\n                            ry: '10',  // Rounded corners\r\n                          }}\r\n                        />\r\n                        <text\r\n                          className=\"tree-node-text\"\r\n                          x=\"0\"\r\n                          y=\"5\"\r\n                          style={{\r\n                            fontSize: '16px',\r\n                            fontFamily: 'Cairo',\r\n                            fill: nodeDatum.id === relationship.person1ID || nodeDatum.id === relationship.person2ID\r\n                              ? '#388e3c'  // Leaf node text color (dark green)\r\n                              : nodeDatum.id === relationship.commonAncestor.ancestorID\r\n                              ? '#ff9800'  // Ancestor node text color (orange)\r\n                              : '#333',    // Default text color (dark gray)\r\n                            textAnchor: 'middle',\r\n                            dominantBaseline: 'middle',\r\n                            letterSpacing: '1px',\r\n                            strokeWidth: '1px',\r\n                            pointerEvents: 'none',\r\n                          }}\r\n                        >\r\n                          {translateName(nodeDatum.name)}\r\n                        </text>\r\n                      </g>\r\n                    )}\r\n                  />\r\n                </div>\r\n              )}\r\n               </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </main>\r\n  </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default RelationPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,MAAMC,YAAY,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAClD,MAAMC,aAAa,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACpDA,OAAO,CAAC,QAAQ,CAAC,CAACE,MAAM,CAAC,CAAC;AAE1B,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAChD,MAAMC,SAAS,GAAGH,OAAO,CAACC,GAAG,CAACG,oBAAoB;AAClD,MAAMC,aAAa,GAAGL,OAAO,CAACC,GAAG,CAACK,wBAAwB;AAE1D,MAAMC,MAAM,GAAGX,OAAO,CAAC,cAAc,CAAC,CAACW,MAAM,CACzCR,QAAQ,EACRH,OAAO,CAAC,cAAc,CAAC,CAACY,IAAI,CAACC,KAAK,CAACN,SAAS,EAAEE,aAAa,CAC/D,CAAC;AACD,MAAMK,OAAO,GAAGH,MAAM,CAACG,OAAO,CAAC,CAAC;AAEhC,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC5B,MAAMC,KAAK,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC;EACrC,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC;EAC9B,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnC,OAAOD,QAAQ,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,CAACJ,MAAM;AAC/D;AAEA,SAASK,cAAcA,CAACC,IAAI,EAAE;EAC5B,OAAOC,MAAM,CAACC,MAAM,CAAC3B,aAAa,CAAC,CAAC4B,QAAQ,CAACH,IAAI,CAAC;AACpD;AAEA,SAASI,SAASA,CAACC,QAAQ,EAAE;EAC3B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,OAAO,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAACf,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC;EAC3E,MAAMe,SAAS,GAAGnB,eAAe,CAACgB,QAAQ,CAAC;EAE3C,IAAIN,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7CG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EACA,IAAIC,WAAW;EAEf,IAAIL,KAAK,CAACZ,MAAM,KAAK,CAAC,EAAE;IACtB,IAAIc,SAAS,KAAK,CAAC,EAAE;MACnB,IAAIT,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC3CK,WAAW,GAAG,GAAGL,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACvC,OAAO;UACLM,UAAU,EAAED,WAAW;UACvBE,UAAU,EAAE,EAAE;UACdC,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAE;QACd,CAAC;MACH,CAAC,MACG;QACF,OAAO;UACLH,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;UACpBO,UAAU,EAAE,EAAE;UACdC,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAET,KAAK,CAAC,CAAC;QACrB,CAAC;MACH;IACF,CAAC,MACI,IAAIE,SAAS,KAAK,CAAC,EAAE;MACxB,OAAO;QACLI,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;QACpBO,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;QACpBQ,eAAe,EAAE,EAAE;QACnBC,UAAU,EAAE;MACd,CAAC;IACH;EACF,CAAC,MAEI,IAAIT,KAAK,CAACZ,MAAM,KAAK,CAAC,EAAE;IAC3B,IAAIc,SAAS,KAAK,CAAC,EAAE;MACnB,IAAIT,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC3CG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BC,WAAW,GAAG,GAAGL,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACvC,OAAO;UACLM,UAAU,EAAED,WAAW;UACvBE,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;UACpBQ,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAE;QACd,CAAC;MACH,CAAC,MACI,IAAIhB,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC9CG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BC,WAAW,GAAG,GAAGL,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACvC,OAAO;UACLM,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;UACpBO,UAAU,EAAEF,WAAW;UACvBG,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAE;QACd,CAAC;MACH,CAAC,MACC;QACF,OAAO;UACLH,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;UACpBO,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;UACpBQ,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAET,KAAK,CAAC,CAAC;QACrB,CAAC;MAAC;IAEN,CAAC,MACI,IAAIE,SAAS,KAAK,CAAC,EAAE;MACxB,OAAO;QACLI,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;QACpBO,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;QACpBQ,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;QACzBS,UAAU,EAAE;MACd,CAAC;IACH;EACF,CAAC,MAEI,IAAIT,KAAK,CAACZ,MAAM,KAAK,CAAC,EAAE;IAC3B,IAAIc,SAAS,KAAK,CAAC,EAAE;MACnB,IAAIT,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QACvF,OAAO;UACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCQ,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAE;QACd,CAAC;MACH;MACA,IAAIhB,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC3C,OAAO;UACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCO,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;UACpBQ,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAET,KAAK,CAAC,CAAC;QACrB,CAAC;MACH;MACA,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC3C,OAAO;UACLM,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;UACpBO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCQ,eAAe,EAAE,EAAE;UACnBC,UAAU,EAAET,KAAK,CAAC,CAAC;QACrB,CAAC;MACH;IACF,CAAC,MACI,IAAIE,SAAS,KAAK,CAAC,EAAC;MACrB,IAAIT,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC3C,OAAO;UACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCO,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;UACpBQ,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;UACzBS,UAAU,EAAE;QACd,CAAC;MACH;MACA,IAAIhB,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC5C,OAAO;UACLM,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;UACpBO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCQ,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;UACzBS,UAAU,EAAE;QACd,CAAC;MACH;IACJ;EACF,CAAC,MACI,IAAIT,KAAK,CAACZ,MAAM,KAAK,CAAC,EAAE;IAC3B,IAAIc,SAAS,KAAK,CAAC,EAAC;MAClB,IAAIT,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC3C,OAAO;UACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCO,UAAU,EAAEP,KAAK,CAAC,CAAC,CAAC;UACpBQ,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;UACzBS,UAAU,EAAET,KAAK,CAAC,CAAC;QACrB,CAAC;MACH;MACA,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QAC5C,OAAO;UACLM,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;UACpBO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCQ,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;UACzBS,UAAU,EAAET,KAAK,CAAC,CAAC;QACrB,CAAC;MACH;MACA,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QACxF,OAAO;UACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCQ,eAAe,EAAER,KAAK,CAAC,CAAC,CAAC;UACzBS,UAAU,EAAE;QACd,CAAC;MACH;IACF;EACF,CAAC,MACI,IAAIT,KAAK,CAACZ,MAAM,KAAK,CAAC,EAAE;IAC3B,IAAIc,SAAS,KAAK,CAAC,EAAC;MAClB,IAAIT,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;QACpI,OAAO;UACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACrCQ,eAAe,EAAE,GAAGR,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UAC1CS,UAAU,EAAE;QACd,CAAC;MACH;IACF;EACF,CAAC,MACI,IAAIT,KAAK,CAACZ,MAAM,KAAK,CAAC,EAAE;IACzB,IAAIK,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,GAAE,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;MACpI,OAAO;QACLM,UAAU,EAAE,GAAGN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrCO,UAAU,EAAE,GAAGP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrCQ,eAAe,EAAE,GAAGR,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QAC1CS,UAAU,EAAET,KAAK,CAAC,CAAC;MACrB,CAAC;IACH;EACJ;EACA,OAAO;IAAEM,UAAU,EAAEN,KAAK,CAAC,CAAC,CAAC;IAAEO,UAAU,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,UAAU,EAAET,KAAK,CAAC,CAAC,CAAC,IAAI;EAAG,CAAC;AAClG;AAEA,SAASU,aAAaA,CAACC,IAAI,EAAE;EAC3B;EACA,IAAIA,IAAI,CAACvB,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAElC,OAAOuB,IAAI,CAACC,WAAW,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACvC,OAAO;MACLC,EAAE,EAAGD,MAAM,CAACC,EAAE,CAAEC,QAAQ,CAAC,CAAC;MAC1BtB,IAAI,EAAE,GAAGoB,MAAM,CAACpB,IAAI,IAAIoB,MAAM,CAACG,QAAQ,EAAE;MACzCC,QAAQ,EAAEL,GAAG,GAAG,CAACA,GAAG,CAAC,GAAG;IAC1B,CAAC;EACH,CAAC,EAAE,IAAI,CAAC;AACV;AAEA,SAASM,UAAUA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACtC;EACA,IAAID,QAAQ,CAAChC,MAAM,KAAK,CAAC,IAAIiC,QAAQ,CAACjC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAE/D,MAAMkC,QAAQ,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAMG,OAAO,GAAGH,QAAQ,CAAC9B,KAAK,CAAC,CAAC,CAAC;EACjC,MAAMkC,OAAO,GAAGH,QAAQ,CAAC/B,KAAK,CAAC,CAAC,CAAC;;EAEjC;EACA,MAAM4B,QAAQ,GAAG,EAAE;EACnB,IAAIK,OAAO,CAACnC,MAAM,GAAG,CAAC,EAAE;IACtB8B,QAAQ,CAACO,IAAI,CAACf,aAAa,CAACa,OAAO,CAAC,CAAC;EACvC;EACA,IAAIC,OAAO,CAACpC,MAAM,GAAG,CAAC,EAAE;IACtB8B,QAAQ,CAACO,IAAI,CAACf,aAAa,CAACc,OAAO,CAAC,CAAC;EACvC;;EAEA;EACA,OAAO;IACLT,EAAE,EAAGO,QAAQ,CAACP,EAAE,CAAEC,QAAQ,CAAC,CAAC;IAC5BtB,IAAI,EAAE,GAAG4B,QAAQ,CAAC5B,IAAI,IAAI4B,QAAQ,CAACL,QAAQ,EAAE;IAC7CC,QAAQ,EAAEA,QAAQ,CAAC9B,MAAM,GAAG,CAAC,GAAG8B,QAAQ,GAAGQ,SAAS,CAAC;EACvD,CAAC;AACH;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAC5B,QAAQ,EAAE6B,QAAQ,GAAG,IAAI,KAAK;EAC1D,MAAMC,mBAAmB,GAAGlC,MAAM,CAACmC,WAAW,CAC5CnC,MAAM,CAACoC,OAAO,CAAChE,YAAY,CAAC,CAACiE,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACA,KAAK,EAAED,GAAG,CAAC,CACjE,CAAC;EACD,MAAME,eAAe,GAAGxC,MAAM,CAACmC,WAAW,CACxCnC,MAAM,CAACoC,OAAO,CAAC9D,aAAa,CAAC,CAAC+D,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACA,KAAK,EAAED,GAAG,CAAC,CAClE,CAAC;EAED,MAAMG,IAAI,GAAGR,QAAQ,GAAG7D,YAAY,GAAG8D,mBAAmB;EAC1D,MAAMQ,YAAY,GAAGT,QAAQ,GAAG3D,aAAa,GAAGkE,eAAe;EAE/D,MAAMG,UAAU,GAAGvC,QAAQ,CAACb,IAAI,CAAC,CAAC,CAACe,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EACvD,IAAIoC,YAAY,CAACC,UAAU,CAAC,EAAE;IAC5B,OAAOD,YAAY,CAACC,UAAU,CAAC;EACjC;EAEA,MAAMC,SAAS,GAAGD,UAAU,CAACnD,KAAK,CAAC,GAAG,CAAC;EACvC,MAAMqD,eAAe,GAAGD,SAAS,CAACP,GAAG,CAACS,IAAI,IAAIL,IAAI,CAACK,IAAI,CAAC,IAAIA,IAAI,CAAC;EAEjE,OAAOD,eAAe,CAACE,IAAI,CAAC,GAAG,CAAC;AAClC,CAAC;AAGD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG9G,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+G,OAAO,EAAEC,UAAU,CAAC,GAAGhH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiH,YAAY,EAAEC,eAAe,CAAC,GAAGlH,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmH,UAAU,EAAEC,aAAa,CAAC,GAAGpH,QAAQ,CAAC;IAAE6G,OAAO,EAAE,EAAE;IAAEE,OAAO,EAAE;EAAG,CAAC,CAAC;EAC1E,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGtH,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuH,eAAe,EAAEC,kBAAkB,CAAC,GAAGxH,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACyH,eAAe,EAAEC,kBAAkB,CAAC,GAAG1H,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC2H,OAAO,EAAEC,UAAU,CAAC,GAAG5H,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC6H,cAAc,EAAEC,iBAAiB,CAAC,GAAG9H,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM+H,iBAAiB,GAAG,MAAAA,CAAOC,CAAC,EAAEC,aAAa,GAAGpB,OAAO,EAAEqB,aAAa,GAAGnB,OAAO,KAAK;IACzF,IAAIiB,CAAC,EAAEA,CAAC,CAACG,cAAc,CAAC,CAAC;IAEzB3F,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEwF,aAAa,CAAC;IACzCzF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEyF,aAAa,CAAC;IAEzC,IAAI,CAACD,aAAa,IAAI,CAACC,aAAa,EAAE;MACpC1F,OAAO,CAAC6E,KAAK,CAAC,0CAA0C,CAAC;MACzDC,QAAQ,CAAC,IAAI,CAAC;MACdJ,eAAe,CAAC;QAAEkB,uBAAuB,EAAE,6BAA6B;QAAEC,iBAAiB,EAAE;MAAK,CAAC,CAAC;MACpG;IACF;IAEAT,UAAU,CAAC,IAAI,CAAC;IAChBN,QAAQ,CAAC,KAAK,CAAC;IACfQ,iBAAiB,CAAC,8BAA8B,CAAC;IAEjD,IAAI;MAAA,IAAAQ,cAAA,EAAAC,eAAA,EAAAC,aAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA;MACF,MAAMC,MAAM,GAAG,MAAMC,eAAe,CAACpB,aAAa,EAAEC,aAAa,CAAC;MAElE1F,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE2G,MAAM,CAAC;MAEzC,IAAIA,MAAM,CAAC/B,KAAK,KAAK,iBAAiB,EAAE;QAAA,IAAAiC,kBAAA;QACtC9B,kBAAkB,CAAC,IAAI,CAAC;QACxBE,kBAAkB,CAAC,IAAI,CAAC;QACxBN,aAAa,EAAAkC,kBAAA,GAACF,MAAM,CAACjC,UAAU,cAAAmC,kBAAA,cAAAA,kBAAA,GAAI;UAAEzC,OAAO,EAAE,EAAE;UAAEE,OAAO,EAAE;QAAG,CAAC,CAAC;QAChEG,eAAe,CAACkC,MAAM,CAACG,OAAO,CAAC;QAC/B;MACF;MAEAnC,aAAa,CAAC;QAAEP,OAAO,EAAE,EAAE;QAAEE,OAAO,EAAE;MAAG,CAAC,CAAC;MAC3CG,eAAe,CAAC;QACdkB,uBAAuB,EAAEgB,MAAM,CAACI,QAAQ;QACxCC,0BAA0B,GAAAnB,cAAA,GAAEc,MAAM,CAACvC,OAAO,cAAAyB,cAAA,cAAAA,cAAA,GAAI,IAAI;QAClDoB,0BAA0B,GAAAnB,eAAA,GAAEa,MAAM,CAACrC,OAAO,cAAAwB,eAAA,cAAAA,eAAA,GAAI,IAAI;QAClDF,iBAAiB,GAAAG,aAAA,GAAEY,MAAM,CAACO,KAAK,cAAAnB,aAAA,cAAAA,aAAA,GAAI,IAAI;QACvCoB,kBAAkB,GAAAnB,mBAAA,GAAEW,MAAM,CAACS,WAAW,cAAApB,mBAAA,cAAAA,mBAAA,GAAI,IAAI;QAC9CqB,yBAAyB,GAAApB,kBAAA,GAAEU,MAAM,CAACW,UAAU,cAAArB,kBAAA,cAAAA,kBAAA,GAAI,IAAI;QACpDsB,2BAA2B,GAAArB,qBAAA,IAAAC,mBAAA,GAAEQ,MAAM,CAACa,WAAW,cAAArB,mBAAA,uBAAlBA,mBAAA,CAAoBsB,IAAI,cAAAvB,qBAAA,cAAAA,qBAAA,GAAI,IAAI;QAC7DwB,2BAA2B,GAAAtB,qBAAA,IAAAC,oBAAA,GAAEM,MAAM,CAACa,WAAW,cAAAnB,oBAAA,uBAAlBA,oBAAA,CAAoBmB,WAAW,cAAApB,qBAAA,cAAAA,qBAAA,GAAI,IAAI;QACpEuB,gBAAgB,GAAArB,qBAAA,GAAEK,MAAM,CAACgB,gBAAgB,cAAArB,qBAAA,cAAAA,qBAAA,GAAI,IAAI;QACjDsB,cAAc,GAAArB,gBAAA,GAAEI,MAAM,CAACzF,QAAQ,cAAAqF,gBAAA,cAAAA,gBAAA,GAAI,IAAI;QACvCsB,iBAAiB,GAAArB,gBAAA,GAAEG,MAAM,CAACmB,QAAQ,cAAAtB,gBAAA,cAAAA,gBAAA,GAAI,IAAI;QAC1CuB,SAAS,GAAAtB,iBAAA,GAAEE,MAAM,CAACoB,SAAS,cAAAtB,iBAAA,cAAAA,iBAAA,GAAI,IAAI;QACnCuB,SAAS,GAAAtB,iBAAA,GAAEC,MAAM,CAACqB,SAAS,cAAAtB,iBAAA,cAAAA,iBAAA,GAAI;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACd7E,OAAO,CAAC6E,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDH,eAAe,CAAC;QAAEkB,uBAAuB,EAAE,qBAAqB;QAAEC,iBAAiB,EAAE;MAAK,CAAC,CAAC;MAC5Ff,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,SAAS;MACR9E,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCmF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAGC,MAAM8C,aAAa,GAAG,MAAAA,CAAOF,SAAS,EAAEC,SAAS,EAAEE,OAAO,EAAEC,OAAO,KAAK;IACtE,IAAID,OAAO,KAAKC,OAAO,EAAE;MAAC,OAAO;QAACC,UAAU,EAAG;MAAK,CAAC;IAAA;IACjD/C,iBAAiB,CAAC,0BAA0B,CAAC;IAC7C,MAAMsB,MAAM,GAAG,MAAMjI,OAAO,CAAC2J,GAAG,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;MAAEN,SAAS;MAAEC;IAAU,CAAC,CAAC;IAE5B,IAAIrB,MAAM,CAAC2B,OAAO,CAACtJ,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAO;QAAEoJ,UAAU,EAAE;MAAM,CAAC;IAC9B;IACA,MAAMG,MAAM,GAAG5B,MAAM,CAAC2B,OAAO,CAAC,CAAC,CAAC;IAChC,MAAME,EAAE,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC,CAACC,UAAU;IACtC,MAAMC,EAAE,GAAGJ,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC,CAACC,UAAU;IACtC,OAAOH,MAAM,CAACvJ,MAAM,KAAK,CAAC,GAAG;MAACoJ,UAAU,EAAG;IAAK,CAAC,GAAG;MAACA,UAAU,EAAG,IAAI;MAAEI,EAAE;MAAEG;IAAE,CAAC;EACrF,CAAC;EAED,eAAeC,mBAAmBA,CAAClK,OAAO,EAAEqJ,SAAS,EAAEC,SAAS,EAAEa,eAAe,EAAEC,eAAe,EAAEZ,OAAO,EAAEC,OAAO,EAAE;IAAA,IAAAY,qBAAA,EAAAC,cAAA,EAAAC,sBAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;IACpH9J,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAE6I,eAAe,EAAE,KAAK,EAAEC,eAAe,CAAC;;IAEvG;IACA,MAAMgB,cAAc,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IAED,MAAMC,SAAS,GAAG,MAAMrL,OAAO,CAAC2J,GAAG,CAACyB,cAAc,EAAE;MAAEE,QAAQ,EAAEjC;IAAU,CAAC,CAAC;IAC5E,MAAMkC,SAAS,GAAGF,SAAS,CAACzB,OAAO,CAAC,CAAC,CAAC;IAEtC,MAAM4B,QAAQ,IAAAnB,qBAAA,IAAAC,cAAA,GAAGiB,SAAS,CAACxB,GAAG,CAAC,UAAU,CAAC,cAAAO,cAAA,uBAAzBA,cAAA,CAA2BpI,QAAQ,CAAC,CAAC,cAAAmI,qBAAA,cAAAA,qBAAA,GAAI,IAAI;IAC9D,MAAMoB,QAAQ,IAAAlB,sBAAA,IAAAC,eAAA,GAAGe,SAAS,CAACxB,GAAG,CAAC,UAAU,CAAC,cAAAS,eAAA,uBAAzBA,eAAA,CAA2BtI,QAAQ,CAAC,CAAC,cAAAqI,sBAAA,cAAAA,sBAAA,GAAI,IAAI;IAC9D,MAAMmB,UAAU,GAAG,EAAAjB,eAAA,GAACc,SAAS,CAACxB,GAAG,CAAC,YAAY,CAAC,cAAAU,eAAA,cAAAA,eAAA,GAAI,EAAE,EAAEvH,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC/E,MAAMyJ,gBAAgB,GAAG,EAAAjB,eAAA,GAACa,SAAS,CAACxB,GAAG,CAAC,kBAAkB,CAAC,cAAAW,eAAA,cAAAA,eAAA,GAAI,EAAE,EAAExH,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC3F,MAAM0J,QAAQ,GAAG,EAAAjB,eAAA,GAACY,SAAS,CAACxB,GAAG,CAAC,UAAU,CAAC,cAAAY,eAAA,cAAAA,eAAA,GAAI,EAAE,EAAEzH,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC3E,MAAM2J,kBAAkB,GAAG,EAAAjB,eAAA,GAACW,SAAS,CAACxB,GAAG,CAAC,gBAAgB,CAAC,cAAAa,eAAA,cAAAA,eAAA,GAAI,EAAE,EAAE1H,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IAE3Fb,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEkK,QAAQ,CAAC;IACnCnK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEmK,QAAQ,CAAC;IACnCpK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEoK,UAAU,CAAC;IACvCrK,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEqK,gBAAgB,CAAC;IACpDtK,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEsK,QAAQ,CAAC;IACpCvK,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEuK,kBAAkB,CAAC;;IAEvD;IACA,MAAMC,iBAAiB,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IAED,MAAMC,YAAY,GAAG,MAAM/L,OAAO,CAAC2J,GAAG,CAACmC,iBAAiB,EAAE;MAAER,QAAQ,EAAEjC;IAAU,CAAC,CAAC;IAClF,MAAM2C,YAAY,GAAGD,YAAY,CAACnC,OAAO,CAAC,CAAC,CAAC;IAE5C,MAAMqC,SAAS,IAAApB,qBAAA,GAAGmB,YAAY,aAAZA,YAAY,wBAAAlB,iBAAA,GAAZkB,YAAY,CAAEjC,GAAG,CAAC,WAAW,CAAC,cAAAe,iBAAA,uBAA9BA,iBAAA,CAAgC5I,QAAQ,CAAC,CAAC,cAAA2I,qBAAA,cAAAA,qBAAA,GAAI,IAAI;IACpE,MAAMqB,SAAS,IAAAnB,sBAAA,GAAGiB,YAAY,aAAZA,YAAY,wBAAAhB,kBAAA,GAAZgB,YAAY,CAAEjC,GAAG,CAAC,WAAW,CAAC,cAAAiB,kBAAA,uBAA9BA,kBAAA,CAAgC9I,QAAQ,CAAC,CAAC,cAAA6I,sBAAA,cAAAA,sBAAA,GAAI,IAAI;IACpE,MAAMoB,WAAW,GAAG,EAAAlB,kBAAA,GAACe,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEjC,GAAG,CAAC,aAAa,CAAC,cAAAkB,kBAAA,cAAAA,kBAAA,GAAI,EAAE,EAAE/H,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IACrF,MAAMkK,iBAAiB,GAAG,EAAAlB,kBAAA,GAACc,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEjC,GAAG,CAAC,mBAAmB,CAAC,cAAAmB,kBAAA,cAAAA,kBAAA,GAAI,EAAE,EAAEhI,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IACjG,MAAMmK,iBAAiB,GAAG,EAAAlB,kBAAA,GAACa,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEjC,GAAG,CAAC,gBAAgB,CAAC,cAAAoB,kBAAA,cAAAA,kBAAA,GAAI,EAAE,EAAEjI,GAAG,CAACjB,EAAE,IAAIA,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC;IAE9Fb,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE2K,SAAS,CAAC;IAC3C5K,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE4K,SAAS,CAAC;IAC3C7K,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE6K,WAAW,CAAC;IAC/C9K,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE8K,iBAAiB,CAAC;IAC5D/K,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE+K,iBAAiB,CAAC;;IAEtD;IACA,MAAMC,KAAK,GAAIrK,EAAE,IAAK;MACpB,OAAOA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAKqH,SAAS;IACxC,CAAC;IAED,MAAMiD,IAAI,GAAIC,IAAI,IAAK;MACrB,MAAMvE,MAAM,GAAGuE,IAAI,CAACC,IAAI,CAACxK,EAAE,IAAIA,EAAE,KAAKqH,SAAS,CAAC;MAChD,OAAOrB,MAAM;IACf,CAAC;;IAGD;IACA,IAAIsE,IAAI,CAACJ,WAAW,CAAC,EAAE;MACrB9K,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAIkI,OAAO,KAAK,MAAM,EAAE;QACtB,OAAO,GAAGW,eAAe,eAAeC,eAAe,EAAE;MAC3D,CAAC,MAAM;QACL,OAAO,GAAGD,eAAe,eAAeC,eAAe,EAAE;MAC3D;IACF;;IAEA;IACA,IAAImC,IAAI,CAACZ,gBAAgB,CAAC,EAAE;MAC1BtK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC;MACA,IAAIkI,OAAO,KAAK,MAAM,EAAE;QACtB,IAAGC,OAAO,KAAK,MAAM,EAAC;UACpB,OAAO,GAAGU,eAAe,eAAeC,eAAe,EAAE;QAC3D,CAAC,MACG;UACF,OAAO,GAAGD,eAAe,cAAcC,eAAe,EAAE;QAC1D;MACF,CAAC,MAAM;QACL;QACA,IAAGX,OAAO,KAAK,MAAM,EAAC;UACtB,OAAO,GAAGU,eAAe,eAAeC,eAAe,EAAE;QACzD,CAAC,MACG;UACF,OAAO,GAAGD,eAAe,eAAeC,eAAe,EAAE;QAC3D;MACF;IACF;;IAEA;IACA,IAAImC,IAAI,CAACV,kBAAkB,CAAC,EAAE;MAC5BxK,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,IAAIkI,OAAO,KAAK,MAAM,EAAE;QACtB,OAAO,GAAGW,eAAe,eAAeC,eAAe,EAAE;MAC3D,CAAC,MAAM;QACL,OAAO,GAAGD,eAAe,eAAeC,eAAe,EAAE;MAC3D;IACF;;IAEA;IACA,IAAIkC,KAAK,CAACL,SAAS,CAAC,IAAIK,KAAK,CAACJ,SAAS,CAAC,EAAE;MACxC7K,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnD,IAAIkI,OAAO,KAAK,MAAM,EAAE;QACtBnI,OAAO,CAACC,GAAG,CAAC,GAAG6I,eAAe,gBAAgBC,eAAe,EAAE,CAAC;QAChE,OAAO,GAAGD,eAAe,gBAAgBC,eAAe,EAAE;MAC5D,CAAC,MAAM;QACL/I,OAAO,CAACC,GAAG,CAAC,GAAG6I,eAAe,gBAAgBC,eAAe,MAAMD,eAAe,WAAWC,eAAe,EAAE,CAAC;QAC/G,OAAO,GAAGD,eAAe,gBAAgBC,eAAe,MAAMD,eAAe,WAAWC,eAAe,EAAE;MAC3G;IACF;IAEA,OAAO,qBAAqB;EAC9B;EAEA,MAAMsC,YAAY,GAAG,MAAAA,CAAOrD,SAAS,EAAEC,SAAS,KAAK;IAC/C3C,iBAAiB,CAAC,gCAAgC,CAAC;IACnD,MAAMsB,MAAM,GAAG,MAAMjI,OAAO,CAAC2J,GAAG,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;MAAEN,SAAS;MAAEC;IAAU,CAAC,CAAC;IAE5B,MAAMO,MAAM,GAAG5B,MAAM,CAAC2B,OAAO,CAAC,CAAC,CAAC;IAChC,IAAI3B,MAAM,CAAC2B,OAAO,CAACtJ,MAAM,KAAK,CAAC,EAAC;MAC5B,OAAO,IAAI;IACf;IACA,OAAO;MACH2B,EAAE,EAAE4H,MAAM,CAACE,GAAG,CAAC,kBAAkB,CAAC,CAAC7H,QAAQ,CAAC,CAAC;MAC7CtB,IAAI,EAAEiJ,MAAM,CAACE,GAAG,CAAC,oBAAoB,CAAC;MACtC5H,QAAQ,EAAE0H,MAAM,CAACE,GAAG,CAAC,wBAAwB,CAAC;MAC9CtI,UAAU,EAAEoI,MAAM,CAACE,GAAG,CAAC,0BAA0B,CAAC;MAClDrI,eAAe,EAAEmI,MAAM,CAACE,GAAG,CAAC,+BAA+B,CAAC;MAC5D4C,MAAM,EAAE9C,MAAM,CAACE,GAAG,CAAC,sBAAsB,CAAC;MAC1C6C,gBAAgB,EAAE/C,MAAM,CAACE,GAAG,CAAC,kBAAkB,CAAC;MAChD8C,WAAW,EAAEhD,MAAM,CAACE,GAAG,CAAC,mBAAmB,CAAC,CAAC7H,QAAQ,CAAC,CAAC;MACvD4K,WAAW,EAAEjD,MAAM,CAACE,GAAG,CAAC,mBAAmB,CAAC,CAAC7H,QAAQ,CAAC,CAAC;MACvD6K,oBAAoB,EAAElD,MAAM,CAACE,GAAG,CAAC,UAAU,CAAC;MAC5CiD,oBAAoB,EAAEnD,MAAM,CAACE,GAAG,CAAC,UAAU;IAC/C,CAAC;EACP,CAAC;EAED,MAAMkD,gBAAgB,GAAG,MAAAA,CAAOzL,UAAU,EAAEC,UAAU,GAAG,EAAE,EAAEC,eAAe,GAAG,EAAE,EAAEC,UAAU,KAAK;IAEhG,IAAIuL,WAAW,GAAG,EAAE;IACpB,MAAMC,iBAAiB,GAAG,CAAC,CAAC;IAE5B,IAAI3L,UAAU,EAAC;MACb,IAAIC,UAAU,EAAE;QACd,IAAIC,eAAe,EAAE;UACnB,IAAIC,UAAU,EAAE;YACduL,WAAW,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;YACDC,iBAAiB,CAAC3L,UAAU,GAAGA,UAAU;YACzC2L,iBAAiB,CAAC1L,UAAU,GAAGA,UAAU;YACzC0L,iBAAiB,CAACzL,eAAe,GAAGA,eAAe;YACnDyL,iBAAiB,CAACxL,UAAU,GAAGA,UAAU;UAC3C,CAAC,MACI;YACHuL,WAAW,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;YAEHC,iBAAiB,CAAC3L,UAAU,GAAGA,UAAU;YACzC2L,iBAAiB,CAAC1L,UAAU,GAAGA,UAAU;YACzC0L,iBAAiB,CAACzL,eAAe,GAAGA,eAAe;UACrD;QAEF,CAAC,MAAM;UACL,IAAIC,UAAU,EAAC;YACbuL,WAAW,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;YACDC,iBAAiB,CAAC3L,UAAU,GAAGA,UAAU;YACzC2L,iBAAiB,CAAC1L,UAAU,GAAGA,UAAU;YACzC0L,iBAAiB,CAACxL,UAAU,GAAGA,UAAU;UAC3C,CAAC,MACG;YACFuL,WAAW,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;YACDC,iBAAiB,CAAC3L,UAAU,GAAGA,UAAU;YACzC2L,iBAAiB,CAAC1L,UAAU,GAAGA,UAAU;UAC3C;QACA;MACJ,CAAC,MACI;QACH,IAAIE,UAAU,EAAC;UACbuL,WAAW,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;UACDC,iBAAiB,CAAC3L,UAAU,GAAGA,UAAU;UACzC2L,iBAAiB,CAACxL,UAAU,GAAGA,UAAU;QACzC,CAAC,MACG;UACFuL,WAAW,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;UACDC,iBAAiB,CAAC3L,UAAU,GAAGA,UAAU;QAC3C;MACF;IACF;IAEA,MAAMxB,OAAO,GAAGH,MAAM,CAACG,OAAO,CAAC,CAAC;IAChC,IAAI;MACF,MAAMiI,MAAM,GAAG,MAAMjI,OAAO,CAAC2J,GAAG,CAACuD,WAAW,EAAEC,iBAAiB,CAAC;MAEhE,OAAOlF,MAAM,CAAC2B,OAAO,CAAC1G,GAAG,CAAC2G,MAAM,KAAK;QACnC5H,EAAE,EAAE4H,MAAM,CAACE,GAAG,CAAC,SAAS,CAAC,CAAC7H,QAAQ,CAAC,CAAC;QACpCyK,MAAM,EAAE9C,MAAM,CAACE,GAAG,CAAC,QAAQ,CAAC;QAC5BnJ,IAAI,EAAEiJ,MAAM,CAACE,GAAG,CAAC,WAAW,CAAC;QAC7BqD,MAAM,EAAEvD,MAAM,CAACE,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE;QACtCsD,WAAW,EAAExD,MAAM,CAACE,GAAG,CAAC,iBAAiB,CAAC,IAAI,EAAE;QAChD5H,QAAQ,EAAE0H,MAAM,CAACE,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE;QACxCuD,GAAG,EAAEzD,MAAM,CAACE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5BwD,GAAG,EAAE1D,MAAM,CAACE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;MAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CACD,OAAOyD,KAAK,EAAE;MACZnM,OAAO,CAAC6E,KAAK,CAAC,cAAc,EAAEsH,KAAK,CAAC;MACpCrH,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC,SACO;MACN,MAAMnG,OAAO,CAACyN,KAAK,CAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAMvF,eAAe,GAAG,MAAAA,CAAOwF,eAAe,EAAEC,eAAe,KAAK;IAClE,MAAMC,QAAQ,GAAIC,IAAI,IAAK,iBAAiB,CAACC,IAAI,CAACD,IAAI,CAAC;IACvD,IAAIrE,OAAO,EAAEC,OAAO;IACpB,IAAIR,gBAAgB;IACpB,IAAIZ,QAAQ,GAAG,EAAE;MAAEG,KAAK,GAAG,CAAC;IAC5B,IAAIM,WAAW;IACf,IAAIiF,uBAAuB,GAAG,CAC5B;MACEhF,IAAI,EAAE,SAAS;MACfD,WAAW,EAAE;IACf,CAAC,EACD;MACEC,IAAI,EAAE,iBAAiB;MACvBD,WAAW,EAAE;IACf,CAAC,EACD;MACEC,IAAI,EAAE,iBAAiB;MACvBD,WAAW,EAAE;IACf,CAAC,EACD;MACEC,IAAI,EAAE,cAAc;MACpBD,WAAW,EAAE;IACf,CAAC,EACD;MACEC,IAAI,EAAE,YAAY;MAClBD,WAAW,EAAE;IACf,CAAC,EACD;MACEC,IAAI,EAAE,eAAe;MACrBD,WAAW,EAAE;IACf,CAAC,EACD;MACEC,IAAI,EAAE,WAAW;MACjBD,WAAW,EAAE;IACf,CAAC,CACF;;IAED;IACA,MAAM;MAAEtH,UAAU,EAAEwM,WAAW;MAAEvM,UAAU,EAAEwM,iBAAiB;MAAEvM,eAAe,EAAEwM,sBAAsB;MAAEvM,UAAU,EAAEwM;IAAgB,CAAC,GAAGnN,SAAS,CAAC0M,eAAe,CAAC;IACnK,MAAM;MAAElM,UAAU,EAAE4M,WAAW;MAAE3M,UAAU,EAAE4M,iBAAiB;MAAE3M,eAAe,EAAE4M,sBAAsB;MAAE3M,UAAU,EAAE4M;IAAgB,CAAC,GAAGvN,SAAS,CAAC2M,eAAe,CAAC;IACnKtM,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE0M,WAAW,EAAE,YAAY,EAAEC,iBAAiB,CAAC;IACjE;IACA,IAAIO,qBAAqB,GAAGZ,QAAQ,CAACI,WAAW,CAAC,GAAGnL,aAAa,CAACmL,WAAW,EAAE,KAAK,CAAC,GAAGA,WAAW;IACnG,IAAIS,2BAA2B,GAAGb,QAAQ,CAACK,iBAAiB,CAAC,GAAGpL,aAAa,CAACoL,iBAAiB,EAAE,KAAK,CAAC,GAAGA,iBAAiB;IAC3H,IAAIS,gCAAgC,GAAGd,QAAQ,CAACM,sBAAsB,CAAC,GAAGrL,aAAa,CAACqL,sBAAsB,EAAE,KAAK,CAAC,GAAGA,sBAAsB;IAC/I,IAAIS,yBAAyB,GAAGf,QAAQ,CAACO,eAAe,CAAC,GAAGtL,aAAa,CAACsL,eAAe,EAAE,KAAK,CAAC,GAAGA,eAAe;IAEnH,IAAIS,qBAAqB,GAAGhB,QAAQ,CAACQ,WAAW,CAAC,GAAGvL,aAAa,CAACuL,WAAW,EAAE,KAAK,CAAC,GAAGA,WAAW;IACnG,IAAIS,2BAA2B,GAAGjB,QAAQ,CAACS,iBAAiB,CAAC,GAAGxL,aAAa,CAACwL,iBAAiB,EAAE,KAAK,CAAC,GAAGA,iBAAiB;IAC3H,IAAIS,gCAAgC,GAAGlB,QAAQ,CAACU,sBAAsB,CAAC,GAAGzL,aAAa,CAACyL,sBAAsB,EAAE,KAAK,CAAC,GAAGA,sBAAsB;IAC/I,IAAIS,yBAAyB,GAAGnB,QAAQ,CAACW,eAAe,CAAC,GAAG1L,aAAa,CAAC0L,eAAe,EAAE,KAAK,CAAC,GAAGA,eAAe;IAEnH,MAAMS,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;IACjE,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMlC,gBAAgB,CAC3CuB,qBAAqB,EACrBC,2BAA2B,EAC3BC,gCAAgC,EAChCC,yBACF,CAAC;MAED,IAAIQ,cAAc,CAAC7O,MAAM,KAAK,CAAC,EAAE;QAC/B,MAAM,IAAIkN,KAAK,CAAC,sBAAsBE,eAAe,8BAA8B,CAAC;MACtF;MAEA,MAAM0B,cAAc,GAAG,MAAMnC,gBAAgB,CAC3C2B,qBAAqB,EACrBC,2BAA2B,EAC3BC,gCAAgC,EAChCC,yBACF,CAAC;MAED,IAAIK,cAAc,CAAC9O,MAAM,KAAK,CAAC,EAAE;QAC/B,MAAM,IAAIkN,KAAK,CAAC,sBAAsBG,eAAe,8BAA8B,CAAC;MACtF;MACAhH,iBAAiB,CAAC,uBAAuB,CAAC;MAE1CtF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE6N,cAAc,CAAC;MAC5C9N,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE8N,cAAc,CAAC;MAE5C,IAAI/F,SAAS,EAAEC,SAAS;MACxB,IAAI6F,cAAc,CAAC7O,MAAM,GAAG,CAAC,IAAI8O,cAAc,CAAC9O,MAAM,GAAG,CAAC,EAAE;QAC5D,OAAO;UACL4F,KAAK,EAAE,iBAAiB;UACxBkC,OAAO,EAAE,2DAA2D;UACpEpC,UAAU,EAAE;YACVN,OAAO,EAAEyJ,cAAc,CAAC7O,MAAM,GAAG,CAAC,GAAG6O,cAAc,GAAG,EAAE;YACxDvJ,OAAO,EAAEwJ,cAAc,CAAC9O,MAAM,GAAG,CAAC,GAAG8O,cAAc,GAAG;UACxD;QACF,CAAC;MACD,CAAC,MACG;QACF/F,SAAS,GAAG8F,cAAc,CAAC,CAAC,CAAC,CAAClN,EAAE;QAChCqH,SAAS,GAAG8F,cAAc,CAAC,CAAC,CAAC,CAACnN,EAAE;QAChCuH,OAAO,GAAG2F,cAAc,CAAC,CAAC,CAAC,CAACxC,MAAM;QAClClD,OAAO,GAAG2F,cAAc,CAAC,CAAC,CAAC,CAACzC,MAAM;MACpC;MAEA,MAAMxC,eAAe,GAAGtH,aAAa,CAACsM,cAAc,CAAC,CAAC,CAAC,CAACvO,IAAI,GAAG,GAAG,GAAGuO,cAAc,CAAC,CAAC,CAAC,CAAChN,QAAQ,CAAC;MAChG,MAAMiI,eAAe,GAAGvH,aAAa,CAACuM,cAAc,CAAC,CAAC,CAAC,CAACxO,IAAI,GAAG,GAAG,GAAGwO,cAAc,CAAC,CAAC,CAAC,CAACjN,QAAQ,CAAC;MAEhGd,OAAO,CAACC,GAAG,CAAC6N,cAAc,CAAC,CAAC,CAAC,EAAEC,cAAc,CAAC,CAAC,CAAC,CAAC;IAGnD,CAAC,CACD,OAAOlJ,KAAK,EAAE;MACZ7E,OAAO,CAAC6E,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MAErDC,QAAQ,CAAC,UAAUD,KAAK,CAACkC,OAAO,IAAIlC,KAAK,EAAE,CAAC;MAE5C,IAAI8I,cAAc,EAAE;QAClBA,cAAc,CAACK,SAAS,GAAG,UAAUnJ,KAAK,CAACkC,OAAO,IAAIlC,KAAK,EAAE;MAC/D;MACAO,UAAU,CAAC,KAAK,CAAC;MACjB,OAAO,EAAE;IACX;EACF,CAAC;EAED7H,SAAS,CAAC,MAAM;IACd,IAAIwH,eAAe,IAAIE,eAAe,EAAE;MACtCM,iBAAiB,CAAC,IAAI,EAAER,eAAe,EAAEE,eAAe,CAAC;IAC3D;EACF,CAAC,EAAE,CAACF,eAAe,EAAEE,eAAe,CAAC,CAAC;EAEtC,oBACEtH,OAAA;IAAKsQ,SAAS,EAAC,eAAe;IAAAlN,QAAA,eAE9BpD,OAAA;MAAMsQ,SAAS,EAAC,YAAY;MAAAlN,QAAA,gBAE1BpD,OAAA;QAASsQ,SAAS,EAAC,uBAAuB;QAAAlN,QAAA,gBACxCpD,OAAA;UAAIsQ,SAAS,EAAC,eAAe;UAAAlN,QAAA,EAAC;QAAoB;UAAAmN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvD1Q,OAAA;UAAGiD,EAAE,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAIxB;UAAAmN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ1Q,OAAA;UAAM2Q,QAAQ,EAAE/I,iBAAkB;UAAC0I,SAAS,EAAC,eAAe;UAAAlN,QAAA,gBAC1DpD,OAAA;YAAKsQ,SAAS,EAAC,aAAa;YAAAlN,QAAA,eAC1BpD,OAAA;cACE+J,IAAI,EAAC,MAAM;cACX6G,WAAW,EAAC,oGAAoB;cAChCxM,KAAK,EAAEsC,OAAQ;cACfmK,QAAQ,EAAGhJ,CAAC,IAAKlB,UAAU,CAACkB,CAAC,CAACiJ,MAAM,CAAC1M,KAAK,CAAE;cAC5CkM,SAAS,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN1Q,OAAA;YAAKsQ,SAAS,EAAC,aAAa;YAAAlN,QAAA,eAC1BpD,OAAA;cACE+J,IAAI,EAAC,MAAM;cACX6G,WAAW,EAAC,0GAAqB;cACjCxM,KAAK,EAAEwC,OAAQ;cACfiK,QAAQ,EAAGhJ,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACiJ,MAAM,CAAC1M,KAAK,CAAE;cAC5CkM,SAAS,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN1Q,OAAA;YAAKsQ,SAAS,EAAC,eAAe;YAAAlN,QAAA,gBAC5BpD,OAAA;cAAQ+J,IAAI,EAAC,QAAQ;cAACuG,SAAS,EAAC,oBAAoB;cAAAlN,QAAA,EAAC;YAAe;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC7E1Q,OAAA;cAAQ+J,IAAI,EAAC,OAAO;cAACuG,SAAS,EAAC,oBAAoB;cAAAlN,QAAA,EAAC;YAAK;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClE1Q,OAAA;cACE+J,IAAI,EAAC,QAAQ;cACbuG,SAAS,EAAC,mBAAmB;cAC7BS,OAAO,EAAEA,CAAA,KAAM;gBACb;gBACApK,UAAU,CAACC,OAAO,CAAC;gBACnBC,UAAU,CAACH,OAAO,CAAC;cACrB,CAAE;cAAAtD,QAAA,EACH;YAED;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,EACN,CAAC1J,UAAU,CAACN,OAAO,CAACpF,MAAM,GAAG,CAAC,IAAI0F,UAAU,CAACJ,OAAO,CAACtF,MAAM,GAAG,CAAC,kBAC9DtB,OAAA;UAAOsQ,SAAS,EAAC,kBAAkB;UAAAlN,QAAA,GAChC4D,UAAU,CAACN,OAAO,CAACpF,MAAM,GAAG,CAAC,IAAI,CAAC8F,eAAe,iBAChDpH,OAAA;YAASsQ,SAAS,EAAC,kBAAkB;YAAAlN,QAAA,gBACnCpD,OAAA;cAAAoD,QAAA,EAAI;YAAoC;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7C1Q,OAAA;cAAOsQ,SAAS,EAAC,mBAAmB;cAAAlN,QAAA,gBAClCpD,OAAA;gBAAAoD,QAAA,eACEpD,OAAA;kBAAAoD,QAAA,gBACEpD,OAAA;oBAAAoD,QAAA,EAAI;kBAAK;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACd1Q,OAAA;oBAAAoD,QAAA,EAAI;kBAAW;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACpB1Q,OAAA;oBAAAoD,QAAA,EAAI;kBAAU;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACnB1Q,OAAA;oBAAAoD,QAAA,EAAI;kBAAM;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACR1Q,OAAA;gBAAAoD,QAAA,EACG4D,UAAU,CAACN,OAAO,CAACxC,GAAG,CAAC,CAAC8M,CAAC,EAAEC,GAAG,KAAK;kBAClC,MAAMhP,QAAQ,GACZ,CAAC+O,CAAC,CAACpP,IAAI,GAAG,GAAGiC,aAAa,CAACmN,CAAC,CAACpP,IAAI,CAAC,MAAM,GAAG,EAAE,KAC5CoP,CAAC,CAAC5C,MAAM,GAAG,GAAGvK,aAAa,CAACmN,CAAC,CAAC5C,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,IACjD4C,CAAC,CAAC3C,WAAW,GAAG,GAAGxK,aAAa,CAACmN,CAAC,CAAC3C,WAAW,CAAC,GAAG,GAAG,EAAE,CAAC,IACxD2C,CAAC,CAAC7N,QAAQ,GAAG,GAAGU,aAAa,CAACmN,CAAC,CAAC7N,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;kBAEpD,oBACEnD,OAAA;oBAAAoD,QAAA,gBACEpD,OAAA;sBAAAoD,QAAA,EAAKnB;oBAAQ;sBAAAsO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACnB1Q,OAAA;sBAAAoD,QAAA,EAAK4N,CAAC,CAAC1C,GAAG,KAAK,CAAC,CAAC,GAAG0C,CAAC,CAAC1C,GAAG,GAAG;oBAAE;sBAAAiC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACpC1Q,OAAA;sBAAAoD,QAAA,EAAK4N,CAAC,CAACzC,GAAG,KAAK,CAAC,CAAC,GAAGyC,CAAC,CAACzC,GAAG,GAAG;oBAAE;sBAAAgC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACpC1Q,OAAA;sBAAAoD,QAAA,eACEpD,OAAA;wBACE+J,IAAI,EAAC,QAAQ;wBACbuG,SAAS,EAAC,kBAAkB;wBAC5BS,OAAO,EAAEA,CAAA,KAAM;0BACb1J,kBAAkB,CAACpF,QAAQ,CAAC;wBAC9B,CAAE;wBAAAmB,QAAA,EACH;sBAED;wBAAAmN,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEP,CAAC;kBAAA,GAfE,MAAMO,GAAG,EAAE;oBAAAV,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAgBhB,CAAC;gBAET,CAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAEV,EAEA1J,UAAU,CAACJ,OAAO,CAACtF,MAAM,GAAG,CAAC,IAAI,CAACgG,eAAe,iBAChDtH,OAAA;YAASsQ,SAAS,EAAC,kBAAkB;YAAAlN,QAAA,gBACnCpD,OAAA;cAAAoD,QAAA,EAAI;YAAqC;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9C1Q,OAAA;cAAOsQ,SAAS,EAAC,mBAAmB;cAAAlN,QAAA,gBAClCpD,OAAA;gBAAAoD,QAAA,eACEpD,OAAA;kBAAAoD,QAAA,gBACEpD,OAAA;oBAAAoD,QAAA,EAAI;kBAAK;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACd1Q,OAAA;oBAAAoD,QAAA,EAAI;kBAAW;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACpB1Q,OAAA;oBAAAoD,QAAA,EAAI;kBAAU;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACnB1Q,OAAA;oBAAAoD,QAAA,EAAI;kBAAM;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACR1Q,OAAA;gBAAAoD,QAAA,EACG4D,UAAU,CAACJ,OAAO,CAAC1C,GAAG,CAAC,CAAC8M,CAAC,EAAEC,GAAG,KAAK;kBAClC,MAAMhP,QAAQ,GACZ,CAAC+O,CAAC,CAACpP,IAAI,GAAG,GAAGiC,aAAa,CAACmN,CAAC,CAACpP,IAAI,CAAC,MAAM,GAAG,EAAE,KAC5CoP,CAAC,CAAC5C,MAAM,GAAG,GAAGvK,aAAa,CAACmN,CAAC,CAAC5C,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,IACjD4C,CAAC,CAAC3C,WAAW,GAAG,GAAGxK,aAAa,CAACmN,CAAC,CAAC3C,WAAW,CAAC,GAAG,GAAG,EAAE,CAAC,IACxD2C,CAAC,CAAC7N,QAAQ,GAAG,GAAGU,aAAa,CAACmN,CAAC,CAAC7N,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;kBAEpD,oBACEnD,OAAA;oBAAAoD,QAAA,gBACEpD,OAAA;sBAAAoD,QAAA,EAAKnB;oBAAQ;sBAAAsO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACnB1Q,OAAA;sBAAAoD,QAAA,EAAK4N,CAAC,CAAC1C,GAAG,KAAK,CAAC,CAAC,GAAG0C,CAAC,CAAC1C,GAAG,GAAG;oBAAE;sBAAAiC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACpC1Q,OAAA;sBAAAoD,QAAA,EAAK4N,CAAC,CAACzC,GAAG,KAAK,CAAC,CAAC,GAAGyC,CAAC,CAACzC,GAAG,GAAG;oBAAE;sBAAAgC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACpC1Q,OAAA;sBAAAoD,QAAA,eACEpD,OAAA;wBACE+J,IAAI,EAAC,QAAQ;wBACbuG,SAAS,EAAC,kBAAkB;wBAC5BS,OAAO,EAAEA,CAAA,KAAM;0BACbxJ,kBAAkB,CAACtF,QAAQ,CAAC;wBAC9B,CAAE;wBAAAmB,QAAA,EACH;sBAED;wBAAAmN,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACP,CAAC;kBAAA,GAdE,MAAMO,GAAG,EAAE;oBAAAV,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAehB,CAAC;gBAET,CAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAKhB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGI,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEU,CAAC,EAETxJ,KAAK,iBAAIlH,OAAA;QAAKsQ,SAAS,EAAC,eAAe;QAAAlN,QAAA,EAAE8D;MAAK;QAAAqJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAC,EACvDlJ,OAAO,iBACNxH,OAAA;QAAKsQ,SAAS,EAAC,iBAAiB;QAAAlN,QAAA,gBAC9BpD,OAAA;UAAKsQ,SAAS,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/B1Q,OAAA;UAAAoD,QAAA,EAAIsE;QAAc;UAAA6I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CACN,EAEA,CAAClJ,OAAO,IAAIV,YAAY,IAAI,CAACI,KAAK,iBACjClH,OAAA;QAASsQ,SAAS,EAAC,qBAAqB;QAAAlN,QAAA,gBACtCpD,OAAA;UAAKsQ,SAAS,EAAC,cAAc;UAAAlN,QAAA,gBAC7BpD,OAAA;YAAAoD,QAAA,EAAI;UAA4B;YAAAmN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrC1Q,OAAA;YAAKsQ,SAAS,EAAC,aAAa;YAAAlN,QAAA,eAC5BpD,OAAA;cAAAoD,QAAA,GACGS,aAAa,EAAAkB,qBAAA,IAAAC,sBAAA,GAAC8B,YAAY,CAACwC,0BAA0B,cAAAtE,sBAAA,uBAAvCA,sBAAA,CAAyCpD,IAAI,cAAAmD,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC,EAClE,EAAAE,sBAAA,GAAA6B,YAAY,CAACwC,0BAA0B,cAAArE,sBAAA,uBAAvCA,sBAAA,CAAyCmJ,MAAM,KAAI,OAAOvK,aAAa,CAACiD,YAAY,CAACwC,0BAA0B,CAAC8E,MAAM,CAAC,EAAE,EACzH,EAAAlJ,sBAAA,GAAA4B,YAAY,CAACwC,0BAA0B,cAAApE,sBAAA,uBAAvCA,sBAAA,CAAyCmJ,WAAW,KAAI,OAAOxK,aAAa,CAACiD,YAAY,CAACwC,0BAA0B,CAAC+E,WAAW,CAAC,EAAE,EACnI,EAAAlJ,sBAAA,GAAA2B,YAAY,CAACwC,0BAA0B,cAAAnE,sBAAA,uBAAvCA,sBAAA,CAAyChC,QAAQ,KAAI,IAAIU,aAAa,CAACiD,YAAY,CAACwC,0BAA0B,CAACnG,QAAQ,CAAC,EAAE;YAAA;cAAAoN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAEN1Q,OAAA;YAAKsQ,SAAS,EAAC,aAAa;YAAAlN,QAAA,eAC1BpD,OAAA;cAAAoD,QAAA,GACGS,aAAa,EAAAuB,sBAAA,IAAAC,sBAAA,GAACyB,YAAY,CAACyC,0BAA0B,cAAAlE,sBAAA,uBAAvCA,sBAAA,CAAyCzD,IAAI,cAAAwD,sBAAA,cAAAA,sBAAA,GAAI,EAAE,CAAC,EAClE,EAAAE,sBAAA,GAAAwB,YAAY,CAACyC,0BAA0B,cAAAjE,sBAAA,uBAAvCA,sBAAA,CAAyC8I,MAAM,KAAI,OAAOvK,aAAa,CAACiD,YAAY,CAACyC,0BAA0B,CAAC6E,MAAM,CAAC,EAAE,EACzH,EAAA7I,sBAAA,GAAAuB,YAAY,CAACyC,0BAA0B,cAAAhE,sBAAA,uBAAvCA,sBAAA,CAAyC8I,WAAW,KAAI,OAAOxK,aAAa,CAACiD,YAAY,CAACyC,0BAA0B,CAAC8E,WAAW,CAAC,EAAE,EACnI,EAAA7I,sBAAA,GAAAsB,YAAY,CAACyC,0BAA0B,cAAA/D,sBAAA,uBAAvCA,sBAAA,CAAyCrC,QAAQ,KAAI,IAAIU,aAAa,CAACiD,YAAY,CAACyC,0BAA0B,CAACpG,QAAQ,CAAC,EAAE;YAAA;cAAAoN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC,eAGJ1Q,OAAA;UAAIiD,EAAE,EAAC,aAAa;UAAAG,QAAA,EAAC;QAAa;UAAAmN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvC1Q,OAAA;UAAGsQ,SAAS,EAAC,cAAc;UAAAlN,QAAA,EAAE0D,YAAY,CAACmB;QAAuB;UAAAsI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtE1Q,OAAA;UAAKsQ,SAAS,EAAC,gBAAgB;UAAAlN,QAAA,gBAC7BpD,OAAA;YAAOsQ,SAAS,EAAC,cAAc;YAAAlN,QAAA,eAC7BpD,OAAA;cAAAoD,QAAA,gBACEpD,OAAA;gBAAAoD,QAAA,gBACEpD,OAAA;kBAAAoD,QAAA,EAAI;gBAAY;kBAAAmN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACrB1Q,OAAA;kBAAIsQ,SAAS,EAAC,YAAY;kBAAAlN,QAAA,gBACxBpD,OAAA;oBAAKsQ,SAAS,EAAC,mBAAmB;oBAAAlN,QAAA,eAChCpD,OAAA;sBAAKsQ,SAAS,EAAC,gBAAgB;sBAACY,KAAK,EAAE;wBAAEC,KAAK,EAAE,IAAA1L,sBAAA,GAAGqB,YAAY,CAACoB,iBAAiB,cAAAzC,sBAAA,cAAAA,sBAAA,GAAI,CAAC;sBAAI;oBAAE;sBAAA8K,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChG,CAAC,eACN1Q,OAAA;oBAAKsQ,SAAS,EAAC,YAAY;oBAAAlN,QAAA,gBACzBpD,OAAA;sBAAMsQ,SAAS,EAAC,aAAa;sBAAAlN,QAAA,GAAAsC,uBAAA,GAAEoB,YAAY,CAACoB,iBAAiB,cAAAxC,uBAAA,cAAAA,uBAAA,GAAI;oBAAK;sBAAA6K,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,EAC7E5J,YAAY,CAACoB,iBAAiB,KAAK,IAAI,IAAIpB,YAAY,CAACoB,iBAAiB,KAAKtE,SAAS,iBACtF5D,OAAA;sBAAMsQ,SAAS,EACbxJ,YAAY,CAACoB,iBAAiB,IAAI,EAAE,GAChC,qBAAqB,GACrBpB,YAAY,CAACoB,iBAAiB,IAAI,EAAE,GACpC,uBAAuB,GACvB,oBACL;sBAAA9E,QAAA,EAEG0D,YAAY,CAACoB,iBAAiB,IAAI,EAAE,GAChC,MAAM,GACNpB,YAAY,CAACoB,iBAAiB,IAAI,EAAE,GACpC,QAAQ,GACR;oBAAO;sBAAAqI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAET,CACP;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACL1Q,OAAA;gBAAAoD,QAAA,gBACEpD,OAAA;kBAAAoD,QAAA,EAAI;gBAAW;kBAAAmN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpB1Q,OAAA;kBAAIsQ,SAAS,EAAC,kBAAkB;kBAAAlN,QAAA,eAC9BpD,OAAA;oBAAMsQ,SAAS,EAAE,OAAOxJ,YAAY,CAACmD,gBAAgB,EAAG;oBAAA7G,QAAA,EACrD0D,YAAY,CAACmD,gBAAgB,KAAK,OAAO,GAAG,IAAI,GACjDnD,YAAY,CAACmD,gBAAgB,KAAK,kBAAkB,GAAG,YAAY,GACnEnD,YAAY,CAACmD,gBAAgB,KAAK,UAAU,GAAG,MAAM,GACrDnD,YAAY,CAACmD;kBAAgB;oBAAAsG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH,CAAC,eACL1Q,OAAA;gBAAAoD,QAAA,gBACEpD,OAAA;kBAAAoD,QAAA,EAAI;gBAAW;kBAAAmN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpB1Q,OAAA;kBAAIsQ,SAAS,EAAC,sBAAsB;kBAAAlN,QAAA,gBAClCpD,OAAA;oBAAMsQ,SAAS,EAAC,2BAA2B;oBAAAlN,QAAA,GAAAuC,uBAAA,GACxCmB,YAAY,CAAC+C,2BAA2B,cAAAlE,uBAAA,cAAAA,uBAAA,GAAI;kBAAsB;oBAAA4K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/D,CAAC,KACP,GAAA9K,uBAAA,GAACkB,YAAY,CAACkD,2BAA2B,cAAApE,uBAAA,cAAAA,uBAAA,GAAI,qBAAqB;gBAAA;kBAAA2K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEH,CAAC,eACL1Q,OAAA;gBAAAoD,QAAA,gBACEpD,OAAA;kBAAAoD,QAAA,EAAI;gBAAmC;kBAAAmN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC5C1Q,OAAA;kBAAIsQ,SAAS,EAAC,qBAAqB;kBAAAlN,QAAA,eACjCpD,OAAA;oBAAKsQ,SAAS,EAAC,mBAAmB;oBAAAlN,QAAA,gBAChCpD,OAAA;sBAAMiD,EAAE,EAAC,QAAQ;sBAAAG,QAAA,GAAAyC,uBAAA,GAAEiB,YAAY,CAAC6C,yBAAyB,cAAA9D,uBAAA,cAAAA,uBAAA,GAAI;oBAAG;sBAAA0K,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,mCACxE,eAAA1Q,OAAA;sBAAKsQ,SAAS,EAAC,gBAAgB;sBAAAlN,QAAA,EAAC;oBAEhC;sBAAAmN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACL1Q,OAAA;gBAAAoD,QAAA,gBACEpD,OAAA;kBAAAoD,QAAA,eACEpD,OAAA;oBAAKsQ,SAAS,EAAC,mBAAmB;oBAAAlN,QAAA,GAAC,qEAEjC,eAAApD,OAAA;sBAAMsQ,SAAS,EAAC,gBAAgB;sBAAAlN,QAAA,EAAC;oBAEjC;sBAAAmN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACL1Q,OAAA;kBAAIsQ,SAAS,EAAC,qBAAqB;kBAAAlN,QAAA,GAChC,EAAA0C,qBAAA,GAAAgB,YAAY,CAACoD,cAAc,cAAApE,qBAAA,uBAA3BA,qBAAA,CAA6BsL,YAAY,KAAI,IAAArL,sBAAA,GAAGe,YAAY,CAACoD,cAAc,cAAAnE,sBAAA,uBAA3BA,sBAAA,CAA6BqL,YAAY,MAAM,EAC/F,EAAApL,sBAAA,GAAAc,YAAY,CAACoD,cAAc,cAAAlE,sBAAA,uBAA3BA,sBAAA,CAA6BqL,kBAAkB,KAAI,IAAApL,sBAAA,GAAGa,YAAY,CAACoD,cAAc,cAAAjE,sBAAA,uBAA3BA,sBAAA,CAA6BoL,kBAAkB,MAAM,EAC3G,EAAAnL,sBAAA,GAAAY,YAAY,CAACoD,cAAc,cAAAhE,sBAAA,uBAA3BA,sBAAA,CAA6BoL,uBAAuB,KAAI,IAAAnL,sBAAA,GAAGW,YAAY,CAACoD,cAAc,cAAA/D,sBAAA,uBAA3BA,sBAAA,CAA6BmL,uBAAuB,GAAG,EAClH,EAAAlL,sBAAA,GAAAU,YAAY,CAACoD,cAAc,cAAA9D,sBAAA,uBAA3BA,sBAAA,CAA6BmL,gBAAgB,KAAI,IAAAlL,sBAAA,GAAGS,YAAY,CAACoD,cAAc,cAAA7D,sBAAA,uBAA3BA,sBAAA,CAA6BkL,gBAAgB,EAAE;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACR1Q,OAAA;YAAKsQ,SAAS,EAAC,cAAc;YAACY,KAAK,EAAE;cACnCM,MAAM,EAAE,GAAGC,IAAI,CAACC,GAAG,CACjB,CAAED,IAAI,CAACC,GAAG,EAAApL,uBAAA,IAAAC,uBAAA,GAACO,YAAY,CAAC2C,kBAAkB,cAAAlD,uBAAA,uBAA/BA,uBAAA,CAAiCsH,WAAW,cAAAvH,uBAAA,cAAAA,uBAAA,GAAI,CAAC,GAAAE,uBAAA,IAAAC,uBAAA,GAAEK,YAAY,CAAC2C,kBAAkB,cAAAhD,uBAAA,uBAA/BA,uBAAA,CAAiCqH,WAAW,cAAAtH,uBAAA,cAAAA,uBAAA,GAAI,CAAC,CAAC,GAAI,CAAC,IAAI,GAAG,EAC5H,GAAG,CAAC;cACN,CAAC,GAAG,CAAC;YACP,CAAE;YAAApD,QAAA,gBAEEpD,OAAA;cAAKsQ,SAAS,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,EACL5J,YAAY,CAACqD,iBAAiB,iBAC/BnK,OAAA;cAAKsQ,SAAS,EAAC,gBAAgB;cAAAlN,QAAA,eAC7BpD,OAAA,CAACF,IAAI;gBACH6R,IAAI,EAAE7K,YAAY,CAACqD,iBAAkB;gBACrCyH,WAAW,EAAC,UAAU;gBACtBC,QAAQ,EAAC,MAAM;gBACfC,QAAQ,EAAE;kBAAEC,CAAC,EAAE,EAAE;kBAAEC,CAAC,EAAE;gBAAG,CAAE;gBAC3BC,UAAU,EAAE;kBAAEC,QAAQ,EAAE,CAAC;kBAAEC,WAAW,EAAE;gBAAE,CAAE;gBAC5CC,SAAS,EAAE;kBAAEL,CAAC,EAAE,GAAG;kBAAEC,CAAC,EAAE;gBAAG,CAAE;gBAC7BK,uBAAuB,EAAEA,CAAC;kBAAEC;gBAAU,CAAC,kBACtCtS,OAAA;kBAAGsQ,SAAS,EAAC,WAAW;kBAAAlN,QAAA,gBACrBpD,OAAA;oBAAAoD,QAAA,EAAQkP,SAAS,CAACrP;kBAAE;oBAAAsN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAC7B1Q,OAAA;oBACEsQ,SAAS,EAAC,gBAAgB;oBAC1ByB,CAAC,EAAC,KAAK;oBACPC,CAAC,EAAC,KAAK;oBACPb,KAAK,EAAC,KAAK;oBAEXK,MAAM,EAAC,IAAI;oBACXN,KAAK,EAAE;sBACLqB,IAAI,EAAED,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACuD,SAAS,IAAIiI,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACwD,SAAS,GACpF,SAAS,CAAE;sBAAA,EACXgI,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACoD,cAAc,CAACsI,UAAU,GACvD,SAAS,CAAE;sBAAA,EACX,SAAS;sBAAE;sBACfC,MAAM,EAAEH,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACuD,SAAS,IAAIiI,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACwD,SAAS,GACtF,SAAS,CAAE;sBAAA,EACXgI,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACoD,cAAc,CAACsI,UAAU,GACvD,SAAS,CAAE;sBAAA,EACX,SAAS;sBAAE;sBACfE,WAAW,EAAE,OAAO;sBACpBC,EAAE,EAAE,IAAI;sBAAG;sBACXC,EAAE,EAAE,IAAI,CAAG;oBACb;kBAAE;oBAAArC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACF1Q,OAAA;oBACEsQ,SAAS,EAAC,gBAAgB;oBAC1ByB,CAAC,EAAC,GAAG;oBACLC,CAAC,EAAC,GAAG;oBACLd,KAAK,EAAE;sBACL2B,QAAQ,EAAE,MAAM;sBAChBC,UAAU,EAAE,OAAO;sBACnBP,IAAI,EAAED,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACuD,SAAS,IAAIiI,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACwD,SAAS,GACpF,SAAS,CAAE;sBAAA,EACXgI,SAAS,CAACrP,EAAE,KAAK6D,YAAY,CAACoD,cAAc,CAACsI,UAAU,GACvD,SAAS,CAAE;sBAAA,EACX,MAAM;sBAAK;sBACfO,UAAU,EAAE,QAAQ;sBACpBC,gBAAgB,EAAE,QAAQ;sBAC1BC,aAAa,EAAE,KAAK;sBACpBP,WAAW,EAAE,KAAK;sBAClBQ,aAAa,EAAE;oBACjB,CAAE;oBAAA9P,QAAA,EAEDS,aAAa,CAACyO,SAAS,CAAC1Q,IAAI;kBAAC;oBAAA2O,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN;cACH;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGR,CAAC;AAAC5L,EAAA,CAj7BID,YAAY;AAAAsO,EAAA,GAAZtO,YAAY;AAm7BlB,eAAeA,YAAY;AAAC,IAAAsO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}