{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/promise-function-async */\nvar server_address_1 = require(\"../server-address\");\nfunction resolveToSelf(address) {\n  return Promise.resolve([address]);\n}\nvar ConfiguredCustomResolver = /** @class */function () {\n  function ConfiguredCustomResolver(resolverFunction) {\n    this._resolverFunction = resolverFunction !== null && resolverFunction !== void 0 ? resolverFunction : resolveToSelf;\n  }\n  ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\n    var _this = this;\n    return new Promise(function (resolve) {\n      return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n    }).then(function (resolved) {\n      if (!Array.isArray(resolved)) {\n        throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' +\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        \"Each address is '<host>:<port>'. Got: \".concat(resolved));\n      }\n      return resolved.map(function (r) {\n        return server_address_1.ServerAddress.fromUrl(r);\n      });\n    });\n  };\n  return ConfiguredCustomResolver;\n}();\nexports.default = ConfiguredCustomResolver;","map":{"version":3,"names":["Object","defineProperty","exports","value","server_address_1","require","resolveToSelf","address","Promise","resolve","ConfiguredCustomResolver","resolverFunction","_resolverFunction","prototype","seedRouter","_this","asHostPort","then","resolved","Array","isArray","TypeError","concat","map","r","ServerAddress","fromUrl","default"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-core/lib/internal/resolver/configured-custom-resolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/promise-function-async */\nvar server_address_1 = require(\"../server-address\");\nfunction resolveToSelf(address) {\n    return Promise.resolve([address]);\n}\nvar ConfiguredCustomResolver = /** @class */ (function () {\n    function ConfiguredCustomResolver(resolverFunction) {\n        this._resolverFunction = resolverFunction !== null && resolverFunction !== void 0 ? resolverFunction : resolveToSelf;\n    }\n    ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n        }).then(function (resolved) {\n            if (!Array.isArray(resolved)) {\n                throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' +\n                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                    \"Each address is '<host>:<port>'. Got: \".concat(resolved));\n            }\n            return resolved.map(function (r) { return server_address_1.ServerAddress.fromUrl(r); });\n        });\n    };\n    return ConfiguredCustomResolver;\n}());\nexports.default = ConfiguredCustomResolver;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,SAASC,aAAaA,CAACC,OAAO,EAAE;EAC5B,OAAOC,OAAO,CAACC,OAAO,CAAC,CAACF,OAAO,CAAC,CAAC;AACrC;AACA,IAAIG,wBAAwB,GAAG,aAAe,YAAY;EACtD,SAASA,wBAAwBA,CAACC,gBAAgB,EAAE;IAChD,IAAI,CAACC,iBAAiB,GAAGD,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAGA,gBAAgB,GAAGL,aAAa;EACxH;EACAI,wBAAwB,CAACG,SAAS,CAACJ,OAAO,GAAG,UAAUK,UAAU,EAAE;IAC/D,IAAIC,KAAK,GAAG,IAAI;IAChB,OAAO,IAAIP,OAAO,CAAC,UAAUC,OAAO,EAAE;MAClC,OAAOA,OAAO,CAACM,KAAK,CAACH,iBAAiB,CAACE,UAAU,CAACE,UAAU,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC1B,MAAM,IAAIG,SAAS,CAAC,2HAA2H;QAC3I;QACA,wCAAwC,CAACC,MAAM,CAACJ,QAAQ,CAAC,CAAC;MAClE;MACA,OAAOA,QAAQ,CAACK,GAAG,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAOpB,gBAAgB,CAACqB,aAAa,CAACC,OAAO,CAACF,CAAC,CAAC;MAAE,CAAC,CAAC;IAC3F,CAAC,CAAC;EACN,CAAC;EACD,OAAOd,wBAAwB;AACnC,CAAC,CAAC,CAAE;AACJR,OAAO,CAACyB,OAAO,GAAGjB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}