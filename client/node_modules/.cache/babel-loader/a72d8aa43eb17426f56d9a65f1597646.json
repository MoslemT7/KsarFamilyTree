{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TelemetryObserver = exports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LogoffObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\nvar lang_1 = require(\"../lang\");\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */function () {\n  function StreamObserver() {}\n  StreamObserver.prototype.onNext = function (rawRecord) {};\n  StreamObserver.prototype.onError = function (_error) {};\n  StreamObserver.prototype.onCompleted = function (meta) {};\n  return StreamObserver;\n}();\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */function (_super) {\n  __extends(ResultStreamObserver, _super);\n  /**\n   *\n   * @param {Object} param\n   * @param {Object} param.server\n   * @param {boolean} param.reactive\n   * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n   * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n   * @param {number|Integer} param.fetchSize -\n   * @param {function(err: Error): Promise|void} param.beforeError -\n   * @param {function(err: Error): Promise|void} param.afterError -\n   * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n   * @param {function(keys: string[]): Promise|void} param.afterKeys -\n   * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n   * @param {function(metadata: Object): Promise|void} param.afterComplete -\n   * @param {function(metadata: Object): Promise|void} param.enrichMetadata -\n   */\n  function ResultStreamObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.reactive,\n      reactive = _c === void 0 ? false : _c,\n      moreFunction = _b.moreFunction,\n      discardFunction = _b.discardFunction,\n      _d = _b.fetchSize,\n      fetchSize = _d === void 0 ? FETCH_ALL : _d,\n      beforeError = _b.beforeError,\n      afterError = _b.afterError,\n      beforeKeys = _b.beforeKeys,\n      afterKeys = _b.afterKeys,\n      beforeComplete = _b.beforeComplete,\n      afterComplete = _b.afterComplete,\n      server = _b.server,\n      _e = _b.highRecordWatermark,\n      highRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e,\n      _f = _b.lowRecordWatermark,\n      lowRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f,\n      enrichMetadata = _b.enrichMetadata,\n      onDb = _b.onDb;\n    var _this = _super.call(this) || this;\n    _this._fieldKeys = null;\n    _this._fieldLookup = null;\n    _this._head = null;\n    _this._queuedRecords = [];\n    _this._tail = null;\n    _this._error = null;\n    _this._observers = [];\n    _this._meta = {};\n    _this._server = server;\n    _this._beforeError = beforeError;\n    _this._afterError = afterError;\n    _this._beforeKeys = beforeKeys;\n    _this._afterKeys = afterKeys;\n    _this._beforeComplete = beforeComplete;\n    _this._afterComplete = afterComplete;\n    _this._enrichMetadata = enrichMetadata || lang_1.functional.identity;\n    _this._queryId = null;\n    _this._moreFunction = moreFunction;\n    _this._discardFunction = discardFunction;\n    _this._discard = false;\n    _this._fetchSize = fetchSize;\n    _this._lowRecordWatermark = lowRecordWatermark;\n    _this._highRecordWatermark = highRecordWatermark;\n    _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n    _this._setupAutoPull();\n    _this._paused = false;\n    _this._pulled = !reactive;\n    _this._haveRecordStreamed = false;\n    _this._onDb = onDb;\n    return _this;\n  }\n  /**\n   * Pause the record consuming\n   *\n   * This function will supend the record consuming. It will not cancel the stream and the already\n   * requested records will be sent to the subscriber.\n   */\n  ResultStreamObserver.prototype.pause = function () {\n    this._paused = true;\n  };\n  /**\n   * Resume the record consuming\n   *\n   * This function will resume the record consuming fetching more records from the server.\n   */\n  ResultStreamObserver.prototype.resume = function () {\n    this._paused = false;\n    this._setupAutoPull(true);\n    this._state.pull(this);\n  };\n  /**\n   * Will be called on every record that comes in and transform a raw record\n   * to a Object. If user-provided observer is present, pass transformed record\n   * to it's onNext method, otherwise, push to record que.\n   * @param {Array} rawRecord - An array with the raw record\n   */\n  ResultStreamObserver.prototype.onNext = function (rawRecord) {\n    this._haveRecordStreamed = true;\n    var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n    if (this._observers.some(function (o) {\n      return o.onNext;\n    })) {\n      this._observers.forEach(function (o) {\n        if (o.onNext) {\n          o.onNext(record);\n        }\n      });\n    } else {\n      this._queuedRecords.push(record);\n      if (this._queuedRecords.length > this._highRecordWatermark) {\n        this._autoPull = false;\n      }\n    }\n  };\n  ResultStreamObserver.prototype.onCompleted = function (meta) {\n    this._state.onSuccess(this, meta);\n  };\n  /**\n   * Will be called on errors.\n   * If user-provided observer is present, pass the error\n   * to it's onError method, otherwise set instance variable _error.\n   * @param {Object} error - An error object\n   */\n  ResultStreamObserver.prototype.onError = function (error) {\n    this._state.onError(this, error);\n  };\n  /**\n   * Cancel pending record stream\n   */\n  ResultStreamObserver.prototype.cancel = function () {\n    this._discard = true;\n  };\n  /**\n   * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n   * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n   *\n   * However, some operations can be represented as a single message which receives full metadata in a single response.\n   * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n   * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n   *\n   * This function prepares the observer to only handle a single response message.\n   */\n  ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n    this._head = [];\n    this._fieldKeys = [];\n    this._setState(_states.STREAMING);\n  };\n  /**\n   * Mark this observer as if it has completed with no metadata.\n   */\n  ResultStreamObserver.prototype.markCompleted = function () {\n    this._head = [];\n    this._fieldKeys = [];\n    this._tail = {};\n    this._setState(_states.SUCCEEDED);\n  };\n  /**\n   * Subscribe to events with provided observer.\n   * @param {Object} observer - Observer object\n   * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n   * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n   * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n   * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n   */\n  ResultStreamObserver.prototype.subscribe = function (observer) {\n    if (this._head && observer.onKeys) {\n      observer.onKeys(this._head);\n    }\n    if (this._queuedRecords.length > 0 && observer.onNext) {\n      for (var i = 0; i < this._queuedRecords.length; i++) {\n        observer.onNext(this._queuedRecords[i]);\n        if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n          this._autoPull = true;\n          if (this._state === _states.READY) {\n            this._handleStreaming();\n          }\n        }\n      }\n    }\n    if (this._tail && observer.onCompleted) {\n      observer.onCompleted(this._tail);\n    }\n    if (this._error) {\n      observer.onError(this._error);\n    }\n    this._observers.push(observer);\n    if (this._state === _states.READY) {\n      this._handleStreaming();\n    }\n  };\n  ResultStreamObserver.prototype._handleHasMore = function (meta) {\n    // We've consumed current batch and server notified us that there're more\n    // records to stream. Let's invoke more or discard function based on whether\n    // the user wants to discard streaming or not\n    this._setState(_states.READY); // we've done streaming\n    this._handleStreaming();\n    delete meta.has_more;\n  };\n  ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n    var _this = this;\n    var completionMetadata = this._enrichMetadata(Object.assign(this._server ? {\n      server: this._server\n    } : {}, this._meta, {\n      stream_summary: {\n        have_records_streamed: this._haveRecordStreamed,\n        pulled: this._pulled,\n        has_keys: this._fieldKeys.length > 0\n      }\n    }, meta));\n    if (![undefined, null, 'r', 'w', 'rw', 's'].includes(completionMetadata.type)) {\n      this.onError((0, neo4j_driver_core_1.newError)(\"Server returned invalid query type. Expected one of [undefined, null, \\\"r\\\", \\\"w\\\", \\\"rw\\\", \\\"s\\\"] but got '\".concat(completionMetadata.type, \"'\"), PROTOCOL_ERROR));\n      return;\n    }\n    this._setState(_states.SUCCEEDED);\n    var beforeHandlerResult = null;\n    if (this._beforeComplete) {\n      beforeHandlerResult = this._beforeComplete(completionMetadata);\n    }\n    var continuation = function () {\n      // End of stream\n      _this._tail = completionMetadata;\n      if (_this._observers.some(function (o) {\n        return o.onCompleted;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onCompleted) {\n            o.onCompleted(completionMetadata);\n          }\n        });\n      }\n      if (_this._afterComplete) {\n        _this._afterComplete(completionMetadata);\n      }\n    };\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n  ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n    var _this = this;\n    if (this._fieldKeys === null) {\n      // Stream header, build a name->index field lookup table\n      // to be used by records. This is an optimization to make it\n      // faster to look up fields in a record by name, rather than by index.\n      // Since the records we get back via Bolt are just arrays of values.\n      this._fieldKeys = [];\n      this._fieldLookup = {};\n      if (meta.fields && meta.fields.length > 0) {\n        this._fieldKeys = meta.fields;\n        for (var i = 0; i < meta.fields.length; i++) {\n          this._fieldLookup[meta.fields[i]] = i;\n        }\n      }\n      if (meta.db !== null && this._onDb !== undefined) {\n        this._onDb(meta.db);\n      }\n      if (meta.fields != null) {\n        // remove fields key from metadata object\n        delete meta.fields;\n      }\n      // Extract server generated query id for use in requestMore and discard\n      // functions\n      if (meta.qid !== null && meta.qid !== undefined) {\n        this._queryId = meta.qid;\n        // remove qid from metadata object\n        delete meta.qid;\n      }\n      this._storeMetadataForCompletion(meta);\n      var beforeHandlerResult = null;\n      if (this._beforeKeys) {\n        beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n      }\n      var continuation_1 = function () {\n        _this._head = _this._fieldKeys;\n        if (_this._observers.some(function (o) {\n          return o.onKeys;\n        })) {\n          _this._observers.forEach(function (o) {\n            if (o.onKeys) {\n              o.onKeys(_this._fieldKeys);\n            }\n          });\n        }\n        if (_this._afterKeys) {\n          _this._afterKeys(_this._fieldKeys);\n        }\n        afterSuccess();\n      };\n      if (beforeHandlerResult) {\n        Promise.resolve(beforeHandlerResult).then(function () {\n          return continuation_1();\n        });\n      } else {\n        continuation_1();\n      }\n    }\n  };\n  ResultStreamObserver.prototype._handleError = function (error) {\n    var _this = this;\n    this._setState(_states.FAILED);\n    this._error = error;\n    var beforeHandlerResult = null;\n    if (this._beforeError) {\n      beforeHandlerResult = this._beforeError(error);\n    }\n    var continuation = function () {\n      if (_this._observers.some(function (o) {\n        return o.onError;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onError) {\n            o.onError(error);\n          }\n        });\n      }\n      if (_this._afterError) {\n        _this._afterError(error);\n      }\n    };\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n  ResultStreamObserver.prototype._handleStreaming = function () {\n    if (this._head && this._observers.some(function (o) {\n      return o.onNext || o.onCompleted;\n    })) {\n      if (!this._paused && (this._discard || this._autoPull)) {\n        this._more();\n      }\n    }\n  };\n  ResultStreamObserver.prototype._more = function () {\n    if (this._discard) {\n      this._discardFunction(this._queryId, this);\n    } else {\n      this._pulled = true;\n      this._moreFunction(this._queryId, this._fetchSize, this);\n    }\n    this._setState(_states.STREAMING);\n  };\n  ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n    var keys = Object.keys(meta);\n    var index = keys.length;\n    var key = '';\n    while (index--) {\n      key = keys[index];\n      this._meta[key] = meta[key];\n    }\n  };\n  ResultStreamObserver.prototype._setState = function (state) {\n    this._state = state;\n  };\n  ResultStreamObserver.prototype._setupAutoPull = function () {\n    this._autoPull = true;\n  };\n  return ResultStreamObserver;\n}(StreamObserver);\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */function (_super) {\n  __extends(LoginObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n  function LoginObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onError = _b.onError,\n      onCompleted = _b.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n  LoginObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n  };\n  LoginObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  LoginObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n  return LoginObserver;\n}(StreamObserver);\nexports.LoginObserver = LoginObserver;\nvar LogoffObserver = /** @class */function (_super) {\n  __extends(LogoffObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n  function LogoffObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onError = _b.onError,\n      onCompleted = _b.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n  LogoffObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when logging off ' + neo4j_driver_core_1.json.stringify(record)));\n  };\n  LogoffObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  LogoffObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n  return LogoffObserver;\n}(StreamObserver);\nexports.LogoffObserver = LogoffObserver;\nvar ResetObserver = /** @class */function (_super) {\n  __extends(ResetObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onComplete\n   */\n  function ResetObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onProtocolError = _b.onProtocolError,\n      onError = _b.onError,\n      onComplete = _b.onComplete;\n    var _this = _super.call(this) || this;\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onComplete = onComplete;\n    return _this;\n  }\n  ResetObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n  ResetObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  ResetObserver.prototype.onCompleted = function (metadata) {\n    if (this._onComplete) {\n      this._onComplete(metadata);\n    }\n  };\n  return ResetObserver;\n}(StreamObserver);\nexports.ResetObserver = ResetObserver;\nvar TelemetryObserver = /** @class */function (_super) {\n  __extends(TelemetryObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n  function TelemetryObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onError = _b.onError,\n      onCompleted = _b.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n  TelemetryObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when sending telemetry ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n  TelemetryObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  TelemetryObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n  return TelemetryObserver;\n}(ResultStreamObserver);\nexports.TelemetryObserver = TelemetryObserver;\nvar FailedObserver = /** @class */function (_super) {\n  __extends(FailedObserver, _super);\n  function FailedObserver(_a) {\n    var error = _a.error,\n      onError = _a.onError;\n    var _this = _super.call(this, {\n      beforeError: onError\n    }) || this;\n    _this.onError(error);\n    return _this;\n  }\n  return FailedObserver;\n}(ResultStreamObserver);\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */function (_super) {\n  __extends(CompletedObserver, _super);\n  function CompletedObserver() {\n    var _this = _super.call(this) || this;\n    _super.prototype.markCompleted.call(_this);\n    return _this;\n  }\n  return CompletedObserver;\n}(ResultStreamObserver);\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */function (_super) {\n  __extends(ProcedureRouteObserver, _super);\n  function ProcedureRouteObserver(_a) {\n    var resultObserver = _a.resultObserver,\n      onProtocolError = _a.onProtocolError,\n      onError = _a.onError,\n      onCompleted = _a.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._resultObserver = resultObserver;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    _this._records = [];\n    _this._onProtocolError = onProtocolError;\n    resultObserver.subscribe(_this);\n    return _this;\n  }\n  ProcedureRouteObserver.prototype.onNext = function (record) {\n    this._records.push(record);\n  };\n  ProcedureRouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  ProcedureRouteObserver.prototype.onCompleted = function () {\n    if (this._records !== null && this._records.length !== 1) {\n      this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' + this._records.length + ' records but expected only one.\\n' + neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n      return;\n    }\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n    }\n  };\n  return ProcedureRouteObserver;\n}(StreamObserver);\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */function (_super) {\n  __extends(RouteObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(RawRoutingTable)} param.onCompleted\n   */\n  function RouteObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onProtocolError = _b.onProtocolError,\n      onError = _b.onError,\n      onCompleted = _b.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n  RouteObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n  RouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  RouteObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n    }\n  };\n  return RouteObserver;\n}(StreamObserver);\nexports.RouteObserver = RouteObserver;\nvar _states = {\n  READY_STREAMING: {\n    // async start state\n    onSuccess: function (streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        streamObserver._setState(_states.STREAMING);\n      } // after run succeeded, async directly move to streaming\n      // state\n      );\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'READY_STREAMING';\n    },\n    pull: function () {}\n  },\n  READY: {\n    // reactive start state\n    onSuccess: function (streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        return streamObserver._handleStreaming();\n      } // after run succeeded received, reactive shall start pulling\n      );\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'READY';\n    },\n    pull: function (streamObserver) {\n      return streamObserver._more();\n    }\n  },\n  STREAMING: {\n    onSuccess: function (streamObserver, meta) {\n      if (meta.has_more) {\n        streamObserver._handleHasMore(meta);\n      } else {\n        streamObserver._handlePullSuccess(meta);\n      }\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'STREAMING';\n    },\n    pull: function () {}\n  },\n  FAILED: {\n    onError: function (_error) {\n      // more errors are ignored\n    },\n    name: function () {\n      return 'FAILED';\n    },\n    pull: function () {}\n  },\n  SUCCEEDED: {\n    name: function () {\n      return 'SUCCEEDED';\n    },\n    pull: function () {}\n  }\n};","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","TelemetryObserver","ProcedureRouteObserver","RouteObserver","CompletedObserver","FailedObserver","ResetObserver","LogoffObserver","LoginObserver","ResultStreamObserver","StreamObserver","neo4j_driver_core_1","require","routing_table_raw_1","lang_1","FETCH_ALL","internal","constants","PROTOCOL_ERROR","error","onNext","rawRecord","onError","_error","onCompleted","meta","_super","_a","_b","_c","reactive","moreFunction","discardFunction","_d","fetchSize","beforeError","afterError","beforeKeys","afterKeys","beforeComplete","afterComplete","server","_e","highRecordWatermark","Number","MAX_VALUE","_f","lowRecordWatermark","enrichMetadata","onDb","_this","_fieldKeys","_fieldLookup","_head","_queuedRecords","_tail","_observers","_meta","_server","_beforeError","_afterError","_beforeKeys","_afterKeys","_beforeComplete","_afterComplete","_enrichMetadata","functional","identity","_queryId","_moreFunction","_discardFunction","_discard","_fetchSize","_lowRecordWatermark","_highRecordWatermark","_setState","_states","READY","READY_STREAMING","_setupAutoPull","_paused","_pulled","_haveRecordStreamed","_onDb","pause","resume","_state","pull","record","Record","some","o","forEach","push","length","_autoPull","onSuccess","cancel","prepareToHandleSingleResponse","STREAMING","markCompleted","SUCCEEDED","subscribe","observer","onKeys","i","_handleStreaming","_handleHasMore","has_more","_handlePullSuccess","completionMetadata","assign","stream_summary","have_records_streamed","pulled","has_keys","undefined","includes","type","newError","concat","beforeHandlerResult","continuation","Promise","resolve","then","_handleRunSuccess","afterSuccess","fields","db","qid","_storeMetadataForCompletion","continuation_1","_handleError","FAILED","_more","keys","index","key","state","_onError","_onCompleted","json","stringify","metadata","onProtocolError","onComplete","_onProtocolError","_onComplete","code","message","resultObserver","_resultObserver","_records","default","ofRecord","ofMessageResponse","streamObserver","name"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TelemetryObserver = exports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LogoffObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\nvar lang_1 = require(\"../lang\");\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */ (function () {\n    function StreamObserver() {\n    }\n    StreamObserver.prototype.onNext = function (rawRecord) { };\n    StreamObserver.prototype.onError = function (_error) { };\n    StreamObserver.prototype.onCompleted = function (meta) { };\n    return StreamObserver;\n}());\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */ (function (_super) {\n    __extends(ResultStreamObserver, _super);\n    /**\n     *\n     * @param {Object} param\n     * @param {Object} param.server\n     * @param {boolean} param.reactive\n     * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n     * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n     * @param {number|Integer} param.fetchSize -\n     * @param {function(err: Error): Promise|void} param.beforeError -\n     * @param {function(err: Error): Promise|void} param.afterError -\n     * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n     * @param {function(keys: string[]): Promise|void} param.afterKeys -\n     * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n     * @param {function(metadata: Object): Promise|void} param.afterComplete -\n     * @param {function(metadata: Object): Promise|void} param.enrichMetadata -\n     */\n    function ResultStreamObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.reactive, reactive = _c === void 0 ? false : _c, moreFunction = _b.moreFunction, discardFunction = _b.discardFunction, _d = _b.fetchSize, fetchSize = _d === void 0 ? FETCH_ALL : _d, beforeError = _b.beforeError, afterError = _b.afterError, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, server = _b.server, _e = _b.highRecordWatermark, highRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e, _f = _b.lowRecordWatermark, lowRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, enrichMetadata = _b.enrichMetadata, onDb = _b.onDb;\n        var _this = _super.call(this) || this;\n        _this._fieldKeys = null;\n        _this._fieldLookup = null;\n        _this._head = null;\n        _this._queuedRecords = [];\n        _this._tail = null;\n        _this._error = null;\n        _this._observers = [];\n        _this._meta = {};\n        _this._server = server;\n        _this._beforeError = beforeError;\n        _this._afterError = afterError;\n        _this._beforeKeys = beforeKeys;\n        _this._afterKeys = afterKeys;\n        _this._beforeComplete = beforeComplete;\n        _this._afterComplete = afterComplete;\n        _this._enrichMetadata = enrichMetadata || lang_1.functional.identity;\n        _this._queryId = null;\n        _this._moreFunction = moreFunction;\n        _this._discardFunction = discardFunction;\n        _this._discard = false;\n        _this._fetchSize = fetchSize;\n        _this._lowRecordWatermark = lowRecordWatermark;\n        _this._highRecordWatermark = highRecordWatermark;\n        _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n        _this._setupAutoPull();\n        _this._paused = false;\n        _this._pulled = !reactive;\n        _this._haveRecordStreamed = false;\n        _this._onDb = onDb;\n        return _this;\n    }\n    /**\n     * Pause the record consuming\n     *\n     * This function will supend the record consuming. It will not cancel the stream and the already\n     * requested records will be sent to the subscriber.\n     */\n    ResultStreamObserver.prototype.pause = function () {\n        this._paused = true;\n    };\n    /**\n     * Resume the record consuming\n     *\n     * This function will resume the record consuming fetching more records from the server.\n     */\n    ResultStreamObserver.prototype.resume = function () {\n        this._paused = false;\n        this._setupAutoPull(true);\n        this._state.pull(this);\n    };\n    /**\n     * Will be called on every record that comes in and transform a raw record\n     * to a Object. If user-provided observer is present, pass transformed record\n     * to it's onNext method, otherwise, push to record que.\n     * @param {Array} rawRecord - An array with the raw record\n     */\n    ResultStreamObserver.prototype.onNext = function (rawRecord) {\n        this._haveRecordStreamed = true;\n        var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n        if (this._observers.some(function (o) { return o.onNext; })) {\n            this._observers.forEach(function (o) {\n                if (o.onNext) {\n                    o.onNext(record);\n                }\n            });\n        }\n        else {\n            this._queuedRecords.push(record);\n            if (this._queuedRecords.length > this._highRecordWatermark) {\n                this._autoPull = false;\n            }\n        }\n    };\n    ResultStreamObserver.prototype.onCompleted = function (meta) {\n        this._state.onSuccess(this, meta);\n    };\n    /**\n     * Will be called on errors.\n     * If user-provided observer is present, pass the error\n     * to it's onError method, otherwise set instance variable _error.\n     * @param {Object} error - An error object\n     */\n    ResultStreamObserver.prototype.onError = function (error) {\n        this._state.onError(this, error);\n    };\n    /**\n     * Cancel pending record stream\n     */\n    ResultStreamObserver.prototype.cancel = function () {\n        this._discard = true;\n    };\n    /**\n     * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n     * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n     *\n     * However, some operations can be represented as a single message which receives full metadata in a single response.\n     * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n     * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n     *\n     * This function prepares the observer to only handle a single response message.\n     */\n    ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._setState(_states.STREAMING);\n    };\n    /**\n     * Mark this observer as if it has completed with no metadata.\n     */\n    ResultStreamObserver.prototype.markCompleted = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._tail = {};\n        this._setState(_states.SUCCEEDED);\n    };\n    /**\n     * Subscribe to events with provided observer.\n     * @param {Object} observer - Observer object\n     * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n     * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n     * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n     * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n     */\n    ResultStreamObserver.prototype.subscribe = function (observer) {\n        if (this._head && observer.onKeys) {\n            observer.onKeys(this._head);\n        }\n        if (this._queuedRecords.length > 0 && observer.onNext) {\n            for (var i = 0; i < this._queuedRecords.length; i++) {\n                observer.onNext(this._queuedRecords[i]);\n                if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n                    this._autoPull = true;\n                    if (this._state === _states.READY) {\n                        this._handleStreaming();\n                    }\n                }\n            }\n        }\n        if (this._tail && observer.onCompleted) {\n            observer.onCompleted(this._tail);\n        }\n        if (this._error) {\n            observer.onError(this._error);\n        }\n        this._observers.push(observer);\n        if (this._state === _states.READY) {\n            this._handleStreaming();\n        }\n    };\n    ResultStreamObserver.prototype._handleHasMore = function (meta) {\n        // We've consumed current batch and server notified us that there're more\n        // records to stream. Let's invoke more or discard function based on whether\n        // the user wants to discard streaming or not\n        this._setState(_states.READY); // we've done streaming\n        this._handleStreaming();\n        delete meta.has_more;\n    };\n    ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n        var _this = this;\n        var completionMetadata = this._enrichMetadata(Object.assign(this._server ? { server: this._server } : {}, this._meta, {\n            stream_summary: {\n                have_records_streamed: this._haveRecordStreamed,\n                pulled: this._pulled,\n                has_keys: this._fieldKeys.length > 0\n            }\n        }, meta));\n        if (![undefined, null, 'r', 'w', 'rw', 's'].includes(completionMetadata.type)) {\n            this.onError((0, neo4j_driver_core_1.newError)(\"Server returned invalid query type. Expected one of [undefined, null, \\\"r\\\", \\\"w\\\", \\\"rw\\\", \\\"s\\\"] but got '\".concat(completionMetadata.type, \"'\"), PROTOCOL_ERROR));\n            return;\n        }\n        this._setState(_states.SUCCEEDED);\n        var beforeHandlerResult = null;\n        if (this._beforeComplete) {\n            beforeHandlerResult = this._beforeComplete(completionMetadata);\n        }\n        var continuation = function () {\n            // End of stream\n            _this._tail = completionMetadata;\n            if (_this._observers.some(function (o) { return o.onCompleted; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onCompleted) {\n                        o.onCompleted(completionMetadata);\n                    }\n                });\n            }\n            if (_this._afterComplete) {\n                _this._afterComplete(completionMetadata);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n        var _this = this;\n        if (this._fieldKeys === null) {\n            // Stream header, build a name->index field lookup table\n            // to be used by records. This is an optimization to make it\n            // faster to look up fields in a record by name, rather than by index.\n            // Since the records we get back via Bolt are just arrays of values.\n            this._fieldKeys = [];\n            this._fieldLookup = {};\n            if (meta.fields && meta.fields.length > 0) {\n                this._fieldKeys = meta.fields;\n                for (var i = 0; i < meta.fields.length; i++) {\n                    this._fieldLookup[meta.fields[i]] = i;\n                }\n            }\n            if (meta.db !== null && this._onDb !== undefined) {\n                this._onDb(meta.db);\n            }\n            if (meta.fields != null) {\n                // remove fields key from metadata object\n                delete meta.fields;\n            }\n            // Extract server generated query id for use in requestMore and discard\n            // functions\n            if (meta.qid !== null && meta.qid !== undefined) {\n                this._queryId = meta.qid;\n                // remove qid from metadata object\n                delete meta.qid;\n            }\n            this._storeMetadataForCompletion(meta);\n            var beforeHandlerResult = null;\n            if (this._beforeKeys) {\n                beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n            }\n            var continuation_1 = function () {\n                _this._head = _this._fieldKeys;\n                if (_this._observers.some(function (o) { return o.onKeys; })) {\n                    _this._observers.forEach(function (o) {\n                        if (o.onKeys) {\n                            o.onKeys(_this._fieldKeys);\n                        }\n                    });\n                }\n                if (_this._afterKeys) {\n                    _this._afterKeys(_this._fieldKeys);\n                }\n                afterSuccess();\n            };\n            if (beforeHandlerResult) {\n                Promise.resolve(beforeHandlerResult).then(function () { return continuation_1(); });\n            }\n            else {\n                continuation_1();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._handleError = function (error) {\n        var _this = this;\n        this._setState(_states.FAILED);\n        this._error = error;\n        var beforeHandlerResult = null;\n        if (this._beforeError) {\n            beforeHandlerResult = this._beforeError(error);\n        }\n        var continuation = function () {\n            if (_this._observers.some(function (o) { return o.onError; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onError) {\n                        o.onError(error);\n                    }\n                });\n            }\n            if (_this._afterError) {\n                _this._afterError(error);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleStreaming = function () {\n        if (this._head && this._observers.some(function (o) { return o.onNext || o.onCompleted; })) {\n            if (!this._paused && (this._discard || this._autoPull)) {\n                this._more();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._more = function () {\n        if (this._discard) {\n            this._discardFunction(this._queryId, this);\n        }\n        else {\n            this._pulled = true;\n            this._moreFunction(this._queryId, this._fetchSize, this);\n        }\n        this._setState(_states.STREAMING);\n    };\n    ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n        var keys = Object.keys(meta);\n        var index = keys.length;\n        var key = '';\n        while (index--) {\n            key = keys[index];\n            this._meta[key] = meta[key];\n        }\n    };\n    ResultStreamObserver.prototype._setState = function (state) {\n        this._state = state;\n    };\n    ResultStreamObserver.prototype._setupAutoPull = function () {\n        this._autoPull = true;\n    };\n    return ResultStreamObserver;\n}(StreamObserver));\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */ (function (_super) {\n    __extends(LoginObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LoginObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LoginObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LoginObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LoginObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LoginObserver;\n}(StreamObserver));\nexports.LoginObserver = LoginObserver;\nvar LogoffObserver = /** @class */ (function (_super) {\n    __extends(LogoffObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LogoffObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LogoffObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when logging off ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LogoffObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LogoffObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LogoffObserver;\n}(StreamObserver));\nexports.LogoffObserver = LogoffObserver;\nvar ResetObserver = /** @class */ (function (_super) {\n    __extends(ResetObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onComplete\n     */\n    function ResetObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onComplete = _b.onComplete;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onComplete = onComplete;\n        return _this;\n    }\n    ResetObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    ResetObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ResetObserver.prototype.onCompleted = function (metadata) {\n        if (this._onComplete) {\n            this._onComplete(metadata);\n        }\n    };\n    return ResetObserver;\n}(StreamObserver));\nexports.ResetObserver = ResetObserver;\nvar TelemetryObserver = /** @class */ (function (_super) {\n    __extends(TelemetryObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function TelemetryObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    TelemetryObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when sending telemetry ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    TelemetryObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    TelemetryObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return TelemetryObserver;\n}(ResultStreamObserver));\nexports.TelemetryObserver = TelemetryObserver;\nvar FailedObserver = /** @class */ (function (_super) {\n    __extends(FailedObserver, _super);\n    function FailedObserver(_a) {\n        var error = _a.error, onError = _a.onError;\n        var _this = _super.call(this, { beforeError: onError }) || this;\n        _this.onError(error);\n        return _this;\n    }\n    return FailedObserver;\n}(ResultStreamObserver));\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */ (function (_super) {\n    __extends(CompletedObserver, _super);\n    function CompletedObserver() {\n        var _this = _super.call(this) || this;\n        _super.prototype.markCompleted.call(_this);\n        return _this;\n    }\n    return CompletedObserver;\n}(ResultStreamObserver));\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */ (function (_super) {\n    __extends(ProcedureRouteObserver, _super);\n    function ProcedureRouteObserver(_a) {\n        var resultObserver = _a.resultObserver, onProtocolError = _a.onProtocolError, onError = _a.onError, onCompleted = _a.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._resultObserver = resultObserver;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        _this._records = [];\n        _this._onProtocolError = onProtocolError;\n        resultObserver.subscribe(_this);\n        return _this;\n    }\n    ProcedureRouteObserver.prototype.onNext = function (record) {\n        this._records.push(record);\n    };\n    ProcedureRouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ProcedureRouteObserver.prototype.onCompleted = function () {\n        if (this._records !== null && this._records.length !== 1) {\n            this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' +\n                this._records.length +\n                ' records but expected only one.\\n' +\n                neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n            return;\n        }\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n        }\n    };\n    return ProcedureRouteObserver;\n}(StreamObserver));\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */ (function (_super) {\n    __extends(RouteObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     */\n    function RouteObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    RouteObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    RouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    RouteObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n        }\n    };\n    return RouteObserver;\n}(StreamObserver));\nexports.RouteObserver = RouteObserver;\nvar _states = {\n    READY_STREAMING: {\n        // async start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () {\n                streamObserver._setState(_states.STREAMING);\n            } // after run succeeded, async directly move to streaming\n            // state\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY_STREAMING';\n        },\n        pull: function () { }\n    },\n    READY: {\n        // reactive start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () { return streamObserver._handleStreaming(); } // after run succeeded received, reactive shall start pulling\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY';\n        },\n        pull: function (streamObserver) { return streamObserver._more(); }\n    },\n    STREAMING: {\n        onSuccess: function (streamObserver, meta) {\n            if (meta.has_more) {\n                streamObserver._handleHasMore(meta);\n            }\n            else {\n                streamObserver._handlePullSuccess(meta);\n            }\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'STREAMING';\n        },\n        pull: function () { }\n    },\n    FAILED: {\n        onError: function (_error) {\n            // more errors are ignored\n        },\n        name: function () {\n            return 'FAILED';\n        },\n        pull: function () { }\n    },\n    SUCCEEDED: {\n        name: function () {\n            return 'SUCCEEDED';\n        },\n        pull: function () { }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}