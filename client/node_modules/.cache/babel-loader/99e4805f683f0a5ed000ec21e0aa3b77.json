{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable @typescript-eslint/promise-function-async */\nvar result_summary_1 = __importDefault(require(\"./result-summary\"));\nvar internal_1 = require(\"./internal\");\nvar error_1 = require(\"./error\");\nvar EMPTY_CONNECTION_HOLDER = internal_1.connectionHolder.EMPTY_CONNECTION_HOLDER;\n/**\n * @private\n * @param {Error} error The error\n * @returns {void}\n */\nvar DEFAULT_ON_ERROR = function (error) {\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands, @typescript-eslint/no-base-to-string\n  console.log('Uncaught error when processing result: ' + error);\n};\n/**\n * @private\n * @param {ResultSummary} summary\n * @returns {void}\n */\nvar DEFAULT_ON_COMPLETED = function (summary) {};\n/**\n * @private\n * @param {string[]} keys List of keys of the record in the result\n * @return {void}\n */\nvar DEFAULT_ON_KEYS = function (keys) {};\n/**\n * A stream of {@link Record} representing the result of a query.\n * Can be consumed eagerly as {@link Promise} resolved with array of records and {@link ResultSummary}\n * summary, or rejected with error that contains {@link string} code and {@link string} message.\n * Alternatively can be consumed lazily using {@link Result#subscribe} function.\n * @access public\n */\nvar Result = /** @class */function () {\n  /**\n   * Inject the observer to be used.\n   * @constructor\n   * @access private\n   * @param {Promise<observer.ResultStreamObserver>} streamObserverPromise\n   * @param {mixed} query - Cypher query to execute\n   * @param {Object} parameters - Map with parameters to use in query\n   * @param {ConnectionHolder} connectionHolder - to be notified when result is either fully consumed or error happened.\n   */\n  function Result(streamObserverPromise, query, parameters, connectionHolder, watermarks) {\n    if (watermarks === void 0) {\n      watermarks = {\n        high: Number.MAX_VALUE,\n        low: Number.MAX_VALUE\n      };\n    }\n    /**\n     * Called when finally the result is done\n     *\n     * *Should not be combined with {@link Result#subscribe} function.*\n     * @param {function()|null} onfinally - function when the promise finished\n     * @return {Promise} promise.\n     */\n    this[_a] = 'Result';\n    this._stack = captureStacktrace();\n    this._streamObserverPromise = streamObserverPromise;\n    this._p = null;\n    this._query = query;\n    this._parameters = parameters !== null && parameters !== void 0 ? parameters : {};\n    this._connectionHolder = connectionHolder !== null && connectionHolder !== void 0 ? connectionHolder : EMPTY_CONNECTION_HOLDER;\n    this._keys = null;\n    this._summary = null;\n    this._error = null;\n    this._watermarks = watermarks;\n  }\n  /**\n   * Returns a promise for the field keys.\n   *\n   * *Should not be combined with {@link Result#subscribe} function.*\n   *\n   * @public\n   * @returns {Promise<string[]>} - Field keys, in the order they will appear in records.\n   }\n   */\n  Result.prototype.keys = function () {\n    var _this = this;\n    if (this._keys !== null) {\n      return Promise.resolve(this._keys);\n    } else if (this._error !== null) {\n      return Promise.reject(this._error);\n    }\n    return new Promise(function (resolve, reject) {\n      _this._streamObserverPromise.then(function (observer) {\n        return observer.subscribe(_this._decorateObserver({\n          onKeys: function (keys) {\n            return resolve(keys);\n          },\n          onError: function (err) {\n            return reject(err);\n          }\n        }));\n      }).catch(reject);\n    });\n  };\n  /**\n   * Returns a promise for the result summary.\n   *\n   * *Should not be combined with {@link Result#subscribe} function.*\n   *\n   * @public\n   * @returns {Promise<ResultSummary<T>>} - Result summary.\n   *\n   */\n  Result.prototype.summary = function () {\n    var _this = this;\n    if (this._summary !== null) {\n      // This type casting is needed since we are defining the number type of\n      // summary in Result template\n      return Promise.resolve(this._summary);\n    } else if (this._error !== null) {\n      return Promise.reject(this._error);\n    }\n    return new Promise(function (resolve, reject) {\n      _this._streamObserverPromise.then(function (o) {\n        o.cancel();\n        o.subscribe(_this._decorateObserver({\n          // This type casting is needed since we are defining the number type of\n          // summary in Result template\n          onCompleted: function (summary) {\n            return resolve(summary);\n          },\n          onError: function (err) {\n            return reject(err);\n          }\n        }));\n      }).catch(reject);\n    });\n  };\n  /**\n   * Create and return new Promise\n   *\n   * @private\n   * @return {Promise} new Promise.\n   */\n  Result.prototype._getOrCreatePromise = function () {\n    var _this = this;\n    if (this._p == null) {\n      this._p = new Promise(function (resolve, reject) {\n        var records = [];\n        var observer = {\n          onNext: function (record) {\n            records.push(record);\n          },\n          onCompleted: function (summary) {\n            resolve({\n              records: records,\n              summary: summary\n            });\n          },\n          onError: function (error) {\n            reject(error);\n          }\n        };\n        _this.subscribe(observer);\n      });\n    }\n    return this._p;\n  };\n  /**\n   * Provides a async iterator over the records in the result.\n   *\n   * *Should not be combined with {@link Result#subscribe} or ${@link Result#then} functions.*\n   *\n   * @public\n   * @returns {PeekableAsyncIterator<Record<R>, ResultSummary>} The async iterator for the Results\n   */\n  Result.prototype[Symbol.asyncIterator] = function () {\n    var _this = this;\n    if (!this.isOpen()) {\n      var error_2 = (0, error_1.newError)('Result is already consumed');\n      return {\n        next: function () {\n          return Promise.reject(error_2);\n        },\n        peek: function () {\n          return Promise.reject(error_2);\n        }\n      };\n    }\n    var state = {\n      paused: true,\n      firstRun: true,\n      finished: false\n    };\n    var controlFlow = function () {\n      var _b, _c;\n      if (state.streaming == null) {\n        return;\n      }\n      var size = (_c = (_b = state.queuedObserver) === null || _b === void 0 ? void 0 : _b.size) !== null && _c !== void 0 ? _c : 0;\n      var queueSizeIsOverHighOrEqualWatermark = size >= _this._watermarks.high;\n      var queueSizeIsBellowOrEqualLowWatermark = size <= _this._watermarks.low;\n      if (queueSizeIsOverHighOrEqualWatermark && !state.paused) {\n        state.paused = true;\n        state.streaming.pause();\n      } else if (queueSizeIsBellowOrEqualLowWatermark && state.paused || state.firstRun && !queueSizeIsOverHighOrEqualWatermark) {\n        state.firstRun = false;\n        state.paused = false;\n        state.streaming.resume();\n      }\n    };\n    var initializeObserver = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!(state.queuedObserver === undefined)) return [3 /*break*/, 2];\n              state.queuedObserver = this._createQueuedResultObserver(controlFlow);\n              _b = state;\n              return [4 /*yield*/, this._subscribe(state.queuedObserver, true).catch(function () {\n                return undefined;\n              })];\n            case 1:\n              _b.streaming = _c.sent();\n              controlFlow();\n              _c.label = 2;\n            case 2:\n              return [2 /*return*/, state.queuedObserver];\n          }\n        });\n      });\n    };\n    var assertSummary = function (summary) {\n      if (summary === undefined) {\n        throw (0, error_1.newError)('InvalidState: Result stream finished without Summary', error_1.PROTOCOL_ERROR);\n      }\n      return true;\n    };\n    return {\n      next: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var queuedObserver, next;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (state.finished) {\n                  if (assertSummary(state.summary)) {\n                    return [2 /*return*/, {\n                      done: true,\n                      value: state.summary\n                    }];\n                  }\n                }\n                return [4 /*yield*/, initializeObserver()];\n              case 1:\n                queuedObserver = _b.sent();\n                return [4 /*yield*/, queuedObserver.dequeue()];\n              case 2:\n                next = _b.sent();\n                if (next.done === true) {\n                  state.finished = next.done;\n                  state.summary = next.value;\n                }\n                return [2 /*return*/, next];\n            }\n          });\n        });\n      },\n      return: function (value) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var queuedObserver, last;\n          var _b;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                if (state.finished) {\n                  if (assertSummary(state.summary)) {\n                    return [2 /*return*/, {\n                      done: true,\n                      value: value !== null && value !== void 0 ? value : state.summary\n                    }];\n                  }\n                }\n                (_b = state.streaming) === null || _b === void 0 ? void 0 : _b.cancel();\n                return [4 /*yield*/, initializeObserver()];\n              case 1:\n                queuedObserver = _c.sent();\n                return [4 /*yield*/, queuedObserver.dequeueUntilDone()];\n              case 2:\n                last = _c.sent();\n                state.finished = true;\n                last.value = value !== null && value !== void 0 ? value : last.value;\n                state.summary = last.value;\n                return [2 /*return*/, last];\n            }\n          });\n        });\n      },\n      peek: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var queuedObserver;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (state.finished) {\n                  if (assertSummary(state.summary)) {\n                    return [2 /*return*/, {\n                      done: true,\n                      value: state.summary\n                    }];\n                  }\n                }\n                return [4 /*yield*/, initializeObserver()];\n              case 1:\n                queuedObserver = _b.sent();\n                return [4 /*yield*/, queuedObserver.head()];\n              case 2:\n                return [2 /*return*/, _b.sent()];\n            }\n          });\n        });\n      }\n    };\n  };\n  /**\n   * Waits for all results and calls the passed in function with the results.\n   *\n   * *Should not be combined with {@link Result#subscribe} function.*\n   *\n   * @param {function(result: {records:Array<Record>, summary: ResultSummary})} onFulfilled - function to be called\n   * when finished.\n   * @param {function(error: {message:string, code:string})} onRejected - function to be called upon errors.\n   * @return {Promise} promise.\n   */\n  Result.prototype.then = function (onFulfilled, onRejected) {\n    return this._getOrCreatePromise().then(onFulfilled, onRejected);\n  };\n  /**\n   * Catch errors when using promises.\n   *\n   * *Should not be combined with {@link Result#subscribe} function.*\n   *\n   * @param {function(error: Neo4jError)} onRejected - Function to be called upon errors.\n   * @return {Promise} promise.\n   */\n  Result.prototype.catch = function (onRejected) {\n    return this._getOrCreatePromise().catch(onRejected);\n  };\n  Result.prototype.finally = function (onfinally) {\n    return this._getOrCreatePromise().finally(onfinally);\n  };\n  /**\n   * Stream records to observer as they come in, this is a more efficient method\n   * of handling the results, and allows you to handle arbitrarily large results.\n   *\n   * @param {Object} observer - Observer object\n   * @param {function(keys: string[])} observer.onKeys - handle stream head, the field keys.\n   * @param {function(record: Record)} observer.onNext - handle records, one by one.\n   * @param {function(summary: ResultSummary)} observer.onCompleted - handle stream tail, the result summary.\n   * @param {function(error: {message:string, code:string})} observer.onError - handle errors.\n   * @return {void}\n   */\n  Result.prototype.subscribe = function (observer) {\n    this._subscribe(observer).catch(function () {});\n  };\n  /**\n   * Check if this result is active, i.e., neither a summary nor an error has been received by the result.\n   * @return {boolean} `true` when neither a summary or nor an error has been received by the result.\n   */\n  Result.prototype.isOpen = function () {\n    return this._summary === null && this._error === null;\n  };\n  /**\n   * Stream records to observer as they come in, this is a more efficient method\n   * of handling the results, and allows you to handle arbitrarily large results.\n   *\n   * @access private\n   * @param {ResultObserver} observer The observer to send records to.\n   * @param {boolean} paused The flag to indicate if the stream should be started paused\n   * @returns {Promise<observer.ResultStreamObserver>} The result stream observer.\n   */\n  Result.prototype._subscribe = function (observer, paused) {\n    if (paused === void 0) {\n      paused = false;\n    }\n    var _observer = this._decorateObserver(observer);\n    return this._streamObserverPromise.then(function (o) {\n      if (paused) {\n        o.pause();\n      }\n      o.subscribe(_observer);\n      return o;\n    }).catch(function (error) {\n      if (_observer.onError != null) {\n        _observer.onError(error);\n      }\n      return Promise.reject(error);\n    });\n  };\n  /**\n   * Decorates the ResultObserver with the necessary methods.\n   *\n   * @access private\n   * @param {ResultObserver} observer The ResultObserver to decorate.\n   * @returns The decorated result observer\n   */\n  Result.prototype._decorateObserver = function (observer) {\n    var _this = this;\n    var _b, _c, _d;\n    var onCompletedOriginal = (_b = observer.onCompleted) !== null && _b !== void 0 ? _b : DEFAULT_ON_COMPLETED;\n    var onErrorOriginal = (_c = observer.onError) !== null && _c !== void 0 ? _c : DEFAULT_ON_ERROR;\n    var onKeysOriginal = (_d = observer.onKeys) !== null && _d !== void 0 ? _d : DEFAULT_ON_KEYS;\n    var onCompletedWrapper = function (metadata) {\n      _this._releaseConnectionAndGetSummary(metadata).then(function (summary) {\n        if (_this._summary !== null) {\n          return onCompletedOriginal.call(observer, _this._summary);\n        }\n        _this._summary = summary;\n        return onCompletedOriginal.call(observer, summary);\n      }).catch(onErrorOriginal);\n    };\n    var onErrorWrapper = function (error) {\n      // notify connection holder that the used connection is not needed any more because error happened\n      // and result can't bee consumed any further; call the original onError callback after that\n      _this._connectionHolder.releaseConnection().then(function () {\n        replaceStacktrace(error, _this._stack);\n        _this._error = error;\n        onErrorOriginal.call(observer, error);\n      }).catch(onErrorOriginal);\n    };\n    var onKeysWrapper = function (keys) {\n      _this._keys = keys;\n      return onKeysOriginal.call(observer, keys);\n    };\n    return {\n      onNext: observer.onNext != null ? observer.onNext.bind(observer) : undefined,\n      onKeys: onKeysWrapper,\n      onCompleted: onCompletedWrapper,\n      onError: onErrorWrapper\n    };\n  };\n  /**\n   * Signals the stream observer that the future records should be discarded on the server.\n   *\n   * @protected\n   * @since 4.0.0\n   * @returns {void}\n   */\n  Result.prototype._cancel = function () {\n    if (this._summary === null && this._error === null) {\n      this._streamObserverPromise.then(function (o) {\n        return o.cancel();\n      }).catch(function () {});\n    }\n  };\n  /**\n   * @access private\n   * @param metadata\n   * @returns\n   */\n  Result.prototype._releaseConnectionAndGetSummary = function (metadata) {\n    var _b = internal_1.util.validateQueryAndParameters(this._query, this._parameters, {\n        skipAsserts: true\n      }),\n      query = _b.validatedQuery,\n      parameters = _b.params;\n    var connectionHolder = this._connectionHolder;\n    return connectionHolder.getConnection().then(\n    // onFulfilled:\n    function (connection) {\n      return connectionHolder.releaseConnection().then(function () {\n        return connection === null || connection === void 0 ? void 0 : connection.getProtocolVersion();\n      });\n    },\n    // onRejected:\n    function (_) {\n      return undefined;\n    }).then(function (protocolVersion) {\n      return new result_summary_1.default(query, parameters, metadata, protocolVersion);\n    });\n  };\n  /**\n   * @access private\n   */\n  Result.prototype._createQueuedResultObserver = function (onQueueSizeChanged) {\n    var _this = this;\n    function createResolvablePromise() {\n      var resolvablePromise = {};\n      resolvablePromise.promise = new Promise(function (resolve, reject) {\n        resolvablePromise.resolve = resolve;\n        resolvablePromise.reject = reject;\n      });\n      return resolvablePromise;\n    }\n    function isError(elementOrError) {\n      return elementOrError instanceof Error;\n    }\n    function dequeue() {\n      var _b;\n      return __awaiter(this, void 0, void 0, function () {\n        var element;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (buffer.length > 0) {\n                element = (_b = buffer.shift()) !== null && _b !== void 0 ? _b : (0, error_1.newError)('Unexpected empty buffer', error_1.PROTOCOL_ERROR);\n                onQueueSizeChanged();\n                if (isError(element)) {\n                  throw element;\n                }\n                return [2 /*return*/, element];\n              }\n              promiseHolder.resolvable = createResolvablePromise();\n              return [4 /*yield*/, promiseHolder.resolvable.promise];\n            case 1:\n              return [2 /*return*/, _c.sent()];\n          }\n        });\n      });\n    }\n    var buffer = [];\n    var promiseHolder = {\n      resolvable: null\n    };\n    var observer = {\n      onNext: function (record) {\n        observer._push({\n          done: false,\n          value: record\n        });\n      },\n      onCompleted: function (summary) {\n        observer._push({\n          done: true,\n          value: summary\n        });\n      },\n      onError: function (error) {\n        observer._push(error);\n      },\n      _push: function (element) {\n        if (promiseHolder.resolvable !== null) {\n          var resolvable = promiseHolder.resolvable;\n          promiseHolder.resolvable = null;\n          if (isError(element)) {\n            resolvable.reject(element);\n          } else {\n            resolvable.resolve(element);\n          }\n        } else {\n          buffer.push(element);\n          onQueueSizeChanged();\n        }\n      },\n      dequeue: dequeue,\n      dequeueUntilDone: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var element;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!true) return [3 /*break*/, 2];\n                return [4 /*yield*/, dequeue()];\n              case 1:\n                element = _b.sent();\n                if (element.done === true) {\n                  return [2 /*return*/, element];\n                }\n                return [3 /*break*/, 0];\n              case 2:\n                return [2 /*return*/];\n            }\n          });\n        });\n      },\n      head: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var element, element, error_3;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (buffer.length > 0) {\n                  element = buffer[0];\n                  if (isError(element)) {\n                    throw element;\n                  }\n                  return [2 /*return*/, element];\n                }\n                promiseHolder.resolvable = createResolvablePromise();\n                _b.label = 1;\n              case 1:\n                _b.trys.push([1, 3, 4, 5]);\n                return [4 /*yield*/, promiseHolder.resolvable.promise];\n              case 2:\n                element = _b.sent();\n                buffer.unshift(element);\n                return [2 /*return*/, element];\n              case 3:\n                error_3 = _b.sent();\n                buffer.unshift(error_3);\n                throw error_3;\n              case 4:\n                onQueueSizeChanged();\n                return [7 /*endfinally*/];\n              case 5:\n                return [2 /*return*/];\n            }\n          });\n        });\n      },\n      get size() {\n        return buffer.length;\n      }\n    };\n    return observer;\n  };\n  return Result;\n}();\n_a = Symbol.toStringTag;\nfunction captureStacktrace() {\n  var error = new Error('');\n  if (error.stack != null) {\n    return error.stack.replace(/^Error(\\n\\r)*/, ''); // we don't need the 'Error\\n' part, if only it exists\n  }\n  return null;\n}\n/**\n * @private\n * @param {Error} error The error\n * @param {string| null} newStack The newStack\n * @returns {void}\n */\nfunction replaceStacktrace(error, newStack) {\n  if (newStack != null) {\n    // Error.prototype.toString() concatenates error.name and error.message nicely\n    // then we add the rest of the stack trace\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    error.stack = error.toString() + '\\n' + newStack;\n  }\n}\nexports.default = Result;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","_a","Object","defineProperty","exports","result_summary_1","require","internal_1","error_1","EMPTY_CONNECTION_HOLDER","connectionHolder","DEFAULT_ON_ERROR","error","console","log","DEFAULT_ON_COMPLETED","summary","DEFAULT_ON_KEYS","keys","Result","streamObserverPromise","query","parameters","watermarks","high","Number","MAX_VALUE","low","_stack","captureStacktrace","_streamObserverPromise","_p","_query","_parameters","_connectionHolder","_keys","_summary","_error","_watermarks","prototype","_this","observer","subscribe","_decorateObserver","onKeys","onError","err","catch","o","cancel","onCompleted","_getOrCreatePromise","records","onNext","record","asyncIterator","isOpen","error_2","newError","peek","state","paused","firstRun","finished","controlFlow","_b","_c","streaming","size","queuedObserver","queueSizeIsOverHighOrEqualWatermark","queueSizeIsBellowOrEqualLowWatermark","pause","resume","initializeObserver","undefined","_createQueuedResultObserver","_subscribe","assertSummary","PROTOCOL_ERROR","dequeue","return","last","dequeueUntilDone","head","onFulfilled","onRejected","finally","onfinally","_observer","_d","onCompletedOriginal","onErrorOriginal","onKeysOriginal","onCompletedWrapper","metadata","_releaseConnectionAndGetSummary","onErrorWrapper","releaseConnection","replaceStacktrace","onKeysWrapper","bind","_cancel","util","validateQueryAndParameters","skipAsserts","validatedQuery","params","getConnection","connection","getProtocolVersion","protocolVersion","default","onQueueSizeChanged","createResolvablePromise","resolvablePromise","promise","isError","elementOrError","Error","element","buffer","shift","promiseHolder","resolvable","_push","error_3","unshift","toStringTag","stack","replace","newStack","toString"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver-core/lib/result.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable @typescript-eslint/promise-function-async */\nvar result_summary_1 = __importDefault(require(\"./result-summary\"));\nvar internal_1 = require(\"./internal\");\nvar error_1 = require(\"./error\");\nvar EMPTY_CONNECTION_HOLDER = internal_1.connectionHolder.EMPTY_CONNECTION_HOLDER;\n/**\n * @private\n * @param {Error} error The error\n * @returns {void}\n */\nvar DEFAULT_ON_ERROR = function (error) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands, @typescript-eslint/no-base-to-string\n    console.log('Uncaught error when processing result: ' + error);\n};\n/**\n * @private\n * @param {ResultSummary} summary\n * @returns {void}\n */\nvar DEFAULT_ON_COMPLETED = function (summary) { };\n/**\n * @private\n * @param {string[]} keys List of keys of the record in the result\n * @return {void}\n */\nvar DEFAULT_ON_KEYS = function (keys) { };\n/**\n * A stream of {@link Record} representing the result of a query.\n * Can be consumed eagerly as {@link Promise} resolved with array of records and {@link ResultSummary}\n * summary, or rejected with error that contains {@link string} code and {@link string} message.\n * Alternatively can be consumed lazily using {@link Result#subscribe} function.\n * @access public\n */\nvar Result = /** @class */ (function () {\n    /**\n     * Inject the observer to be used.\n     * @constructor\n     * @access private\n     * @param {Promise<observer.ResultStreamObserver>} streamObserverPromise\n     * @param {mixed} query - Cypher query to execute\n     * @param {Object} parameters - Map with parameters to use in query\n     * @param {ConnectionHolder} connectionHolder - to be notified when result is either fully consumed or error happened.\n     */\n    function Result(streamObserverPromise, query, parameters, connectionHolder, watermarks) {\n        if (watermarks === void 0) { watermarks = { high: Number.MAX_VALUE, low: Number.MAX_VALUE }; }\n        /**\n         * Called when finally the result is done\n         *\n         * *Should not be combined with {@link Result#subscribe} function.*\n         * @param {function()|null} onfinally - function when the promise finished\n         * @return {Promise} promise.\n         */\n        this[_a] = 'Result';\n        this._stack = captureStacktrace();\n        this._streamObserverPromise = streamObserverPromise;\n        this._p = null;\n        this._query = query;\n        this._parameters = parameters !== null && parameters !== void 0 ? parameters : {};\n        this._connectionHolder = connectionHolder !== null && connectionHolder !== void 0 ? connectionHolder : EMPTY_CONNECTION_HOLDER;\n        this._keys = null;\n        this._summary = null;\n        this._error = null;\n        this._watermarks = watermarks;\n    }\n    /**\n     * Returns a promise for the field keys.\n     *\n     * *Should not be combined with {@link Result#subscribe} function.*\n     *\n     * @public\n     * @returns {Promise<string[]>} - Field keys, in the order they will appear in records.\n     }\n     */\n    Result.prototype.keys = function () {\n        var _this = this;\n        if (this._keys !== null) {\n            return Promise.resolve(this._keys);\n        }\n        else if (this._error !== null) {\n            return Promise.reject(this._error);\n        }\n        return new Promise(function (resolve, reject) {\n            _this._streamObserverPromise\n                .then(function (observer) {\n                return observer.subscribe(_this._decorateObserver({\n                    onKeys: function (keys) { return resolve(keys); },\n                    onError: function (err) { return reject(err); }\n                }));\n            })\n                .catch(reject);\n        });\n    };\n    /**\n     * Returns a promise for the result summary.\n     *\n     * *Should not be combined with {@link Result#subscribe} function.*\n     *\n     * @public\n     * @returns {Promise<ResultSummary<T>>} - Result summary.\n     *\n     */\n    Result.prototype.summary = function () {\n        var _this = this;\n        if (this._summary !== null) {\n            // This type casting is needed since we are defining the number type of\n            // summary in Result template\n            return Promise.resolve(this._summary);\n        }\n        else if (this._error !== null) {\n            return Promise.reject(this._error);\n        }\n        return new Promise(function (resolve, reject) {\n            _this._streamObserverPromise\n                .then(function (o) {\n                o.cancel();\n                o.subscribe(_this._decorateObserver({\n                    // This type casting is needed since we are defining the number type of\n                    // summary in Result template\n                    onCompleted: function (summary) { return resolve(summary); },\n                    onError: function (err) { return reject(err); }\n                }));\n            })\n                .catch(reject);\n        });\n    };\n    /**\n     * Create and return new Promise\n     *\n     * @private\n     * @return {Promise} new Promise.\n     */\n    Result.prototype._getOrCreatePromise = function () {\n        var _this = this;\n        if (this._p == null) {\n            this._p = new Promise(function (resolve, reject) {\n                var records = [];\n                var observer = {\n                    onNext: function (record) {\n                        records.push(record);\n                    },\n                    onCompleted: function (summary) {\n                        resolve({ records: records, summary: summary });\n                    },\n                    onError: function (error) {\n                        reject(error);\n                    }\n                };\n                _this.subscribe(observer);\n            });\n        }\n        return this._p;\n    };\n    /**\n     * Provides a async iterator over the records in the result.\n     *\n     * *Should not be combined with {@link Result#subscribe} or ${@link Result#then} functions.*\n     *\n     * @public\n     * @returns {PeekableAsyncIterator<Record<R>, ResultSummary>} The async iterator for the Results\n     */\n    Result.prototype[Symbol.asyncIterator] = function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            var error_2 = (0, error_1.newError)('Result is already consumed');\n            return {\n                next: function () { return Promise.reject(error_2); },\n                peek: function () { return Promise.reject(error_2); }\n            };\n        }\n        var state = { paused: true, firstRun: true, finished: false };\n        var controlFlow = function () {\n            var _b, _c;\n            if (state.streaming == null) {\n                return;\n            }\n            var size = (_c = (_b = state.queuedObserver) === null || _b === void 0 ? void 0 : _b.size) !== null && _c !== void 0 ? _c : 0;\n            var queueSizeIsOverHighOrEqualWatermark = size >= _this._watermarks.high;\n            var queueSizeIsBellowOrEqualLowWatermark = size <= _this._watermarks.low;\n            if (queueSizeIsOverHighOrEqualWatermark && !state.paused) {\n                state.paused = true;\n                state.streaming.pause();\n            }\n            else if ((queueSizeIsBellowOrEqualLowWatermark && state.paused) || (state.firstRun && !queueSizeIsOverHighOrEqualWatermark)) {\n                state.firstRun = false;\n                state.paused = false;\n                state.streaming.resume();\n            }\n        };\n        var initializeObserver = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!(state.queuedObserver === undefined)) return [3 /*break*/, 2];\n                        state.queuedObserver = this._createQueuedResultObserver(controlFlow);\n                        _b = state;\n                        return [4 /*yield*/, this._subscribe(state.queuedObserver, true).catch(function () { return undefined; })];\n                    case 1:\n                        _b.streaming = _c.sent();\n                        controlFlow();\n                        _c.label = 2;\n                    case 2: return [2 /*return*/, state.queuedObserver];\n                }\n            });\n        }); };\n        var assertSummary = function (summary) {\n            if (summary === undefined) {\n                throw (0, error_1.newError)('InvalidState: Result stream finished without Summary', error_1.PROTOCOL_ERROR);\n            }\n            return true;\n        };\n        return {\n            next: function () { return __awaiter(_this, void 0, void 0, function () {\n                var queuedObserver, next;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (state.finished) {\n                                if (assertSummary(state.summary)) {\n                                    return [2 /*return*/, { done: true, value: state.summary }];\n                                }\n                            }\n                            return [4 /*yield*/, initializeObserver()];\n                        case 1:\n                            queuedObserver = _b.sent();\n                            return [4 /*yield*/, queuedObserver.dequeue()];\n                        case 2:\n                            next = _b.sent();\n                            if (next.done === true) {\n                                state.finished = next.done;\n                                state.summary = next.value;\n                            }\n                            return [2 /*return*/, next];\n                    }\n                });\n            }); },\n            return: function (value) { return __awaiter(_this, void 0, void 0, function () {\n                var queuedObserver, last;\n                var _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (state.finished) {\n                                if (assertSummary(state.summary)) {\n                                    return [2 /*return*/, { done: true, value: value !== null && value !== void 0 ? value : state.summary }];\n                                }\n                            }\n                            (_b = state.streaming) === null || _b === void 0 ? void 0 : _b.cancel();\n                            return [4 /*yield*/, initializeObserver()];\n                        case 1:\n                            queuedObserver = _c.sent();\n                            return [4 /*yield*/, queuedObserver.dequeueUntilDone()];\n                        case 2:\n                            last = _c.sent();\n                            state.finished = true;\n                            last.value = value !== null && value !== void 0 ? value : last.value;\n                            state.summary = last.value;\n                            return [2 /*return*/, last];\n                    }\n                });\n            }); },\n            peek: function () { return __awaiter(_this, void 0, void 0, function () {\n                var queuedObserver;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (state.finished) {\n                                if (assertSummary(state.summary)) {\n                                    return [2 /*return*/, { done: true, value: state.summary }];\n                                }\n                            }\n                            return [4 /*yield*/, initializeObserver()];\n                        case 1:\n                            queuedObserver = _b.sent();\n                            return [4 /*yield*/, queuedObserver.head()];\n                        case 2: return [2 /*return*/, _b.sent()];\n                    }\n                });\n            }); }\n        };\n    };\n    /**\n     * Waits for all results and calls the passed in function with the results.\n     *\n     * *Should not be combined with {@link Result#subscribe} function.*\n     *\n     * @param {function(result: {records:Array<Record>, summary: ResultSummary})} onFulfilled - function to be called\n     * when finished.\n     * @param {function(error: {message:string, code:string})} onRejected - function to be called upon errors.\n     * @return {Promise} promise.\n     */\n    Result.prototype.then = function (onFulfilled, onRejected) {\n        return this._getOrCreatePromise().then(onFulfilled, onRejected);\n    };\n    /**\n     * Catch errors when using promises.\n     *\n     * *Should not be combined with {@link Result#subscribe} function.*\n     *\n     * @param {function(error: Neo4jError)} onRejected - Function to be called upon errors.\n     * @return {Promise} promise.\n     */\n    Result.prototype.catch = function (onRejected) {\n        return this._getOrCreatePromise().catch(onRejected);\n    };\n    Result.prototype.finally = function (onfinally) {\n        return this._getOrCreatePromise().finally(onfinally);\n    };\n    /**\n     * Stream records to observer as they come in, this is a more efficient method\n     * of handling the results, and allows you to handle arbitrarily large results.\n     *\n     * @param {Object} observer - Observer object\n     * @param {function(keys: string[])} observer.onKeys - handle stream head, the field keys.\n     * @param {function(record: Record)} observer.onNext - handle records, one by one.\n     * @param {function(summary: ResultSummary)} observer.onCompleted - handle stream tail, the result summary.\n     * @param {function(error: {message:string, code:string})} observer.onError - handle errors.\n     * @return {void}\n     */\n    Result.prototype.subscribe = function (observer) {\n        this._subscribe(observer)\n            .catch(function () { });\n    };\n    /**\n     * Check if this result is active, i.e., neither a summary nor an error has been received by the result.\n     * @return {boolean} `true` when neither a summary or nor an error has been received by the result.\n     */\n    Result.prototype.isOpen = function () {\n        return this._summary === null && this._error === null;\n    };\n    /**\n     * Stream records to observer as they come in, this is a more efficient method\n     * of handling the results, and allows you to handle arbitrarily large results.\n     *\n     * @access private\n     * @param {ResultObserver} observer The observer to send records to.\n     * @param {boolean} paused The flag to indicate if the stream should be started paused\n     * @returns {Promise<observer.ResultStreamObserver>} The result stream observer.\n     */\n    Result.prototype._subscribe = function (observer, paused) {\n        if (paused === void 0) { paused = false; }\n        var _observer = this._decorateObserver(observer);\n        return this._streamObserverPromise\n            .then(function (o) {\n            if (paused) {\n                o.pause();\n            }\n            o.subscribe(_observer);\n            return o;\n        })\n            .catch(function (error) {\n            if (_observer.onError != null) {\n                _observer.onError(error);\n            }\n            return Promise.reject(error);\n        });\n    };\n    /**\n     * Decorates the ResultObserver with the necessary methods.\n     *\n     * @access private\n     * @param {ResultObserver} observer The ResultObserver to decorate.\n     * @returns The decorated result observer\n     */\n    Result.prototype._decorateObserver = function (observer) {\n        var _this = this;\n        var _b, _c, _d;\n        var onCompletedOriginal = (_b = observer.onCompleted) !== null && _b !== void 0 ? _b : DEFAULT_ON_COMPLETED;\n        var onErrorOriginal = (_c = observer.onError) !== null && _c !== void 0 ? _c : DEFAULT_ON_ERROR;\n        var onKeysOriginal = (_d = observer.onKeys) !== null && _d !== void 0 ? _d : DEFAULT_ON_KEYS;\n        var onCompletedWrapper = function (metadata) {\n            _this._releaseConnectionAndGetSummary(metadata).then(function (summary) {\n                if (_this._summary !== null) {\n                    return onCompletedOriginal.call(observer, _this._summary);\n                }\n                _this._summary = summary;\n                return onCompletedOriginal.call(observer, summary);\n            }).catch(onErrorOriginal);\n        };\n        var onErrorWrapper = function (error) {\n            // notify connection holder that the used connection is not needed any more because error happened\n            // and result can't bee consumed any further; call the original onError callback after that\n            _this._connectionHolder.releaseConnection().then(function () {\n                replaceStacktrace(error, _this._stack);\n                _this._error = error;\n                onErrorOriginal.call(observer, error);\n            }).catch(onErrorOriginal);\n        };\n        var onKeysWrapper = function (keys) {\n            _this._keys = keys;\n            return onKeysOriginal.call(observer, keys);\n        };\n        return {\n            onNext: (observer.onNext != null) ? observer.onNext.bind(observer) : undefined,\n            onKeys: onKeysWrapper,\n            onCompleted: onCompletedWrapper,\n            onError: onErrorWrapper\n        };\n    };\n    /**\n     * Signals the stream observer that the future records should be discarded on the server.\n     *\n     * @protected\n     * @since 4.0.0\n     * @returns {void}\n     */\n    Result.prototype._cancel = function () {\n        if (this._summary === null && this._error === null) {\n            this._streamObserverPromise.then(function (o) { return o.cancel(); })\n                .catch(function () { });\n        }\n    };\n    /**\n     * @access private\n     * @param metadata\n     * @returns\n     */\n    Result.prototype._releaseConnectionAndGetSummary = function (metadata) {\n        var _b = internal_1.util.validateQueryAndParameters(this._query, this._parameters, {\n            skipAsserts: true\n        }), query = _b.validatedQuery, parameters = _b.params;\n        var connectionHolder = this._connectionHolder;\n        return connectionHolder\n            .getConnection()\n            .then(\n        // onFulfilled:\n        function (connection) {\n            return connectionHolder\n                .releaseConnection()\n                .then(function () {\n                return connection === null || connection === void 0 ? void 0 : connection.getProtocolVersion();\n            });\n        }, \n        // onRejected:\n        function (_) { return undefined; })\n            .then(function (protocolVersion) {\n            return new result_summary_1.default(query, parameters, metadata, protocolVersion);\n        });\n    };\n    /**\n     * @access private\n     */\n    Result.prototype._createQueuedResultObserver = function (onQueueSizeChanged) {\n        var _this = this;\n        function createResolvablePromise() {\n            var resolvablePromise = {};\n            resolvablePromise.promise = new Promise(function (resolve, reject) {\n                resolvablePromise.resolve = resolve;\n                resolvablePromise.reject = reject;\n            });\n            return resolvablePromise;\n        }\n        function isError(elementOrError) {\n            return elementOrError instanceof Error;\n        }\n        function dequeue() {\n            var _b;\n            return __awaiter(this, void 0, void 0, function () {\n                var element;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (buffer.length > 0) {\n                                element = (_b = buffer.shift()) !== null && _b !== void 0 ? _b : (0, error_1.newError)('Unexpected empty buffer', error_1.PROTOCOL_ERROR);\n                                onQueueSizeChanged();\n                                if (isError(element)) {\n                                    throw element;\n                                }\n                                return [2 /*return*/, element];\n                            }\n                            promiseHolder.resolvable = createResolvablePromise();\n                            return [4 /*yield*/, promiseHolder.resolvable.promise];\n                        case 1: return [2 /*return*/, _c.sent()];\n                    }\n                });\n            });\n        }\n        var buffer = [];\n        var promiseHolder = { resolvable: null };\n        var observer = {\n            onNext: function (record) {\n                observer._push({ done: false, value: record });\n            },\n            onCompleted: function (summary) {\n                observer._push({ done: true, value: summary });\n            },\n            onError: function (error) {\n                observer._push(error);\n            },\n            _push: function (element) {\n                if (promiseHolder.resolvable !== null) {\n                    var resolvable = promiseHolder.resolvable;\n                    promiseHolder.resolvable = null;\n                    if (isError(element)) {\n                        resolvable.reject(element);\n                    }\n                    else {\n                        resolvable.resolve(element);\n                    }\n                }\n                else {\n                    buffer.push(element);\n                    onQueueSizeChanged();\n                }\n            },\n            dequeue: dequeue,\n            dequeueUntilDone: function () { return __awaiter(_this, void 0, void 0, function () {\n                var element;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (!true) return [3 /*break*/, 2];\n                            return [4 /*yield*/, dequeue()];\n                        case 1:\n                            element = _b.sent();\n                            if (element.done === true) {\n                                return [2 /*return*/, element];\n                            }\n                            return [3 /*break*/, 0];\n                        case 2: return [2 /*return*/];\n                    }\n                });\n            }); },\n            head: function () { return __awaiter(_this, void 0, void 0, function () {\n                var element, element, error_3;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (buffer.length > 0) {\n                                element = buffer[0];\n                                if (isError(element)) {\n                                    throw element;\n                                }\n                                return [2 /*return*/, element];\n                            }\n                            promiseHolder.resolvable = createResolvablePromise();\n                            _b.label = 1;\n                        case 1:\n                            _b.trys.push([1, 3, 4, 5]);\n                            return [4 /*yield*/, promiseHolder.resolvable.promise];\n                        case 2:\n                            element = _b.sent();\n                            buffer.unshift(element);\n                            return [2 /*return*/, element];\n                        case 3:\n                            error_3 = _b.sent();\n                            buffer.unshift(error_3);\n                            throw error_3;\n                        case 4:\n                            onQueueSizeChanged();\n                            return [7 /*endfinally*/];\n                        case 5: return [2 /*return*/];\n                    }\n                });\n            }); },\n            get size() {\n                return buffer.length;\n            }\n        };\n        return observer;\n    };\n    return Result;\n}());\n_a = Symbol.toStringTag;\nfunction captureStacktrace() {\n    var error = new Error('');\n    if (error.stack != null) {\n        return error.stack.replace(/^Error(\\n\\r)*/, ''); // we don't need the 'Error\\n' part, if only it exists\n    }\n    return null;\n}\n/**\n * @private\n * @param {Error} error The error\n * @param {string| null} newStack The newStack\n * @returns {void}\n */\nfunction replaceStacktrace(error, newStack) {\n    if (newStack != null) {\n        // Error.prototype.toString() concatenates error.name and error.message nicely\n        // then we add the rest of the stack trace\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        error.stack = error.toString() + '\\n' + newStack;\n    }\n}\nexports.default = Result;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACR,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACT,KAAK,CAAC,GAAGD,KAAK,CAACU,MAAM,CAACT,KAAK,CAAC,CAACW,IAAI,CAACP,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAK,CAACjB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,IAAIO,WAAW,GAAI,IAAI,IAAI,IAAI,CAACA,WAAW,IAAK,UAAUlB,OAAO,EAAEmB,IAAI,EAAE;EACrE,IAAIC,CAAC,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAAA,CAAA,EAAW;QAAE,IAAIC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,CAAC,CAAC,CAAC,CAAC;QAAE,OAAOA,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC;IAAEC,CAAC;IAAEC,CAAC;IAAEJ,CAAC;IAAEK,CAAC;EAChH,OAAOA,CAAC,GAAG;IAAEjB,IAAI,EAAEkB,IAAI,CAAC,CAAC,CAAC;IAAE,OAAO,EAAEA,IAAI,CAAC,CAAC,CAAC;IAAE,QAAQ,EAAEA,IAAI,CAAC,CAAC;EAAE,CAAC,EAAE,OAAOC,MAAM,KAAK,UAAU,KAAKF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,GAAG,YAAW;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,EAAEH,CAAC;EACxJ,SAASC,IAAIA,CAACG,CAAC,EAAE;IAAE,OAAO,UAAUC,CAAC,EAAE;MAAE,OAAOvB,IAAI,CAAC,CAACsB,CAAC,EAAEC,CAAC,CAAC,CAAC;IAAE,CAAC;EAAE;EACjE,SAASvB,IAAIA,CAACwB,EAAE,EAAE;IACd,IAAIR,CAAC,EAAE,MAAM,IAAIS,SAAS,CAAC,iCAAiC,CAAC;IAC7D,OAAOP,CAAC,KAAKA,CAAC,GAAG,CAAC,EAAEM,EAAE,CAAC,CAAC,CAAC,KAAKd,CAAC,GAAG,CAAC,CAAC,CAAC,EAAEA,CAAC,EAAE,IAAI;MAC1C,IAAIM,CAAC,GAAG,CAAC,EAAEC,CAAC,KAAKJ,CAAC,GAAGW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGP,CAAC,CAAC,QAAQ,CAAC,GAAGO,EAAE,CAAC,CAAC,CAAC,GAAGP,CAAC,CAAC,OAAO,CAAC,KAAK,CAACJ,CAAC,GAAGI,CAAC,CAAC,QAAQ,CAAC,KAAKJ,CAAC,CAACa,IAAI,CAACT,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGA,CAAC,CAAChB,IAAI,CAAC,IAAI,CAAC,CAACY,CAAC,GAAGA,CAAC,CAACa,IAAI,CAACT,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEnB,IAAI,EAAE,OAAOQ,CAAC;MAC5J,IAAII,CAAC,GAAG,CAAC,EAAEJ,CAAC,EAAEW,EAAE,GAAG,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEX,CAAC,CAAClB,KAAK,CAAC;MACvC,QAAQ6B,EAAE,CAAC,CAAC,CAAC;QACT,KAAK,CAAC;QAAE,KAAK,CAAC;UAAEX,CAAC,GAAGW,EAAE;UAAE;QACxB,KAAK,CAAC;UAAEd,CAAC,CAACC,KAAK,EAAE;UAAE,OAAO;YAAEhB,KAAK,EAAE6B,EAAE,CAAC,CAAC,CAAC;YAAEnB,IAAI,EAAE;UAAM,CAAC;QACvD,KAAK,CAAC;UAAEK,CAAC,CAACC,KAAK,EAAE;UAAEM,CAAC,GAAGO,EAAE,CAAC,CAAC,CAAC;UAAEA,EAAE,GAAG,CAAC,CAAC,CAAC;UAAE;QACxC,KAAK,CAAC;UAAEA,EAAE,GAAGd,CAAC,CAACK,GAAG,CAACY,GAAG,CAAC,CAAC;UAAEjB,CAAC,CAACI,IAAI,CAACa,GAAG,CAAC,CAAC;UAAE;QACxC;UACI,IAAI,EAAEd,CAAC,GAAGH,CAAC,CAACI,IAAI,EAAED,CAAC,GAAGA,CAAC,CAACe,MAAM,GAAG,CAAC,IAAIf,CAAC,CAACA,CAAC,CAACe,MAAM,GAAG,CAAC,CAAC,CAAC,KAAKJ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;YAAEd,CAAC,GAAG,CAAC;YAAE;UAAU;UAC3G,IAAIc,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAACX,CAAC,IAAKW,EAAE,CAAC,CAAC,CAAC,GAAGX,CAAC,CAAC,CAAC,CAAC,IAAIW,EAAE,CAAC,CAAC,CAAC,GAAGX,CAAC,CAAC,CAAC,CAAE,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGa,EAAE,CAAC,CAAC,CAAC;YAAE;UAAO;UACrF,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAId,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC;YAAEA,CAAC,GAAGW,EAAE;YAAE;UAAO;UACpE,IAAIX,CAAC,IAAIH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC;YAAEH,CAAC,CAACK,GAAG,CAACc,IAAI,CAACL,EAAE,CAAC;YAAE;UAAO;UAClE,IAAIX,CAAC,CAAC,CAAC,CAAC,EAAEH,CAAC,CAACK,GAAG,CAACY,GAAG,CAAC,CAAC;UACrBjB,CAAC,CAACI,IAAI,CAACa,GAAG,CAAC,CAAC;UAAE;MACtB;MACAH,EAAE,GAAGf,IAAI,CAACiB,IAAI,CAACpC,OAAO,EAAEoB,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOR,CAAC,EAAE;MAAEsB,EAAE,GAAG,CAAC,CAAC,EAAEtB,CAAC,CAAC;MAAEe,CAAC,GAAG,CAAC;IAAE,CAAC,SAAS;MAAED,CAAC,GAAGH,CAAC,GAAG,CAAC;IAAE;IACzD,IAAIW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,EAAE,CAAC,CAAC,CAAC;IAAE,OAAO;MAAE7B,KAAK,EAAE6B,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MAAEnB,IAAI,EAAE;IAAK,CAAC;EACpF;AACJ,CAAC;AACD,IAAIyB,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACD,IAAIE,EAAE;AACNC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEzC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,IAAI0C,gBAAgB,GAAGP,eAAe,CAACQ,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACnE,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIG,uBAAuB,GAAGF,UAAU,CAACG,gBAAgB,CAACD,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA,IAAIE,gBAAgB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACpC;EACAC,OAAO,CAACC,GAAG,CAAC,yCAAyC,GAAGF,KAAK,CAAC;AAClE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAIG,oBAAoB,GAAG,SAAAA,CAAUC,OAAO,EAAE,CAAE,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG,SAAAA,CAAUC,IAAI,EAAE,CAAE,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAG,aAAe,YAAY;EACpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,MAAMA,CAACC,qBAAqB,EAAEC,KAAK,EAAEC,UAAU,EAAEZ,gBAAgB,EAAEa,UAAU,EAAE;IACpF,IAAIA,UAAU,KAAK,KAAK,CAAC,EAAE;MAAEA,UAAU,GAAG;QAAEC,IAAI,EAAEC,MAAM,CAACC,SAAS;QAAEC,GAAG,EAAEF,MAAM,CAACC;MAAU,CAAC;IAAE;IAC7F;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACzB,EAAE,CAAC,GAAG,QAAQ;IACnB,IAAI,CAAC2B,MAAM,GAAGC,iBAAiB,CAAC,CAAC;IACjC,IAAI,CAACC,sBAAsB,GAAGV,qBAAqB;IACnD,IAAI,CAACW,EAAE,GAAG,IAAI;IACd,IAAI,CAACC,MAAM,GAAGX,KAAK;IACnB,IAAI,CAACY,WAAW,GAAGX,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAG,CAAC,CAAC;IACjF,IAAI,CAACY,iBAAiB,GAAGxB,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAGA,gBAAgB,GAAGD,uBAAuB;IAC9H,IAAI,CAAC0B,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,WAAW,GAAGf,UAAU;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIJ,MAAM,CAACoB,SAAS,CAACrB,IAAI,GAAG,YAAY;IAChC,IAAIsB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACL,KAAK,KAAK,IAAI,EAAE;MACrB,OAAOtE,OAAO,CAACD,OAAO,CAAC,IAAI,CAACuE,KAAK,CAAC;IACtC,CAAC,MACI,IAAI,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;MAC3B,OAAOxE,OAAO,CAACC,MAAM,CAAC,IAAI,CAACuE,MAAM,CAAC;IACtC;IACA,OAAO,IAAIxE,OAAO,CAAC,UAAUD,OAAO,EAAEE,MAAM,EAAE;MAC1C0E,KAAK,CAACV,sBAAsB,CACvBxD,IAAI,CAAC,UAAUmE,QAAQ,EAAE;QAC1B,OAAOA,QAAQ,CAACC,SAAS,CAACF,KAAK,CAACG,iBAAiB,CAAC;UAC9CC,MAAM,EAAE,SAAAA,CAAU1B,IAAI,EAAE;YAAE,OAAOtD,OAAO,CAACsD,IAAI,CAAC;UAAE,CAAC;UACjD2B,OAAO,EAAE,SAAAA,CAAUC,GAAG,EAAE;YAAE,OAAOhF,MAAM,CAACgF,GAAG,CAAC;UAAE;QAClD,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CACGC,KAAK,CAACjF,MAAM,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIqD,MAAM,CAACoB,SAAS,CAACvB,OAAO,GAAG,YAAY;IACnC,IAAIwB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACJ,QAAQ,KAAK,IAAI,EAAE;MACxB;MACA;MACA,OAAOvE,OAAO,CAACD,OAAO,CAAC,IAAI,CAACwE,QAAQ,CAAC;IACzC,CAAC,MACI,IAAI,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;MAC3B,OAAOxE,OAAO,CAACC,MAAM,CAAC,IAAI,CAACuE,MAAM,CAAC;IACtC;IACA,OAAO,IAAIxE,OAAO,CAAC,UAAUD,OAAO,EAAEE,MAAM,EAAE;MAC1C0E,KAAK,CAACV,sBAAsB,CACvBxD,IAAI,CAAC,UAAU0E,CAAC,EAAE;QACnBA,CAAC,CAACC,MAAM,CAAC,CAAC;QACVD,CAAC,CAACN,SAAS,CAACF,KAAK,CAACG,iBAAiB,CAAC;UAChC;UACA;UACAO,WAAW,EAAE,SAAAA,CAAUlC,OAAO,EAAE;YAAE,OAAOpD,OAAO,CAACoD,OAAO,CAAC;UAAE,CAAC;UAC5D6B,OAAO,EAAE,SAAAA,CAAUC,GAAG,EAAE;YAAE,OAAOhF,MAAM,CAACgF,GAAG,CAAC;UAAE;QAClD,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CACGC,KAAK,CAACjF,MAAM,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIqD,MAAM,CAACoB,SAAS,CAACY,mBAAmB,GAAG,YAAY;IAC/C,IAAIX,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACT,EAAE,IAAI,IAAI,EAAE;MACjB,IAAI,CAACA,EAAE,GAAG,IAAIlE,OAAO,CAAC,UAAUD,OAAO,EAAEE,MAAM,EAAE;QAC7C,IAAIsF,OAAO,GAAG,EAAE;QAChB,IAAIX,QAAQ,GAAG;UACXY,MAAM,EAAE,SAAAA,CAAUC,MAAM,EAAE;YACtBF,OAAO,CAACvD,IAAI,CAACyD,MAAM,CAAC;UACxB,CAAC;UACDJ,WAAW,EAAE,SAAAA,CAAUlC,OAAO,EAAE;YAC5BpD,OAAO,CAAC;cAAEwF,OAAO,EAAEA,OAAO;cAAEpC,OAAO,EAAEA;YAAQ,CAAC,CAAC;UACnD,CAAC;UACD6B,OAAO,EAAE,SAAAA,CAAUjC,KAAK,EAAE;YACtB9C,MAAM,CAAC8C,KAAK,CAAC;UACjB;QACJ,CAAC;QACD4B,KAAK,CAACE,SAAS,CAACD,QAAQ,CAAC;MAC7B,CAAC,CAAC;IACN;IACA,OAAO,IAAI,CAACV,EAAE;EAClB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIZ,MAAM,CAACoB,SAAS,CAACnD,MAAM,CAACmE,aAAa,CAAC,GAAG,YAAY;IACjD,IAAIf,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACgB,MAAM,CAAC,CAAC,EAAE;MAChB,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAEjD,OAAO,CAACkD,QAAQ,EAAE,4BAA4B,CAAC;MACjE,OAAO;QACHzF,IAAI,EAAE,SAAAA,CAAA,EAAY;UAAE,OAAOJ,OAAO,CAACC,MAAM,CAAC2F,OAAO,CAAC;QAAE,CAAC;QACrDE,IAAI,EAAE,SAAAA,CAAA,EAAY;UAAE,OAAO9F,OAAO,CAACC,MAAM,CAAC2F,OAAO,CAAC;QAAE;MACxD,CAAC;IACL;IACA,IAAIG,KAAK,GAAG;MAAEC,MAAM,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAM,CAAC;IAC7D,IAAIC,WAAW,GAAG,SAAAA,CAAA,EAAY;MAC1B,IAAIC,EAAE,EAAEC,EAAE;MACV,IAAIN,KAAK,CAACO,SAAS,IAAI,IAAI,EAAE;QACzB;MACJ;MACA,IAAIC,IAAI,GAAG,CAACF,EAAE,GAAG,CAACD,EAAE,GAAGL,KAAK,CAACS,cAAc,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,IAAI,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;MAC7H,IAAII,mCAAmC,GAAGF,IAAI,IAAI5B,KAAK,CAACF,WAAW,CAACd,IAAI;MACxE,IAAI+C,oCAAoC,GAAGH,IAAI,IAAI5B,KAAK,CAACF,WAAW,CAACX,GAAG;MACxE,IAAI2C,mCAAmC,IAAI,CAACV,KAAK,CAACC,MAAM,EAAE;QACtDD,KAAK,CAACC,MAAM,GAAG,IAAI;QACnBD,KAAK,CAACO,SAAS,CAACK,KAAK,CAAC,CAAC;MAC3B,CAAC,MACI,IAAKD,oCAAoC,IAAIX,KAAK,CAACC,MAAM,IAAMD,KAAK,CAACE,QAAQ,IAAI,CAACQ,mCAAoC,EAAE;QACzHV,KAAK,CAACE,QAAQ,GAAG,KAAK;QACtBF,KAAK,CAACC,MAAM,GAAG,KAAK;QACpBD,KAAK,CAACO,SAAS,CAACM,MAAM,CAAC,CAAC;MAC5B;IACJ,CAAC;IACD,IAAIC,kBAAkB,GAAG,SAAAA,CAAA,EAAY;MAAE,OAAOrH,SAAS,CAACmF,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACvF,IAAIyB,EAAE;QACN,OAAOzF,WAAW,CAAC,IAAI,EAAE,UAAU0F,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACvF,KAAK;YACZ,KAAK,CAAC;cACF,IAAI,EAAEiF,KAAK,CAACS,cAAc,KAAKM,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAClEf,KAAK,CAACS,cAAc,GAAG,IAAI,CAACO,2BAA2B,CAACZ,WAAW,CAAC;cACpEC,EAAE,GAAGL,KAAK;cACV,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACiB,UAAU,CAACjB,KAAK,CAACS,cAAc,EAAE,IAAI,CAAC,CAACtB,KAAK,CAAC,YAAY;gBAAE,OAAO4B,SAAS;cAAE,CAAC,CAAC,CAAC;YAC9G,KAAK,CAAC;cACFV,EAAE,CAACE,SAAS,GAAGD,EAAE,CAACtF,IAAI,CAAC,CAAC;cACxBoF,WAAW,CAAC,CAAC;cACbE,EAAE,CAACvF,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,YAAYiF,KAAK,CAACS,cAAc,CAAC;UACvD;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;IACL,IAAIS,aAAa,GAAG,SAAAA,CAAU9D,OAAO,EAAE;MACnC,IAAIA,OAAO,KAAK2D,SAAS,EAAE;QACvB,MAAM,CAAC,CAAC,EAAEnE,OAAO,CAACkD,QAAQ,EAAE,sDAAsD,EAAElD,OAAO,CAACuE,cAAc,CAAC;MAC/G;MACA,OAAO,IAAI;IACf,CAAC;IACD,OAAO;MACH9G,IAAI,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAOZ,SAAS,CAACmF,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;UACpE,IAAI6B,cAAc,EAAEpG,IAAI;UACxB,OAAOO,WAAW,CAAC,IAAI,EAAE,UAAUyF,EAAE,EAAE;YACnC,QAAQA,EAAE,CAACtF,KAAK;cACZ,KAAK,CAAC;gBACF,IAAIiF,KAAK,CAACG,QAAQ,EAAE;kBAChB,IAAIe,aAAa,CAAClB,KAAK,CAAC5C,OAAO,CAAC,EAAE;oBAC9B,OAAO,CAAC,CAAC,CAAC,YAAY;sBAAE3C,IAAI,EAAE,IAAI;sBAAEV,KAAK,EAAEiG,KAAK,CAAC5C;oBAAQ,CAAC,CAAC;kBAC/D;gBACJ;gBACA,OAAO,CAAC,CAAC,CAAC,WAAW0D,kBAAkB,CAAC,CAAC,CAAC;cAC9C,KAAK,CAAC;gBACFL,cAAc,GAAGJ,EAAE,CAACrF,IAAI,CAAC,CAAC;gBAC1B,OAAO,CAAC,CAAC,CAAC,WAAWyF,cAAc,CAACW,OAAO,CAAC,CAAC,CAAC;cAClD,KAAK,CAAC;gBACF/G,IAAI,GAAGgG,EAAE,CAACrF,IAAI,CAAC,CAAC;gBAChB,IAAIX,IAAI,CAACI,IAAI,KAAK,IAAI,EAAE;kBACpBuF,KAAK,CAACG,QAAQ,GAAG9F,IAAI,CAACI,IAAI;kBAC1BuF,KAAK,CAAC5C,OAAO,GAAG/C,IAAI,CAACN,KAAK;gBAC9B;gBACA,OAAO,CAAC,CAAC,CAAC,YAAYM,IAAI,CAAC;YACnC;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;MAAE,CAAC;MACLgH,MAAM,EAAE,SAAAA,CAAUtH,KAAK,EAAE;QAAE,OAAON,SAAS,CAACmF,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;UAC3E,IAAI6B,cAAc,EAAEa,IAAI;UACxB,IAAIjB,EAAE;UACN,OAAOzF,WAAW,CAAC,IAAI,EAAE,UAAU0F,EAAE,EAAE;YACnC,QAAQA,EAAE,CAACvF,KAAK;cACZ,KAAK,CAAC;gBACF,IAAIiF,KAAK,CAACG,QAAQ,EAAE;kBAChB,IAAIe,aAAa,CAAClB,KAAK,CAAC5C,OAAO,CAAC,EAAE;oBAC9B,OAAO,CAAC,CAAC,CAAC,YAAY;sBAAE3C,IAAI,EAAE,IAAI;sBAAEV,KAAK,EAAEA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGiG,KAAK,CAAC5C;oBAAQ,CAAC,CAAC;kBAC5G;gBACJ;gBACA,CAACiD,EAAE,GAAGL,KAAK,CAACO,SAAS,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAChB,MAAM,CAAC,CAAC;gBACvE,OAAO,CAAC,CAAC,CAAC,WAAWyB,kBAAkB,CAAC,CAAC,CAAC;cAC9C,KAAK,CAAC;gBACFL,cAAc,GAAGH,EAAE,CAACtF,IAAI,CAAC,CAAC;gBAC1B,OAAO,CAAC,CAAC,CAAC,WAAWyF,cAAc,CAACc,gBAAgB,CAAC,CAAC,CAAC;cAC3D,KAAK,CAAC;gBACFD,IAAI,GAAGhB,EAAE,CAACtF,IAAI,CAAC,CAAC;gBAChBgF,KAAK,CAACG,QAAQ,GAAG,IAAI;gBACrBmB,IAAI,CAACvH,KAAK,GAAGA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGuH,IAAI,CAACvH,KAAK;gBACpEiG,KAAK,CAAC5C,OAAO,GAAGkE,IAAI,CAACvH,KAAK;gBAC1B,OAAO,CAAC,CAAC,CAAC,YAAYuH,IAAI,CAAC;YACnC;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;MAAE,CAAC;MACLvB,IAAI,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAOtG,SAAS,CAACmF,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;UACpE,IAAI6B,cAAc;UAClB,OAAO7F,WAAW,CAAC,IAAI,EAAE,UAAUyF,EAAE,EAAE;YACnC,QAAQA,EAAE,CAACtF,KAAK;cACZ,KAAK,CAAC;gBACF,IAAIiF,KAAK,CAACG,QAAQ,EAAE;kBAChB,IAAIe,aAAa,CAAClB,KAAK,CAAC5C,OAAO,CAAC,EAAE;oBAC9B,OAAO,CAAC,CAAC,CAAC,YAAY;sBAAE3C,IAAI,EAAE,IAAI;sBAAEV,KAAK,EAAEiG,KAAK,CAAC5C;oBAAQ,CAAC,CAAC;kBAC/D;gBACJ;gBACA,OAAO,CAAC,CAAC,CAAC,WAAW0D,kBAAkB,CAAC,CAAC,CAAC;cAC9C,KAAK,CAAC;gBACFL,cAAc,GAAGJ,EAAE,CAACrF,IAAI,CAAC,CAAC;gBAC1B,OAAO,CAAC,CAAC,CAAC,WAAWyF,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC;cAC/C,KAAK,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,YAAYnB,EAAE,CAACrF,IAAI,CAAC,CAAC,CAAC;YAC5C;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;MAAE;IACR,CAAC;EACL,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIuC,MAAM,CAACoB,SAAS,CAACjE,IAAI,GAAG,UAAU+G,WAAW,EAAEC,UAAU,EAAE;IACvD,OAAO,IAAI,CAACnC,mBAAmB,CAAC,CAAC,CAAC7E,IAAI,CAAC+G,WAAW,EAAEC,UAAU,CAAC;EACnE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACInE,MAAM,CAACoB,SAAS,CAACQ,KAAK,GAAG,UAAUuC,UAAU,EAAE;IAC3C,OAAO,IAAI,CAACnC,mBAAmB,CAAC,CAAC,CAACJ,KAAK,CAACuC,UAAU,CAAC;EACvD,CAAC;EACDnE,MAAM,CAACoB,SAAS,CAACgD,OAAO,GAAG,UAAUC,SAAS,EAAE;IAC5C,OAAO,IAAI,CAACrC,mBAAmB,CAAC,CAAC,CAACoC,OAAO,CAACC,SAAS,CAAC;EACxD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIrE,MAAM,CAACoB,SAAS,CAACG,SAAS,GAAG,UAAUD,QAAQ,EAAE;IAC7C,IAAI,CAACoC,UAAU,CAACpC,QAAQ,CAAC,CACpBM,KAAK,CAAC,YAAY,CAAE,CAAC,CAAC;EAC/B,CAAC;EACD;AACJ;AACA;AACA;EACI5B,MAAM,CAACoB,SAAS,CAACiB,MAAM,GAAG,YAAY;IAClC,OAAO,IAAI,CAACpB,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACC,MAAM,KAAK,IAAI;EACzD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIlB,MAAM,CAACoB,SAAS,CAACsC,UAAU,GAAG,UAAUpC,QAAQ,EAAEoB,MAAM,EAAE;IACtD,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;MAAEA,MAAM,GAAG,KAAK;IAAE;IACzC,IAAI4B,SAAS,GAAG,IAAI,CAAC9C,iBAAiB,CAACF,QAAQ,CAAC;IAChD,OAAO,IAAI,CAACX,sBAAsB,CAC7BxD,IAAI,CAAC,UAAU0E,CAAC,EAAE;MACnB,IAAIa,MAAM,EAAE;QACRb,CAAC,CAACwB,KAAK,CAAC,CAAC;MACb;MACAxB,CAAC,CAACN,SAAS,CAAC+C,SAAS,CAAC;MACtB,OAAOzC,CAAC;IACZ,CAAC,CAAC,CACGD,KAAK,CAAC,UAAUnC,KAAK,EAAE;MACxB,IAAI6E,SAAS,CAAC5C,OAAO,IAAI,IAAI,EAAE;QAC3B4C,SAAS,CAAC5C,OAAO,CAACjC,KAAK,CAAC;MAC5B;MACA,OAAO/C,OAAO,CAACC,MAAM,CAAC8C,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIO,MAAM,CAACoB,SAAS,CAACI,iBAAiB,GAAG,UAAUF,QAAQ,EAAE;IACrD,IAAID,KAAK,GAAG,IAAI;IAChB,IAAIyB,EAAE,EAAEC,EAAE,EAAEwB,EAAE;IACd,IAAIC,mBAAmB,GAAG,CAAC1B,EAAE,GAAGxB,QAAQ,CAACS,WAAW,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGlD,oBAAoB;IAC3G,IAAI6E,eAAe,GAAG,CAAC1B,EAAE,GAAGzB,QAAQ,CAACI,OAAO,MAAM,IAAI,IAAIqB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGvD,gBAAgB;IAC/F,IAAIkF,cAAc,GAAG,CAACH,EAAE,GAAGjD,QAAQ,CAACG,MAAM,MAAM,IAAI,IAAI8C,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGzE,eAAe;IAC5F,IAAI6E,kBAAkB,GAAG,SAAAA,CAAUC,QAAQ,EAAE;MACzCvD,KAAK,CAACwD,+BAA+B,CAACD,QAAQ,CAAC,CAACzH,IAAI,CAAC,UAAU0C,OAAO,EAAE;QACpE,IAAIwB,KAAK,CAACJ,QAAQ,KAAK,IAAI,EAAE;UACzB,OAAOuD,mBAAmB,CAACjG,IAAI,CAAC+C,QAAQ,EAAED,KAAK,CAACJ,QAAQ,CAAC;QAC7D;QACAI,KAAK,CAACJ,QAAQ,GAAGpB,OAAO;QACxB,OAAO2E,mBAAmB,CAACjG,IAAI,CAAC+C,QAAQ,EAAEzB,OAAO,CAAC;MACtD,CAAC,CAAC,CAAC+B,KAAK,CAAC6C,eAAe,CAAC;IAC7B,CAAC;IACD,IAAIK,cAAc,GAAG,SAAAA,CAAUrF,KAAK,EAAE;MAClC;MACA;MACA4B,KAAK,CAACN,iBAAiB,CAACgE,iBAAiB,CAAC,CAAC,CAAC5H,IAAI,CAAC,YAAY;QACzD6H,iBAAiB,CAACvF,KAAK,EAAE4B,KAAK,CAACZ,MAAM,CAAC;QACtCY,KAAK,CAACH,MAAM,GAAGzB,KAAK;QACpBgF,eAAe,CAAClG,IAAI,CAAC+C,QAAQ,EAAE7B,KAAK,CAAC;MACzC,CAAC,CAAC,CAACmC,KAAK,CAAC6C,eAAe,CAAC;IAC7B,CAAC;IACD,IAAIQ,aAAa,GAAG,SAAAA,CAAUlF,IAAI,EAAE;MAChCsB,KAAK,CAACL,KAAK,GAAGjB,IAAI;MAClB,OAAO2E,cAAc,CAACnG,IAAI,CAAC+C,QAAQ,EAAEvB,IAAI,CAAC;IAC9C,CAAC;IACD,OAAO;MACHmC,MAAM,EAAGZ,QAAQ,CAACY,MAAM,IAAI,IAAI,GAAIZ,QAAQ,CAACY,MAAM,CAACgD,IAAI,CAAC5D,QAAQ,CAAC,GAAGkC,SAAS;MAC9E/B,MAAM,EAAEwD,aAAa;MACrBlD,WAAW,EAAE4C,kBAAkB;MAC/BjD,OAAO,EAAEoD;IACb,CAAC;EACL,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI9E,MAAM,CAACoB,SAAS,CAAC+D,OAAO,GAAG,YAAY;IACnC,IAAI,IAAI,CAAClE,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;MAChD,IAAI,CAACP,sBAAsB,CAACxD,IAAI,CAAC,UAAU0E,CAAC,EAAE;QAAE,OAAOA,CAAC,CAACC,MAAM,CAAC,CAAC;MAAE,CAAC,CAAC,CAChEF,KAAK,CAAC,YAAY,CAAE,CAAC,CAAC;IAC/B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI5B,MAAM,CAACoB,SAAS,CAACyD,+BAA+B,GAAG,UAAUD,QAAQ,EAAE;IACnE,IAAI9B,EAAE,GAAG1D,UAAU,CAACgG,IAAI,CAACC,0BAA0B,CAAC,IAAI,CAACxE,MAAM,EAAE,IAAI,CAACC,WAAW,EAAE;QAC/EwE,WAAW,EAAE;MACjB,CAAC,CAAC;MAAEpF,KAAK,GAAG4C,EAAE,CAACyC,cAAc;MAAEpF,UAAU,GAAG2C,EAAE,CAAC0C,MAAM;IACrD,IAAIjG,gBAAgB,GAAG,IAAI,CAACwB,iBAAiB;IAC7C,OAAOxB,gBAAgB,CAClBkG,aAAa,CAAC,CAAC,CACftI,IAAI;IACT;IACA,UAAUuI,UAAU,EAAE;MAClB,OAAOnG,gBAAgB,CAClBwF,iBAAiB,CAAC,CAAC,CACnB5H,IAAI,CAAC,YAAY;QAClB,OAAOuI,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACC,kBAAkB,CAAC,CAAC;MAClG,CAAC,CAAC;IACN,CAAC;IACD;IACA,UAAUpI,CAAC,EAAE;MAAE,OAAOiG,SAAS;IAAE,CAAC,CAAC,CAC9BrG,IAAI,CAAC,UAAUyI,eAAe,EAAE;MACjC,OAAO,IAAI1G,gBAAgB,CAAC2G,OAAO,CAAC3F,KAAK,EAAEC,UAAU,EAAEyE,QAAQ,EAAEgB,eAAe,CAAC;IACrF,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;EACI5F,MAAM,CAACoB,SAAS,CAACqC,2BAA2B,GAAG,UAAUqC,kBAAkB,EAAE;IACzE,IAAIzE,KAAK,GAAG,IAAI;IAChB,SAAS0E,uBAAuBA,CAAA,EAAG;MAC/B,IAAIC,iBAAiB,GAAG,CAAC,CAAC;MAC1BA,iBAAiB,CAACC,OAAO,GAAG,IAAIvJ,OAAO,CAAC,UAAUD,OAAO,EAAEE,MAAM,EAAE;QAC/DqJ,iBAAiB,CAACvJ,OAAO,GAAGA,OAAO;QACnCuJ,iBAAiB,CAACrJ,MAAM,GAAGA,MAAM;MACrC,CAAC,CAAC;MACF,OAAOqJ,iBAAiB;IAC5B;IACA,SAASE,OAAOA,CAACC,cAAc,EAAE;MAC7B,OAAOA,cAAc,YAAYC,KAAK;IAC1C;IACA,SAASvC,OAAOA,CAAA,EAAG;MACf,IAAIf,EAAE;MACN,OAAO5G,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QAC/C,IAAImK,OAAO;QACX,OAAOhJ,WAAW,CAAC,IAAI,EAAE,UAAU0F,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACvF,KAAK;YACZ,KAAK,CAAC;cACF,IAAI8I,MAAM,CAAC7H,MAAM,GAAG,CAAC,EAAE;gBACnB4H,OAAO,GAAG,CAACvD,EAAE,GAAGwD,MAAM,CAACC,KAAK,CAAC,CAAC,MAAM,IAAI,IAAIzD,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,EAAEzD,OAAO,CAACkD,QAAQ,EAAE,yBAAyB,EAAElD,OAAO,CAACuE,cAAc,CAAC;gBACzIkC,kBAAkB,CAAC,CAAC;gBACpB,IAAII,OAAO,CAACG,OAAO,CAAC,EAAE;kBAClB,MAAMA,OAAO;gBACjB;gBACA,OAAO,CAAC,CAAC,CAAC,YAAYA,OAAO,CAAC;cAClC;cACAG,aAAa,CAACC,UAAU,GAAGV,uBAAuB,CAAC,CAAC;cACpD,OAAO,CAAC,CAAC,CAAC,WAAWS,aAAa,CAACC,UAAU,CAACR,OAAO,CAAC;YAC1D,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,YAAYlD,EAAE,CAACtF,IAAI,CAAC,CAAC,CAAC;UAC5C;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA,IAAI6I,MAAM,GAAG,EAAE;IACf,IAAIE,aAAa,GAAG;MAAEC,UAAU,EAAE;IAAK,CAAC;IACxC,IAAInF,QAAQ,GAAG;MACXY,MAAM,EAAE,SAAAA,CAAUC,MAAM,EAAE;QACtBb,QAAQ,CAACoF,KAAK,CAAC;UAAExJ,IAAI,EAAE,KAAK;UAAEV,KAAK,EAAE2F;QAAO,CAAC,CAAC;MAClD,CAAC;MACDJ,WAAW,EAAE,SAAAA,CAAUlC,OAAO,EAAE;QAC5ByB,QAAQ,CAACoF,KAAK,CAAC;UAAExJ,IAAI,EAAE,IAAI;UAAEV,KAAK,EAAEqD;QAAQ,CAAC,CAAC;MAClD,CAAC;MACD6B,OAAO,EAAE,SAAAA,CAAUjC,KAAK,EAAE;QACtB6B,QAAQ,CAACoF,KAAK,CAACjH,KAAK,CAAC;MACzB,CAAC;MACDiH,KAAK,EAAE,SAAAA,CAAUL,OAAO,EAAE;QACtB,IAAIG,aAAa,CAACC,UAAU,KAAK,IAAI,EAAE;UACnC,IAAIA,UAAU,GAAGD,aAAa,CAACC,UAAU;UACzCD,aAAa,CAACC,UAAU,GAAG,IAAI;UAC/B,IAAIP,OAAO,CAACG,OAAO,CAAC,EAAE;YAClBI,UAAU,CAAC9J,MAAM,CAAC0J,OAAO,CAAC;UAC9B,CAAC,MACI;YACDI,UAAU,CAAChK,OAAO,CAAC4J,OAAO,CAAC;UAC/B;QACJ,CAAC,MACI;UACDC,MAAM,CAAC5H,IAAI,CAAC2H,OAAO,CAAC;UACpBP,kBAAkB,CAAC,CAAC;QACxB;MACJ,CAAC;MACDjC,OAAO,EAAEA,OAAO;MAChBG,gBAAgB,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAO9H,SAAS,CAACmF,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;UAChF,IAAIgF,OAAO;UACX,OAAOhJ,WAAW,CAAC,IAAI,EAAE,UAAUyF,EAAE,EAAE;YACnC,QAAQA,EAAE,CAACtF,KAAK;cACZ,KAAK,CAAC;gBACF,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBAClC,OAAO,CAAC,CAAC,CAAC,WAAWqG,OAAO,CAAC,CAAC,CAAC;cACnC,KAAK,CAAC;gBACFwC,OAAO,GAAGvD,EAAE,CAACrF,IAAI,CAAC,CAAC;gBACnB,IAAI4I,OAAO,CAACnJ,IAAI,KAAK,IAAI,EAAE;kBACvB,OAAO,CAAC,CAAC,CAAC,YAAYmJ,OAAO,CAAC;gBAClC;gBACA,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAC3B,KAAK,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,WAAW;YACjC;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;MAAE,CAAC;MACLpC,IAAI,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAO/H,SAAS,CAACmF,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;UACpE,IAAIgF,OAAO,EAAEA,OAAO,EAAEM,OAAO;UAC7B,OAAOtJ,WAAW,CAAC,IAAI,EAAE,UAAUyF,EAAE,EAAE;YACnC,QAAQA,EAAE,CAACtF,KAAK;cACZ,KAAK,CAAC;gBACF,IAAI8I,MAAM,CAAC7H,MAAM,GAAG,CAAC,EAAE;kBACnB4H,OAAO,GAAGC,MAAM,CAAC,CAAC,CAAC;kBACnB,IAAIJ,OAAO,CAACG,OAAO,CAAC,EAAE;oBAClB,MAAMA,OAAO;kBACjB;kBACA,OAAO,CAAC,CAAC,CAAC,YAAYA,OAAO,CAAC;gBAClC;gBACAG,aAAa,CAACC,UAAU,GAAGV,uBAAuB,CAAC,CAAC;gBACpDjD,EAAE,CAACtF,KAAK,GAAG,CAAC;cAChB,KAAK,CAAC;gBACFsF,EAAE,CAACnF,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,CAAC,CAAC,WAAW8H,aAAa,CAACC,UAAU,CAACR,OAAO,CAAC;cAC1D,KAAK,CAAC;gBACFI,OAAO,GAAGvD,EAAE,CAACrF,IAAI,CAAC,CAAC;gBACnB6I,MAAM,CAACM,OAAO,CAACP,OAAO,CAAC;gBACvB,OAAO,CAAC,CAAC,CAAC,YAAYA,OAAO,CAAC;cAClC,KAAK,CAAC;gBACFM,OAAO,GAAG7D,EAAE,CAACrF,IAAI,CAAC,CAAC;gBACnB6I,MAAM,CAACM,OAAO,CAACD,OAAO,CAAC;gBACvB,MAAMA,OAAO;cACjB,KAAK,CAAC;gBACFb,kBAAkB,CAAC,CAAC;gBACpB,OAAO,CAAC,CAAC,CAAC,eAAe;cAC7B,KAAK,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC,WAAW;YACjC;UACJ,CAAC,CAAC;QACN,CAAC,CAAC;MAAE,CAAC;MACL,IAAI7C,IAAIA,CAAA,EAAG;QACP,OAAOqD,MAAM,CAAC7H,MAAM;MACxB;IACJ,CAAC;IACD,OAAO6C,QAAQ;EACnB,CAAC;EACD,OAAOtB,MAAM;AACjB,CAAC,CAAC,CAAE;AACJlB,EAAE,GAAGb,MAAM,CAAC4I,WAAW;AACvB,SAASnG,iBAAiBA,CAAA,EAAG;EACzB,IAAIjB,KAAK,GAAG,IAAI2G,KAAK,CAAC,EAAE,CAAC;EACzB,IAAI3G,KAAK,CAACqH,KAAK,IAAI,IAAI,EAAE;IACrB,OAAOrH,KAAK,CAACqH,KAAK,CAACC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;EACrD;EACA,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS/B,iBAAiBA,CAACvF,KAAK,EAAEuH,QAAQ,EAAE;EACxC,IAAIA,QAAQ,IAAI,IAAI,EAAE;IAClB;IACA;IACA;IACAvH,KAAK,CAACqH,KAAK,GAAGrH,KAAK,CAACwH,QAAQ,CAAC,CAAC,GAAG,IAAI,GAAGD,QAAQ;EACpD;AACJ;AACA/H,OAAO,CAAC4G,OAAO,GAAG7F,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script"}