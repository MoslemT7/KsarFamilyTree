{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\FamilyTree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport './FamilyTree.css';\nimport neo4j from 'neo4j-driver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nconst driver = neo4j.driver('neo4j+s://2cd0ce39.databases.neo4j.io', neo4j.auth.basic('neo4j', 'nW1azrzTK-lrTOO5G1uOkUVFwelcQlEmKPHggPUB7xQ'));\nconst session = driver.session();\nlet uniqueKeyCounter = 0;\nexport const translateName = name => {\n  return translations[name] || name;\n};\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [person.name, \" \", person.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), person.children && person.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: person.children.map(child => renderFamilyTree(child, person.id, level + 1))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, uniqueKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\nconst fetchFamilyTree = async () => {\n  try {\n    const response = await fetch('http://localhost:5000/api/family-tree');\n    if (!response.ok) {\n      throw new Error('Server error');\n    }\n    const data = await response.json(); // Parse JSON if response is valid\n    return data;\n  } catch (error) {\n    console.error('Error fetching family tree:', error.message);\n    return [];\n  }\n};\nconst formatFamilyTreeData = person => {\n  const children = person.children && person.children.length > 0 ? person.children.map(formatFamilyTreeData) // Recursively format children\n  : [];\n  return {\n    name: `${person.name} ${person.lastName}`,\n    children: children // Include children for each person\n  };\n};\nconst getChildrenOfFather = (fatherId, allPeople) => {\n  const father = allPeople.filter(father => father.id === fatherId)[0];\n  return father && father.children ? father.children : [];\n};\nconst buildTree = (person, allPeople) => {\n  if (!person) return null;\n  const children = getChildrenOfFather(person.id, allPeople).map(child => buildTree(child, allPeople)).filter(Boolean);\n  return {\n    id: person.id,\n    name: translateName(person.name),\n    children: children.length > 0 ? children : undefined\n  };\n};\nconst getGenderbyID = async personID => {\n  const session = driver.session(); // Open a session\n\n  try {\n    // Fix the parameter name to match the query variable\n    const result = await session.run(`MATCH (p:Person) WHERE id(p) = $personId \n      RETURN p.gender AS gender`, {\n      personId: personID\n    } // Ensure the key matches the query's parameter\n    );\n    if (result.records.length > 0) {\n      const gender = result.records[0].get('gender');\n      return gender; // Return the gender value\n    } else {\n      console.log(`No person found with the ID ${personID}`);\n      return null; // Return null when no person is found\n    }\n  } catch (error) {\n    console.error('Error retrieving gender:', error);\n    return null; // Return null in case of an error\n  } finally {\n    await session.close(); // Always close the session after the query\n  }\n};\nconst focusOnNodeById = id => {\n  if (!treeRef.current) return;\n  const allNodes = document.querySelectorAll('g.node');\n  allNodes.forEach(node => {\n    const title = node.querySelector('title');\n    if (title && Number(title.textContent) === id) {\n      node.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'center'\n      });\n    }\n  });\n};\nconst FamilyTree = () => {\n  _s();\n  const [familyTree, setFamilyTree] = useState(null);\n  const [husbandId, setHusbandId] = useState(null); // State to store husband's ID\n\n  const handleWomanClick = async person => {\n    const gender = await getGenderbyID(person.id);\n    if (gender !== 'Female') return;\n    try {\n      const result = await session.run(`\n        MATCH (w:Person)-[:WIFE_OF]-(h:Person)\n        WHERE id(w) = $womanId\n        RETURN id(h) as HusbandID\n        LIMIT 1\n      `, {\n        womanId: person.id\n      });\n      if (result.records.length > 0) {\n        const husband = result.records[0].get('HusbandID').toNumber();\n        setHusbandId(husband);\n        console.log(\"Husband of\", person.name, \"is\", husband);\n      } else {\n        console.log(\"No husband found for\", person.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching husband:\", error);\n    } finally {\n      await session.close();\n    }\n  };\n  useEffect(() => {\n    const loadFamilyTree = async () => {\n      try {\n        const people = await fetchFamilyTree();\n        if (Array.isArray(people) && people.length > 0) {\n          const rootPerson = people.find(p => p.id === 17);\n          const treeData = buildTree(rootPerson, people);\n          setFamilyTree(treeData);\n        } else {\n          console.warn(\"Empty or invalid people data\");\n        }\n      } catch (error) {\n        console.error('Error loading family tree:', error);\n      }\n    };\n    loadFamilyTree();\n  }, []);\n  if (!familyTree) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"treeWrapper\",\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: familyTree,\n      orientation: \"vertical\",\n      width: 1000,\n      height: 800,\n      pathFunc: \"step\",\n      renderCustomNodeElement: ({\n        nodeDatum\n      }) => {\n        const isHusband = nodeDatum.id === husbandId; // Check if the current node is the husband\n\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          onClick: () => handleWomanClick(nodeDatum),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"-50\" // Adjust X position\n            ,\n            y: \"-20\" // Adjust Y position\n            ,\n            width: \"100\" // Width of the rectangle\n            ,\n            height: \"40\" // Height of the rectangle\n            ,\n            fill: isHusband ? \"lightgreen\" : \"lightblue\" // Highlight the husband with a different color\n            ,\n            stroke: \"black\" // Border color\n            ,\n            strokeWidth: \"2\" // Border width\n            ,\n            rx: \"10\" // Rounded corners\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"0\" // Center the text horizontally\n            ,\n            y: \"5\" // Adjust text position vertically\n            ,\n            fontSize: \"24\",\n            textAnchor: \"middle\" // Align text to the center\n            ,\n            fill: \"black\" // Text color\n            ,\n            children: nodeDatum.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(FamilyTree, \"MxRo9x/xz/Vhrv+pmJQyHj7zjv8=\");\n_c = FamilyTree;\nexport default FamilyTree;\nvar _c;\n$RefreshReg$(_c, \"FamilyTree\");","map":{"version":3,"names":["React","useEffect","useState","Tree","neo4j","jsxDEV","_jsxDEV","translations","require","driver","auth","basic","session","uniqueKeyCounter","translateName","name","renderFamilyTree","person","parentId","level","uniqueKey","lastName","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","marginLeft","map","child","id","fetchFamilyTree","response","fetch","ok","Error","data","json","error","console","message","formatFamilyTreeData","getChildrenOfFather","fatherId","allPeople","father","filter","buildTree","Boolean","undefined","getGenderbyID","personID","result","run","personId","records","gender","get","log","close","focusOnNodeById","treeRef","current","allNodes","document","querySelectorAll","forEach","node","title","querySelector","Number","textContent","scrollIntoView","behavior","block","inline","FamilyTree","_s","familyTree","setFamilyTree","husbandId","setHusbandId","handleWomanClick","womanId","husband","toNumber","loadFamilyTree","people","Array","isArray","rootPerson","find","p","treeData","warn","width","height","orientation","pathFunc","renderCustomNodeElement","nodeDatum","isHusband","onClick","cursor","x","y","fill","stroke","strokeWidth","rx","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/FamilyTree.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Tree from 'react-d3-tree';\r\nimport './FamilyTree.css';\r\nimport neo4j from 'neo4j-driver';\r\nconst translations = require('./translation.json');\r\n\r\nconst driver = neo4j.driver(\r\n  'neo4j+s://2cd0ce39.databases.neo4j.io',\r\n  neo4j.auth.basic('neo4j', 'nW1azrzTK-lrTOO5G1uOkUVFwelcQlEmKPHggPUB7xQ')\r\n);\r\nconst session = driver.session();\r\n\r\nlet uniqueKeyCounter = 0;\r\nexport const translateName = (name) => {\r\n  return translations[name] || name;\r\n};\r\n\r\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\r\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\r\n\r\n  return (\r\n    <div key={uniqueKey}>\r\n      <div>\r\n        <strong>{person.name} {person.lastName}</strong>\r\n      </div>\r\n      {person.children && person.children.length > 0 && (\r\n        <div style={{ marginLeft: '20px' }}>\r\n          {person.children.map((child) => renderFamilyTree(child, person.id, level + 1))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst fetchFamilyTree = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/family-tree');\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Server error');\r\n    }\r\n\r\n    const data = await response.json(); // Parse JSON if response is valid\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching family tree:', error.message);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst formatFamilyTreeData = (person) => {\r\n  const children = person.children && person.children.length > 0\r\n    ? person.children.map(formatFamilyTreeData) // Recursively format children\r\n    : [];\r\n\r\n  return {\r\n    name: `${person.name} ${person.lastName}`,\r\n    children: children // Include children for each person\r\n  };\r\n};\r\n\r\nconst getChildrenOfFather = (fatherId, allPeople) => {\r\n  const father = allPeople.filter(father => father.id === fatherId)[0];  \r\n  return father && father.children ? father.children : [];  \r\n};\r\n\r\nconst buildTree = (person, allPeople) => {\r\n  if (!person) return null;\r\n\r\n  const children = getChildrenOfFather(person.id, allPeople)\r\n    .map(child => buildTree(child, allPeople))\r\n    .filter(Boolean); \r\n\r\n    \r\n    return {\r\n      id: person.id,\r\n      name: translateName(person.name),\r\n      children: children.length > 0 ? children : undefined,\r\n    };\r\n};\r\n\r\nconst getGenderbyID = async (personID) => {\r\n  const session = driver.session(); // Open a session\r\n\r\n  try {\r\n    // Fix the parameter name to match the query variable\r\n    const result = await session.run(\r\n      `MATCH (p:Person) WHERE id(p) = $personId \r\n      RETURN p.gender AS gender`,\r\n      { personId: personID } // Ensure the key matches the query's parameter\r\n    );\r\n    \r\n    if (result.records.length > 0) {\r\n      const gender = result.records[0].get('gender');\r\n      return gender; // Return the gender value\r\n    } else {\r\n      console.log(`No person found with the ID ${personID}`);\r\n      return null; // Return null when no person is found\r\n    }\r\n  } catch (error) {\r\n    console.error('Error retrieving gender:', error);\r\n    return null; // Return null in case of an error\r\n  } finally {\r\n    await session.close(); // Always close the session after the query\r\n  }\r\n};\r\n\r\nconst focusOnNodeById = (id) => {\r\n  if (!treeRef.current) return;\r\n\r\n  const allNodes = document.querySelectorAll('g.node');\r\n  allNodes.forEach((node) => {\r\n    const title = node.querySelector('title');\r\n    if (title && Number(title.textContent) === id) {\r\n      node.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\r\n    }\r\n  });\r\n};\r\n\r\nconst FamilyTree = () => {\r\n  const [familyTree, setFamilyTree] = useState(null);\r\n  const [husbandId, setHusbandId] = useState(null); // State to store husband's ID\r\n\r\n  const handleWomanClick = async (person) => {\r\n  \r\n    const gender = await getGenderbyID(person.id);\r\n  \r\n    if (gender !== 'Female') return;\r\n  \r\n  \r\n    try {\r\n      const result = await session.run(`\r\n        MATCH (w:Person)-[:WIFE_OF]-(h:Person)\r\n        WHERE id(w) = $womanId\r\n        RETURN id(h) as HusbandID\r\n        LIMIT 1\r\n      `, { womanId: person.id });\r\n  \r\n      if (result.records.length > 0) {\r\n        const husband = result.records[0].get('HusbandID').toNumber();\r\n        setHusbandId(husband);\r\n        console.log(\"Husband of\", person.name, \"is\", husband); \r\n      } else {\r\n        console.log(\"No husband found for\", person.name);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching husband:\", error);\r\n    } finally {\r\n      await session.close();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const loadFamilyTree = async () => {\r\n      try {\r\n        const people = await fetchFamilyTree();\r\n        if (Array.isArray(people) && people.length > 0) {\r\n          const rootPerson = people.find(p => p.id === 17);\r\n          \r\n          const treeData = buildTree(rootPerson, people); \r\n          setFamilyTree(treeData);                      \r\n        } else {\r\n          console.warn(\"Empty or invalid people data\");\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading family tree:', error);\r\n      }\r\n    };\r\n\r\n    loadFamilyTree();\r\n  }, []);\r\n  \r\n  if (!familyTree) return <div>Loading...</div>;\r\n  return (\r\n    <div id=\"treeWrapper\" style={{ width: '100vw', height: '100vh' }}>\r\n      <Tree\r\n  data={familyTree}\r\n  orientation=\"vertical\"\r\n  width={1000}\r\n  height={800}\r\n  pathFunc=\"step\"\r\n  renderCustomNodeElement={({ nodeDatum }) => {\r\n    const isHusband = nodeDatum.id === husbandId; // Check if the current node is the husband\r\n\r\n    return (\r\n      <g\r\n      onClick={() => handleWomanClick(nodeDatum)}\r\n      style={{ cursor: 'pointer' }}\r\n      >\r\n        {/* Rectangle as the background */}\r\n        <rect\r\n          x=\"-50\" // Adjust X position\r\n          y=\"-20\" // Adjust Y position\r\n          width=\"100\" // Width of the rectangle\r\n          height=\"40\" // Height of the rectangle\r\n          fill={isHusband ? \"lightgreen\" : \"lightblue\"} // Highlight the husband with a different color\r\n          stroke=\"black\" // Border color\r\n          strokeWidth=\"2\" // Border width\r\n          rx=\"10\" // Rounded corners\r\n        />\r\n        {/* Name text inside the rectangle */}\r\n        <text\r\n          x=\"0\" // Center the text horizontally\r\n          y=\"5\" // Adjust text position vertically\r\n          fontSize=\"24\"\r\n          textAnchor=\"middle\" // Align text to the center\r\n          fill=\"black\" // Text color\r\n        >\r\n          {nodeDatum.name}\r\n        </text>\r\n      </g>\r\n    );\r\n  }}\r\n/>\r\n\r\n\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default FamilyTree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}