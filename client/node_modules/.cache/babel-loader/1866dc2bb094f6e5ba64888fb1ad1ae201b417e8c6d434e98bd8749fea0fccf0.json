{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\FamilyTree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport './FamilyTree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nlet uniqueKeyCounter = 0;\nexport const translateName = name => {\n  return translations[name] || name;\n};\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [person.name, \" \", person.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), person.children && person.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: person.children.map(child => renderFamilyTree(child, person.id, level + 1))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, uniqueKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\nconst fetchFamilyTree = async () => {\n  try {\n    const response = await fetch('http://localhost:5000/api/family-tree');\n    if (!response.ok) {\n      throw new Error('Server error');\n    }\n    const data = await response.json(); // Parse JSON if response is valid\n    return data;\n  } catch (error) {\n    console.error('Error fetching family tree:', error.message);\n    return [];\n  }\n};\nconst formatFamilyTreeData = person => {\n  const children = person.children && person.children.length > 0 ? person.children.map(formatFamilyTreeData) // Recursively format children\n  : [];\n  return {\n    name: `${person.name} ${person.lastName}`,\n    children: children // Include children for each person\n  };\n};\nconst getChildrenOfFather = (fatherId, allPeople) => {\n  const father = allPeople.filter(father => father.id === fatherId)[0];\n  return father && father.children ? father.children : [];\n};\nconst buildTree = (person, allPeople) => {\n  if (!person) return null;\n  const children = getChildrenOfFather(person.id, allPeople).map(child => buildTree(child, allPeople)).filter(Boolean);\n  return {\n    name: translateName(person.name),\n    children: children.length > 0 ? children : undefined\n  };\n};\nconst FamilyTree = () => {\n  _s();\n  const [familyTree, setFamilyTree] = useState(null);\n  const [highlightedNodes, setHighlightedNodes] = useState([]);\n  // const treeRef = useRef();\n\n  useEffect(() => {\n    const loadFamilyTree = async () => {\n      try {\n        const people = await fetchFamilyTree();\n        if (Array.isArray(people) && people.length > 0) {\n          const rootPerson = people.find(p => p.id === 17);\n          const treeData = buildTree(rootPerson, people);\n          setFamilyTree(treeData);\n        } else {\n          console.warn(\"Empty or invalid people data\");\n        }\n      } catch (error) {\n        console.error('Error loading family tree:', error);\n      }\n    };\n    loadFamilyTree();\n  }, []);\n  if (!familyTree) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"treeWrapper\",\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: familyTree,\n      orientation: \"vertical\",\n      width: 1000,\n      height: 800,\n      pathFunc: \"step\",\n      renderCustomNodeElement: ({\n        nodeDatum\n      }) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"-50\" // Adjust X position\n          ,\n          y: \"-20\" // Adjust Y position\n          ,\n          width: \"100\" // Width of the rectangle\n          ,\n          height: \"40\" // Height of the rectangle\n          ,\n          fill: \"lightblue\" // Background color\n          ,\n          stroke: \"black\" // Border color\n          ,\n          strokeWidth: \"2\" // Border width\n          ,\n          rx: \"10\" // Rounded corners\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"0\" // Center the text horizontally\n          ,\n          y: \"5\" // Adjust text position vertically\n          ,\n          fontSize: \"24\",\n          textAnchor: \"middle\" // Align text to the center\n          ,\n          fill: \"black\" // Text color\n          ,\n          children: nodeDatum.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(FamilyTree, \"mUki1aE4RbdGH6ECNkUx8d7PSTQ=\");\n_c = FamilyTree;\nexport default FamilyTree;\nvar _c;\n$RefreshReg$(_c, \"FamilyTree\");","map":{"version":3,"names":["React","useEffect","useState","Tree","jsxDEV","_jsxDEV","translations","require","uniqueKeyCounter","translateName","name","renderFamilyTree","person","parentId","level","uniqueKey","lastName","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","marginLeft","map","child","id","fetchFamilyTree","response","fetch","ok","Error","data","json","error","console","message","formatFamilyTreeData","getChildrenOfFather","fatherId","allPeople","father","filter","buildTree","Boolean","undefined","FamilyTree","_s","familyTree","setFamilyTree","highlightedNodes","setHighlightedNodes","loadFamilyTree","people","Array","isArray","rootPerson","find","p","treeData","warn","width","height","orientation","pathFunc","renderCustomNodeElement","nodeDatum","x","y","fill","stroke","strokeWidth","rx","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/FamilyTree.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Tree from 'react-d3-tree';\r\nimport './FamilyTree.css';\r\nconst translations = require('./translation.json');\r\n\r\nlet uniqueKeyCounter = 0;\r\nexport const translateName = (name) => {\r\n  return translations[name] || name;\r\n};\r\n\r\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\r\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\r\n\r\n  return (\r\n    <div key={uniqueKey}>\r\n      <div>\r\n        <strong>{person.name} {person.lastName}</strong>\r\n      </div>\r\n      {person.children && person.children.length > 0 && (\r\n        <div style={{ marginLeft: '20px' }}>\r\n          {person.children.map((child) => renderFamilyTree(child, person.id, level + 1))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst fetchFamilyTree = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/family-tree');\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Server error');\r\n    }\r\n\r\n    const data = await response.json(); // Parse JSON if response is valid\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching family tree:', error.message);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst formatFamilyTreeData = (person) => {\r\n  const children = person.children && person.children.length > 0\r\n    ? person.children.map(formatFamilyTreeData) // Recursively format children\r\n    : [];\r\n\r\n  return {\r\n    name: `${person.name} ${person.lastName}`,\r\n    children: children // Include children for each person\r\n  };\r\n};\r\n\r\nconst getChildrenOfFather = (fatherId, allPeople) => {\r\n  const father = allPeople.filter(father => father.id === fatherId)[0];  \r\n  return father && father.children ? father.children : [];  \r\n};\r\n\r\nconst buildTree = (person, allPeople) => {\r\n  if (!person) return null;\r\n\r\n  const children = getChildrenOfFather(person.id, allPeople)\r\n    .map(child => buildTree(child, allPeople))\r\n    .filter(Boolean); \r\n\r\n    \r\n  return {\r\n    name: translateName(person.name),\r\n    children: children.length > 0 ? children : undefined, \r\n  };\r\n};\r\n\r\nconst FamilyTree = () => {\r\n  const [familyTree, setFamilyTree] = useState(null);\r\n  const [highlightedNodes, setHighlightedNodes] = useState([]);\r\n  // const treeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const loadFamilyTree = async () => {\r\n      try {\r\n        const people = await fetchFamilyTree();\r\n\r\n        if (Array.isArray(people) && people.length > 0) {\r\n          const rootPerson = people.find(p => p.id === 17);\r\n\r\n          const treeData = buildTree(rootPerson, people); \r\n          setFamilyTree(treeData);                      \r\n        } else {\r\n          console.warn(\"Empty or invalid people data\");\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading family tree:', error);\r\n      }\r\n    };\r\n\r\n    loadFamilyTree();\r\n  }, []);\r\n\r\n  if (!familyTree) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div id=\"treeWrapper\" style={{ width: '100vw', height: '100vh' }}>\r\n      <Tree\r\n  data={familyTree}\r\n  orientation=\"vertical\"\r\n  width={1000}\r\n  height={800}\r\n  pathFunc=\"step\"\r\n  renderCustomNodeElement={({ nodeDatum }) => (\r\n    <g>\r\n      {/* Rectangle as the background */}\r\n      <rect\r\n        x=\"-50\" // Adjust X position\r\n        y=\"-20\" // Adjust Y position\r\n        width=\"100\" // Width of the rectangle\r\n        height=\"40\" // Height of the rectangle\r\n        fill=\"lightblue\" // Background color\r\n        stroke=\"black\" // Border color\r\n        strokeWidth=\"2\" // Border width\r\n        rx=\"10\" // Rounded corners\r\n      />\r\n      {/* Name text inside the rectangle */}\r\n      <text\r\n        x=\"0\" // Center the text horizontally\r\n        y=\"5\" // Adjust text position vertically\r\n        fontSize=\"24\"\r\n        textAnchor=\"middle\" // Align text to the center\r\n        fill=\"black\" // Text color\r\n      >\r\n        {nodeDatum.name}\r\n      </text>\r\n    </g>\r\n  )}\r\n\r\n/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FamilyTree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}