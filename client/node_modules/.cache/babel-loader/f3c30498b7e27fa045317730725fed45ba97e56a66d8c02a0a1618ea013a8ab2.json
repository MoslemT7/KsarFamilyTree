{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\RelationChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RelationChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst neo4j = require('neo4j-driver');\nconst translations = require('./translation.json');\nconst driver = neo4j.driver('neo4j+s://2cd0ce39.databases.neo4j.io', neo4j.auth.basic('neo4j', 'nW1azrzTK-lrTOO5G1uOkUVFwelcQlEmKPHggPUB7xQ'));\nconst getRelationship = async (person1FullNameAR, person2FullNameAR) => {\n  const person1FullName = translateName(person1FullNameAR, false);\n  const person2FullName = translateName(person2FullNameAR, false);\n  const session = driver.session();\n  const gender1 = await getGender(person1FullName);\n  const gender2 = await getGender(person2FullName);\n  try {\n    const [person1Name, person1LastName] = person1FullName.trim().split(' ');\n    const [person2Name, person2LastName] = person2FullName.trim().split(' ');\n    console.log(`Looking up relationship between: ${person1FullName} and ${person2FullName}`);\n\n    // Function to get the parents/ancestors of a person\n    const getAncestors = async (personName, personLastName) => {\n      const result = await session.run(`\n        MATCH path = (ancestor:Person)-[:FATHER_OF|MOTHER_OF*]->(child:Person {name: $personName, lastName: $personLastName})\n        WITH ancestor, id(ancestor) AS ID, length(path) AS level\n        RETURN DISTINCT ID, ancestor.name AS name, ancestor.lastName AS lastName, level\n        ORDER BY level ASC\n      `, {\n        personName,\n        personLastName\n      });\n      return result.records.map(record => ({\n        id: record.get('ID').toNumber(),\n        name: record.get('name'),\n        lastName: record.get('lastName'),\n        level: record.get('level').toNumber()\n      }));\n    };\n\n    // Get the ancestors for both persons\n    const maxLevels = 4; // Adjust the maximum levels to go up the tree\n    let person1Ancestors = await getAncestors(person1Name, person1LastName, maxLevels);\n    let person2Ancestors = await getAncestors(person2Name, person2LastName, maxLevels);\n    console.log(`Person 1 Ancestors: ${person1Ancestors.map(a => a.name).join(' ben ')}`);\n    console.log(`Person 2 Ancestors: ${person2Ancestors.map(a => a.name).join(' ben ')}`);\n    const person1Ids = person1Ancestors.map(a => a.id);\n    const person2Ids = person2Ancestors.map(a => a.id);\n    const sharedAncestors = person1Ancestors.filter(a => person2Ids.includes(a.id));\n    if (sharedAncestors.length > 0) {\n      console.log(\"They share ancestor(s):\", sharedAncestors.map(a => a.name).join(', '));\n    } else {\n      console.log(\"They do not share any ancestor node.\");\n    }\n    const translatedName1 = translateName(person1FullName);\n    const translatedName2 = translateName(person2FullName);\n\n    // Check for common ancestors between the two persons\n    for (let i = 0; i < person1Ancestors.length; i++) {\n      for (let j = 0; j < person2Ancestors.length; j++) {\n        if (person1Ancestors[i].id === person2Ancestors[j].id) {\n          var p1Level = person1Ancestors[i].level - 1;\n          var p2Level = person2Ancestors[j].level - 1;\n          console.log(`Level: (${p1Level}, ${p2Level})`);\n          if (p1Level === 0 && p2Level === 1) {\n            if (gender1 === 'Male') {\n              console.log(`${translatedName1} هو والد ${translatedName2}`);\n              return `${translatedName1} هو والد ${translatedName2}`;\n            } else {\n              console.log(`${translatedName1} هي والدة ${translatedName2}`);\n              return `${translatedName1} هي والدة ${translatedName2}`;\n            }\n          } else if (p1Level === 1 && p2Level === 0) {\n            if (gender1 === 'Male') {\n              console.log(`${translatedName1} هو ابن ${translatedName2}`);\n              return `${translatedName1} هو ابن ${translatedName2}`;\n            } else {\n              console.log(`${translatedName1} هي إبنة ${person2FullName}`);\n              return `${translatedName1} هي إبنة ${translatedName2}`;\n            }\n          } else if (p1Level === 2 && p2Level === 0) {\n            if (gender1 === 'Male') {\n              console.log(`${person1FullName} هو حفيد ${person2FullName}`);\n              return `${translatedName1} هو حفيد ${translatedName2}`;\n            } else {\n              console.log(`${person1FullName} هي حفيدة ${person2FullName}.`);\n              return `${translatedName1} هي حفيدة ${translatedName2}`;\n            }\n          } else if (p1Level === 0 && p2Level === 2) {\n            if (gender1 === 'Male') {\n              console.log(`${person1FullName} هو جدّ ${person2FullName}'.`);\n              return `${translatedName1} هو جدّ ${translatedName2}`;\n            } else {\n              console.log(`${person1FullName} هي جدّة ${person2FullName}.`);\n              return `${translatedName1} هي جدّة ${translatedName2}`;\n            }\n          } else if (p1Level === 3 && p2Level === 0) {\n            if (gender1 === 'Male') {\n              console.log(`${person1FullName} هو إبن حفيد ${person2FullName}.`);\n              return `${translatedName1} هو إبن حفيد ${translatedName2}`;\n            } else {\n              console.log(`${person1FullName} هي إبنة حفيدة ${person2FullName}.`);\n              return `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\n            }\n          } else if (p1Level === 0 && p2Level === 3) {\n            if (gender1 === 'Male') {\n              console.log(`${person1FullName} هو جد والد ${person2FullName}`);\n              return `${translatedName1} و جد والد ${translatedName2}`;\n            } else {\n              console.log(`${person1FullName}هي جدة والدة ${person2FullName}`);\n              return `${translatedName1} هي جدة والدة ${translatedName2}`;\n            }\n          } else if (p1Level === 1 && p2Level === 1) {\n            if (gender1 === 'Male' && gender2 === 'Male') {\n              console.log(`${person1FullName} و ${person2FullName} إخوة.`);\n              return `${translatedName1} و ${translatedName2} إخوة`;\n            } else if (gender1 === 'Female' && gender2 === 'Female') {\n              console.log(`${person1FullName} و ${person2FullName} أخوات.`);\n              return `${translatedName1} و ${translatedName2} أخوات`;\n            } else {\n              console.log(`${person1FullName} و ${person2FullName} إخوة.`);\n              return `${translatedName1} و ${translatedName2} إخوة`;\n            }\n          } else if (p1Level === 2 && p2Level === 1) {\n            if (gender1 === 'Male') {\n              console.log(`${translatedName1} هو ابن أخ ${translatedName2}`);\n              return `${translatedName1} هو ابن أخ ${translatedName2}`;\n            } else {\n              console.log(`${person1FullName} هي إبنة أخ ${person2FullName}.`);\n              return `${translatedName1} هي إبن أخ ${translatedName2}`;\n            }\n          } else if (p1Level === 1 && p2Level === 2) {\n            if (gender1 === 'Male') {\n              console.log(`${person1FullName} هو عم ${person2FullName}.`);\n              return `${translatedName1} هو عم ${translatedName2}'`;\n            } else {\n              console.log(`${person1FullName} هي عمّة ${person2FullName}.`);\n              return `${translatedName1} هي عمّة ${translatedName2}`;\n            }\n          } else if (p1Level === 2 && p2Level === 2) {\n            console.log(`${person1FullName} و ${person2FullName} أولاد العم.`);\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\n            const p1AncestorGender = await getGender(p1AncestorFullName);\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\n            const p2AncestorGender = await getGender(p2AncestorFullName);\n            if (gender1 === 'Male') {\n              if (p1AncestorGender === 'Male') {\n                if (p2AncestorGender === 'Male') {\n                  // ولد عمه\n                  console.log(`${person1FullName} هو إبن عم ${person2FullName}.`);\n                  return `${translatedName1} إبن عم ${translatedName2}`;\n                } else {\n                  // ولد عمته\n                  console.log(`${person1FullName} هو إبن عمّة ${person2FullName}.`);\n                  return `${translatedName1} هو إبن عمّة ${translatedName2}`;\n                }\n              } else {\n                if (p2AncestorGender === 'Male') {\n                  // ولد خاله\n                  console.log(`${person1FullName} هو إبن خال ${person2FullName}.`);\n                  return `${translatedName1} هو إبن خال ${translatedName2}'`;\n                } else {\n                  // ولد خالته\n                  console.log(`${person1FullName} هو إبن خالة ${person2FullName}.`);\n                  return `${translatedName1} هو إبن خالة ${translatedName2}`;\n                }\n              }\n            } else {\n              if (p1AncestorGender === 'Male') {\n                if (p2AncestorGender === 'Male') {\n                  // بنت عمه\n                  console.log(`${person1FullName} هي إبنة عمّ ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة عمّ ${translatedName2}`;\n                } else {\n                  // بنت عمته\n                  console.log(`${person1FullName} هي إبنة عمّة ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة عمّة ${translatedName2}`;\n                }\n              } else {\n                if (p2AncestorGender === 'Male') {\n                  // بنت خاله\n                  console.log(`${person1FullName} هي إبنة خال ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة خال ${translatedName2}`;\n                } else {\n                  // بنت خالته\n                  console.log(`${person1FullName} هي إبنة خالة ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة خالة ${translatedName2}`;\n                }\n              }\n            }\n          } else if (p1Level === 2 && p2Level === 3) {\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\n            const p1AncestorGender = await getGender(p1AncestorFullName);\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\n            const p2AncestorGender = await getGender(p2AncestorFullName);\n            if (gender1 === 'Male') {\n              if (p1AncestorGender === 'Male') {\n                // father's side\n                if (p2AncestorGender === 'Male') {\n                  // father's brother's son\n                  console.log(`${person1FullName} هو إبن عم والد ${person2FullName}.`);\n                  return `${translatedName1} هو إبن عم والد ${translatedName2}`;\n                } else {\n                  console.log(`${person1FullName} هو إبن عمة والد ${person2FullName}.`);\n                  return `${translatedName1} هو إبن همة والد ${translatedName2}`;\n                }\n              } else {\n                // mother's side\n                if (p2AncestorGender === 'Male') {\n                  // mother's brother's son\n                  console.log(`${person1FullName} هو إبن عم أم ${person2FullName}.`);\n                  return `${translatedName1} هو إبن عم أم ${translatedName2}.`;\n                } else {\n                  // mother's brother's daughter\n                  console.log(`${person1FullName} هو إبن عمّة أم ${person2FullName}.`);\n                  return `${translatedName1} هو إبن عمّة أم ${translatedName2}`;\n                }\n              }\n            } else {\n              // If person1 is female\n\n              if (p1AncestorGender === 'Male') {\n                // father's side\n                if (p2AncestorGender === 'Male') {\n                  // father's brother's son\n                  console.log(`${person1FullName} هي إبنة عم والد ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة عم والد ${translatedName2}`;\n                } else {\n                  // father's brother's daughter\n                  console.log(`${person1FullName} هي إبنة عمة والد ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة عمة والد ${translatedName2}`;\n                }\n              } else {\n                // mother's side\n                if (p2AncestorGender === 'Male') {\n                  // mother's brother's son\n                  console.log(`${person1FullName} هي إبنة عم والدة ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\n                } else {\n                  // mother's brother's daughter\n                  console.log(`${person1FullName} هي إبنة عمة والدة ${person2FullName}.`);\n                  return `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\n                }\n              }\n            }\n          } else if (p1Level === 3 && p2Level === 2) {\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\n            const p1AncestorGender = await getGender(p1AncestorFullName);\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\n            const p2AncestorGender = await getGender(p2AncestorFullName);\n            if (p1AncestorGender === 'Male') {\n              // father's side\n              if (p2AncestorGender === 'Male') {\n                // father's brother's son\n                console.log(`والد ${person1FullName} هو إبن عم ${person2FullName}`);\n                return `والد ${translatedName1} هو إبن عم ${translatedName2}`;\n              } else {\n                console.log(`والد ${person1FullName} هو إبن خال ${person2FullName}.`);\n                return `والد ${translatedName1} هو إبن خال ${translatedName2}`;\n              }\n            } else {\n              // mother's side\n              if (p2AncestorGender === 'Male') {\n                // mother's brother's son\n                console.log(`والدة ${person1FullName} هي إبنة عم ${person2FullName}.`);\n                return `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\n              } else {\n                // mother's brother's daughter\n                console.log(`والدة ${person1FullName} هي إبنة خال ${person2FullName}.`);\n                return `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\n              }\n            }\n          }\n\n          // Their father are cousins OR Their Grandfathers/grandmothers are siblings.\n          else if (p1Level === 3 && p2Level === 3) {\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\n            const p1AncestorGender = await getGender(p1AncestorFullName);\n            const p1GreatAncestorFullName = getAncestorFullName(person1Ancestors, 2);\n            const p1GreatAncestorGender = await getGender(p1GreatAncestorFullName);\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\n            const p2AncestorGender = await getGender(p2AncestorFullName);\n            const p2GreatAncestorFullName = getAncestorFullName(person2Ancestors, 2);\n            const p2GreatAncestorGender = await getGender(p2GreatAncestorFullName);\n            // Ancestor changes paternal/maternal\n            // Great Ancestor changes grandfather/grandmother\n            if (p1AncestorGender === 'Male') {\n              if (p2AncestorGender === 'Male') {\n                if (p1GreatAncestorGender === 'Male') {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`جدّ ${person1FullName} من الأب و جد ${person2FullName} من الأب إخوة.`);\n                    return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s paternal grandfather and ${person2FullName}'s paternal grandmother are siblings.`);\n                    return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n                  }\n                } else {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s paternal grandfather are siblings.`);\n                    return `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s paternal grandmother are sisters.`);\n                    return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n                  }\n                }\n              } else {\n                if (p1GreatAncestorGender === 'Male') {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s paternal grandfather and ${person2FullName}'s maternal grandfather are brothers.`);\n                    return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s paternal grandfather and ${person2FullName}'s maternal grandmother are siblings.`);\n                    return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n                  }\n                } else {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s maternal grandfather are siblings.`);\n                    return `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s maternal grandmother are sisters.`);\n                    return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n                  }\n                }\n              }\n            } else {\n              if (p2AncestorGender === 'Male') {\n                if (p1GreatAncestorGender === 'Male') {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s paternal grandfather are brothers.`);\n                    return `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s paternal grandmother are siblings.`);\n                    return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n                  }\n                } else {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s paternal grandfather are siblings.`);\n                    return `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s paternal grandmother are sisters.`);\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\n                  }\n                }\n              } else {\n                if (p1GreatAncestorGender === 'Male') {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s maternal grandfather are brothers.`);\n                    return `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s maternal grandmother are siblings.`);\n                    return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n                  }\n                } else {\n                  if (p2GreatAncestorGender === 'Male') {\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s maternal grandfather are siblings.`);\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n                  } else {\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s maternal grandmother are sisters.`);\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    console.log('No direct relation found.');\n    return 'No direct relation found';\n  } catch (error) {\n    console.error('Error in relationship lookup:', error);\n    return 'Error in relationship lookup';\n  }\n};\nconst getGender = async fullName => {\n  const session = driver.session(); // Open a session\n\n  try {\n    // Split the full name into first and last name\n    const [firstName, lastName] = fullName.split(\" \");\n\n    // Run the query using both first name and last name\n    const result = await session.run(`MATCH (p:Person) WHERE toLower(p.name) = toLower($firstName) AND toLower(p.lastName) = toLower($lastName) RETURN p.gender AS gender`, {\n      firstName,\n      lastName\n    });\n    if (result.records.length > 0) {\n      const gender = result.records[0].get('gender');\n      // console.log(`Gender of ${fullName}: ${gender}`);\n      return gender; // Return the gender value\n    } else {\n      console.log(`No person found with the name ${fullName}`);\n      return null; // Return null when no person is found\n    }\n  } catch (error) {\n    console.error('Error retrieving gender:', error);\n    return null; // Return null in case of an error\n  } finally {\n    await session.close(); // Always close the session after the query\n  }\n};\nconst getAncestorFullName = (personAncestors, level) => {\n  // Check if the ancestor exists at the given level\n  if (!personAncestors[level - 1] || !personAncestors[level - 1].properties) {\n    return `Unknown (Level: ${level})`;\n  }\n  const ancestor = personAncestors[level - 1].properties;\n  const name = ancestor.name || \"Unknown\"; // Default to \"Unknown\" if name is missing\n  const lastName = ancestor.lastName || \"Unknown\"; // Default to \"Unknown\" if lastName is missing\n\n  return `${name} ${lastName}`;\n};\nexport const translateName = (fullName, language = true) => {\n  const nameParts = fullName.split(' ');\n\n  // Build reverse translation map if needed\n  const reverseTranslations = Object.fromEntries(Object.entries(translations).map(([key, value]) => [value, key]));\n  const dict = language ? translations : reverseTranslations;\n  const translatedParts = nameParts.map(part => dict[part] || part);\n  return translatedParts.join(' ');\n};\nconst RelationPage = () => {\n  _s();\n  const [person1, setPerson1] = useState('');\n  const [person2, setPerson2] = useState('');\n  const [relationship, setRelationship] = useState('');\n  const fetchRelationship = async (name1, name2) => {\n    const relationshipResult = await getRelationship(name1, name2);\n    console.log(relationshipResult);\n    return relationshipResult;\n  };\n  const FetchRelationship = async e => {\n    e.preventDefault();\n    const translatedName1 = translateName(person1);\n    const translatedName2 = translateName(person2);\n    const result = await fetchRelationship(person1, person2);\n    setRelationship(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0645\\u0627\\u0647\\u064A \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\\u061F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: FetchRelationship,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name1\",\n        type: \"text\",\n        placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u0623\\u0648\\u0644\",\n        value: person1,\n        onChange: e => setPerson1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name2\",\n        type: \"text\",\n        placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u062B\\u0627\\u0646\\u064A\",\n        value: person2,\n        onChange: e => setPerson2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"relationHolder\",\n      children: relationship\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n};\n_s(RelationPage, \"ZmRqID8YiZUdpMqUYaZJShqvLKk=\");\n_c = RelationPage;\nexport default RelationPage;\nvar _c;\n$RefreshReg$(_c, \"RelationPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","neo4j","require","translations","driver","auth","basic","getRelationship","person1FullNameAR","person2FullNameAR","person1FullName","translateName","person2FullName","session","gender1","getGender","gender2","person1Name","person1LastName","trim","split","person2Name","person2LastName","console","log","getAncestors","personName","personLastName","result","run","records","map","record","id","get","toNumber","name","lastName","level","maxLevels","person1Ancestors","person2Ancestors","a","join","person1Ids","person2Ids","sharedAncestors","filter","includes","length","translatedName1","translatedName2","i","j","p1Level","p2Level","p1AncestorFullName","getAncestorFullName","p1AncestorGender","p2AncestorFullName","p2AncestorGender","p1GreatAncestorFullName","p1GreatAncestorGender","p2GreatAncestorFullName","p2GreatAncestorGender","error","fullName","firstName","gender","close","personAncestors","properties","ancestor","language","nameParts","reverseTranslations","Object","fromEntries","entries","key","value","dict","translatedParts","part","RelationPage","_s","person1","setPerson1","person2","setPerson2","relationship","setRelationship","fetchRelationship","name1","name2","relationshipResult","FetchRelationship","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/RelationChecker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './RelationChecker.css';\r\nconst neo4j = require('neo4j-driver');\r\nconst translations = require('./translation.json');\r\n\r\n\r\nconst driver = neo4j.driver(\r\n  'neo4j+s://2cd0ce39.databases.neo4j.io',\r\n  neo4j.auth.basic('neo4j', 'nW1azrzTK-lrTOO5G1uOkUVFwelcQlEmKPHggPUB7xQ'));\r\n\r\n\r\nconst getRelationship = async (person1FullNameAR, person2FullNameAR) => {\r\n  const person1FullName = translateName(person1FullNameAR, false);\r\n  const person2FullName = translateName(person2FullNameAR, false);\r\n\r\n  const session = driver.session();\r\n\r\n  const gender1 = await getGender(person1FullName);\r\n  const gender2 = await getGender(person2FullName);\r\n  try {\r\n    const [person1Name, person1LastName] = person1FullName.trim().split(' ');\r\n    const [person2Name, person2LastName] = person2FullName.trim().split(' ');\r\n\r\n    console.log(`Looking up relationship between: ${person1FullName} and ${person2FullName}`);\r\n\r\n    // Function to get the parents/ancestors of a person\r\n    const getAncestors = async (personName, personLastName) => {\r\n      const result = await session.run(`\r\n        MATCH path = (ancestor:Person)-[:FATHER_OF|MOTHER_OF*]->(child:Person {name: $personName, lastName: $personLastName})\r\n        WITH ancestor, id(ancestor) AS ID, length(path) AS level\r\n        RETURN DISTINCT ID, ancestor.name AS name, ancestor.lastName AS lastName, level\r\n        ORDER BY level ASC\r\n      `, {\r\n        personName,\r\n        personLastName,\r\n      });\r\n    \r\n      return result.records.map(record => ({\r\n        id: record.get('ID').toNumber(),\r\n        name: record.get('name'),\r\n        lastName: record.get('lastName'),\r\n        level: record.get('level').toNumber()\r\n      }));\r\n    };\r\n\r\n    // Get the ancestors for both persons\r\n    const maxLevels = 4; // Adjust the maximum levels to go up the tree\r\n    let person1Ancestors = await getAncestors(person1Name, person1LastName, maxLevels);\r\n    let person2Ancestors = await getAncestors(person2Name, person2LastName, maxLevels);\r\n    \r\n    console.log(`Person 1 Ancestors: ${person1Ancestors.map(a => a.name).join(' ben ')}`);\r\n    console.log(`Person 2 Ancestors: ${person2Ancestors.map(a => a.name).join(' ben ')}`);\r\n\r\n    const person1Ids = person1Ancestors.map(a => a.id);\r\n    const person2Ids = person2Ancestors.map(a => a.id);\r\n\r\n    const sharedAncestors = person1Ancestors.filter(a => person2Ids.includes(a.id));\r\n\r\n    if (sharedAncestors.length > 0) {\r\n      console.log(\"They share ancestor(s):\", sharedAncestors.map(a => a.name).join(', '));\r\n    } else {\r\n      console.log(\"They do not share any ancestor node.\");\r\n    }\r\n    const translatedName1 = translateName(person1FullName);\r\n    const translatedName2 = translateName(person2FullName);\r\n\r\n    // Check for common ancestors between the two persons\r\n    for (let i = 0; i < person1Ancestors.length; i++) {\r\n      for (let j = 0; j < person2Ancestors.length; j++) {\r\n        if (person1Ancestors[i].id === person2Ancestors[j].id) {\r\n          var p1Level = person1Ancestors[i].level-1;\r\n          var p2Level = person2Ancestors[j].level-1;\r\n          \r\n          console.log(`Level: (${p1Level}, ${p2Level})`);\r\n\r\n          if (p1Level === 0 && p2Level === 1) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${translatedName1} هو والد ${translatedName2}`);\r\n              return `${translatedName1} هو والد ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${translatedName1} هي والدة ${translatedName2}`);\r\n              return `${translatedName1} هي والدة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 1 && p2Level === 0) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${translatedName1} هو ابن ${translatedName2}`);\r\n              return `${translatedName1} هو ابن ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${translatedName1} هي إبنة ${person2FullName}`);\r\n              return `${translatedName1} هي إبنة ${translatedName2}`;\r\n            }\r\n          } \r\n\r\n          else if (p1Level === 2 && p2Level === 0) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${person1FullName} هو حفيد ${person2FullName}`);\r\n              return `${translatedName1} هو حفيد ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName} هي حفيدة ${person2FullName}.`);\r\n              return `${translatedName1} هي حفيدة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 0 && p2Level === 2) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${person1FullName} هو جدّ ${person2FullName}'.`);\r\n              return `${translatedName1} هو جدّ ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName} هي جدّة ${person2FullName}.`);\r\n              return `${translatedName1} هي جدّة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 3 && p2Level === 0) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${person1FullName} هو إبن حفيد ${person2FullName}.`);\r\n              return `${translatedName1} هو إبن حفيد ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName} هي إبنة حفيدة ${person2FullName}.`);\r\n              return `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 0 && p2Level === 3) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${person1FullName} هو جد والد ${person2FullName}`);\r\n              return `${translatedName1} و جد والد ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName}هي جدة والدة ${person2FullName}`);\r\n              return `${translatedName1} هي جدة والدة ${translatedName2}`;\r\n            }\r\n          } \r\n          \r\n          else if (p1Level === 1 && p2Level === 1) {\r\n            if (gender1 === 'Male' && gender2 === 'Male'){\r\n              console.log(`${person1FullName} و ${person2FullName} إخوة.`);\r\n              return `${translatedName1} و ${translatedName2} إخوة`;\r\n            }\r\n            else if (gender1 === 'Female' && gender2 === 'Female'){\r\n              console.log(`${person1FullName} و ${person2FullName} أخوات.`);\r\n              return `${translatedName1} و ${translatedName2} أخوات`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName} و ${person2FullName} إخوة.`);\r\n              return `${translatedName1} و ${translatedName2} إخوة`;\r\n            }\r\n          } \r\n          \r\n          else if (p1Level === 2 && p2Level === 1) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${translatedName1} هو ابن أخ ${translatedName2}`);\r\n              return `${translatedName1} هو ابن أخ ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName} هي إبنة أخ ${person2FullName}.`);\r\n              return `${translatedName1} هي إبن أخ ${translatedName2}`;\r\n            }\r\n          } \r\n          \r\n          else if (p1Level === 1 && p2Level === 2) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${person1FullName} هو عم ${person2FullName}.`);\r\n              return `${translatedName1} هو عم ${translatedName2}'`;\r\n            }\r\n            else{\r\n              console.log(`${person1FullName} هي عمّة ${person2FullName}.`);\r\n              return `${translatedName1} هي عمّة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 2 && p2Level === 2) {\r\n            console.log(`${person1FullName} و ${person2FullName} أولاد العم.`);\r\n          \r\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\r\n            const p1AncestorGender = await getGender(p1AncestorFullName);\r\n\r\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\r\n            const p2AncestorGender = await getGender(p2AncestorFullName);\r\n\r\n            if (gender1 === 'Male') { \r\n              if (p1AncestorGender === 'Male') { \r\n                if (p2AncestorGender === 'Male'){  // ولد عمه\r\n                  console.log(`${person1FullName} هو إبن عم ${person2FullName}.`);\r\n                  return `${translatedName1} إبن عم ${translatedName2}`;\r\n                }\r\n                else{ // ولد عمته\r\n                  console.log(`${person1FullName} هو إبن عمّة ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن عمّة ${translatedName2}`;\r\n                }\r\n              } \r\n              else {  \r\n                if (p2AncestorGender === 'Male'){  // ولد خاله\r\n                  console.log(`${person1FullName} هو إبن خال ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن خال ${translatedName2}'`;\r\n                }\r\n                else{ // ولد خالته\r\n                  console.log(`${person1FullName} هو إبن خالة ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن خالة ${translatedName2}`;\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (p1AncestorGender === 'Male') { \r\n                if (p2AncestorGender === 'Male'){  // بنت عمه\r\n                  console.log(`${person1FullName} هي إبنة عمّ ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة عمّ ${translatedName2}`;\r\n                }\r\n                else{ // بنت عمته\r\n                  console.log(`${person1FullName} هي إبنة عمّة ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة عمّة ${translatedName2}`;\r\n                }\r\n              } \r\n              else {  \r\n                if (p2AncestorGender === 'Male'){  // بنت خاله\r\n                  console.log(`${person1FullName} هي إبنة خال ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة خال ${translatedName2}`;\r\n                }\r\n                else{ // بنت خالته\r\n                  console.log(`${person1FullName} هي إبنة خالة ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة خالة ${translatedName2}`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 2 && p2Level === 3) {          \r\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\r\n            const p1AncestorGender = await getGender(p1AncestorFullName);\r\n\r\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\r\n            const p2AncestorGender = await getGender(p2AncestorFullName);\r\n\r\n            if (gender1 === 'Male') { \r\n              \r\n              if (p1AncestorGender === 'Male') {  // father's side\r\n                if (p2AncestorGender === 'Male') {  // father's brother's son\r\n                  console.log(`${person1FullName} هو إبن عم والد ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن عم والد ${translatedName2}`;\r\n                } else { \r\n                  console.log(`${person1FullName} هو إبن عمة والد ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن همة والد ${translatedName2}`;\r\n                }\r\n              } else {  // mother's side\r\n                if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n                  console.log(`${person1FullName} هو إبن عم أم ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن عم أم ${translatedName2}.`;\r\n                } else {  // mother's brother's daughter\r\n                  console.log(`${person1FullName} هو إبن عمّة أم ${person2FullName}.`);\r\n                  return `${translatedName1} هو إبن عمّة أم ${translatedName2}`;\r\n                }\r\n              }\r\n            } else {  // If person1 is female\r\n            \r\n              if (p1AncestorGender === 'Male') {  // father's side\r\n                if (p2AncestorGender === 'Male') {  // father's brother's son\r\n                  console.log(`${person1FullName} هي إبنة عم والد ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة عم والد ${translatedName2}`;\r\n                } else {  // father's brother's daughter\r\n                  console.log(`${person1FullName} هي إبنة عمة والد ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة عمة والد ${translatedName2}`;\r\n                }\r\n              } else {  // mother's side\r\n                if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n                  console.log(`${person1FullName} هي إبنة عم والدة ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\r\n                } else {  // mother's brother's daughter\r\n                  console.log(`${person1FullName} هي إبنة عمة والدة ${person2FullName}.`);\r\n                  return `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n          \r\n          else if (p1Level === 3 && p2Level === 2) {          \r\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\r\n            const p1AncestorGender = await getGender(p1AncestorFullName);\r\n\r\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\r\n            const p2AncestorGender = await getGender(p2AncestorFullName);\r\n\r\n            if (p1AncestorGender === 'Male') {  // father's side\r\n              if (p2AncestorGender === 'Male') {  // father's brother's son\r\n                console.log(`والد ${person1FullName} هو إبن عم ${person2FullName}`);\r\n                return `والد ${translatedName1} هو إبن عم ${translatedName2}`;\r\n              } else { \r\n                console.log(`والد ${person1FullName} هو إبن خال ${person2FullName}.`);\r\n                return `والد ${translatedName1} هو إبن خال ${translatedName2}`;\r\n              }\r\n            } \r\n            else {  // mother's side\r\n              if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n                console.log(`والدة ${person1FullName} هي إبنة عم ${person2FullName}.`);\r\n                return `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\r\n              } else {  // mother's brother's daughter\r\n                console.log(`والدة ${person1FullName} هي إبنة خال ${person2FullName}.`);\r\n                return `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\r\n              }\r\n            }\r\n            \r\n            \r\n          }\r\n\r\n          // Their father are cousins OR Their Grandfathers/grandmothers are siblings.\r\n          else if (p1Level === 3 && p2Level === 3) {          \r\n            \r\n            const p1AncestorFullName = getAncestorFullName(person1Ancestors, 1);\r\n            const p1AncestorGender = await getGender(p1AncestorFullName);\r\n\r\n            const p1GreatAncestorFullName = getAncestorFullName(person1Ancestors, 2);\r\n            const p1GreatAncestorGender = await getGender(p1GreatAncestorFullName);\r\n\r\n            const p2AncestorFullName = getAncestorFullName(person2Ancestors, 1);\r\n            const p2AncestorGender = await getGender(p2AncestorFullName);\r\n\r\n            const p2GreatAncestorFullName = getAncestorFullName(person2Ancestors, 2);\r\n            const p2GreatAncestorGender = await getGender(p2GreatAncestorFullName);\r\n            // Ancestor changes paternal/maternal\r\n            // Great Ancestor changes grandfather/grandmother\r\n            if (p1AncestorGender === 'Male') { \r\n              if (p2AncestorGender === 'Male'){\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`جدّ ${person1FullName} من الأب و جد ${person2FullName} من الأب إخوة.`);\r\n                    return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s paternal grandfather and ${person2FullName}'s paternal grandmother are siblings.`);\r\n                    return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s paternal grandfather are siblings.`);\r\n                    return `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s paternal grandmother are sisters.`);\r\n                    return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s paternal grandfather and ${person2FullName}'s maternal grandfather are brothers.`);\r\n                    return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s paternal grandfather and ${person2FullName}'s maternal grandmother are siblings.`);\r\n                    return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s maternal grandfather are siblings.`);\r\n                    return `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s paternal grandmother and ${person2FullName}'s maternal grandmother are sisters.`);\r\n                    return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (p2AncestorGender === 'Male'){\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s paternal grandfather are brothers.`);\r\n                    return `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s paternal grandmother are siblings.`);\r\n                    return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s paternal grandfather are siblings.`);\r\n                    return `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s paternal grandmother are sisters.`);\r\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s maternal grandfather are brothers.`);\r\n                    return `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s maternal grandfather and ${person2FullName}'s maternal grandmother are siblings.`);\r\n                    return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s maternal grandfather are siblings.`);\r\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    console.log(`${person1FullName}'s maternal grandmother and ${person2FullName}'s maternal grandmother are sisters.`);\r\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n\r\n\r\n        }\r\n      }\r\n    }\r\n    console.log('No direct relation found.');\r\n    return 'No direct relation found';\r\n  } catch (error) {\r\n    console.error('Error in relationship lookup:', error);\r\n    return 'Error in relationship lookup';\r\n  }\r\n};\r\n\r\nconst getGender = async (fullName) => {\r\n  const session = driver.session(); // Open a session\r\n\r\n  try {\r\n    // Split the full name into first and last name\r\n    const [firstName, lastName] = fullName.split(\" \");\r\n\r\n    // Run the query using both first name and last name\r\n    const result = await session.run(\r\n      `MATCH (p:Person) WHERE toLower(p.name) = toLower($firstName) AND toLower(p.lastName) = toLower($lastName) RETURN p.gender AS gender`,\r\n      { firstName, lastName }\r\n    );\r\n    \r\n    if (result.records.length > 0) {\r\n      const gender = result.records[0].get('gender');\r\n      // console.log(`Gender of ${fullName}: ${gender}`);\r\n      return gender; // Return the gender value\r\n    } else {\r\n      console.log(`No person found with the name ${fullName}`);\r\n      return null; // Return null when no person is found\r\n    }\r\n  } catch (error) {\r\n    console.error('Error retrieving gender:', error);\r\n    return null; // Return null in case of an error\r\n  } finally {\r\n    await session.close(); // Always close the session after the query\r\n  }\r\n};\r\n\r\nconst getAncestorFullName = (personAncestors, level) => {\r\n  // Check if the ancestor exists at the given level\r\n  if (!personAncestors[level - 1] || !personAncestors[level - 1].properties) {\r\n    return `Unknown (Level: ${level})`;\r\n  }\r\n\r\n  const ancestor = personAncestors[level - 1].properties;\r\n  const name = ancestor.name || \"Unknown\"; // Default to \"Unknown\" if name is missing\r\n  const lastName = ancestor.lastName || \"Unknown\"; // Default to \"Unknown\" if lastName is missing\r\n\r\n  return `${name} ${lastName}`;\r\n};\r\n\r\nexport const translateName = (fullName, language = true) => {\r\n  const nameParts = fullName.split(' ');\r\n\r\n  // Build reverse translation map if needed\r\n  const reverseTranslations = Object.fromEntries(\r\n    Object.entries(translations).map(([key, value]) => [value, key])\r\n  );\r\n\r\n  const dict = language ? translations : reverseTranslations;\r\n\r\n  const translatedParts = nameParts.map(part => dict[part] || part);\r\n\r\n  return translatedParts.join(' ');\r\n};\r\n\r\n\r\nconst RelationPage = () => {\r\n  const [person1, setPerson1] = useState('');\r\n  const [person2, setPerson2] = useState('');\r\n  const [relationship, setRelationship] = useState('');\r\n\r\n  const fetchRelationship = async (name1, name2) => {\r\n    \r\n    const relationshipResult = await getRelationship(name1, name2);\r\n    console.log(relationshipResult);\r\n    return relationshipResult;\r\n  };\r\n\r\n  const FetchRelationship = async (e) => {\r\n    e.preventDefault();\r\n    const translatedName1 = translateName(person1);\r\n    const translatedName2 = translateName(person2);\r\n\r\n    const result = await fetchRelationship(person1, person2);\r\n    setRelationship(result);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relation-page\">\r\n      <h2>ماهي العلاقة بينهما؟</h2>\r\n      <form onSubmit={FetchRelationship}>\r\n        <input\r\n          id=\"name1\"\r\n          type=\"text\"\r\n          placeholder=\"الإسم الكامل الأول\"\r\n          value={person1}\r\n          onChange={(e) => setPerson1(e.target.value)}\r\n        />\r\n        <input\r\n          id=\"name2\"\r\n          type=\"text\"\r\n          placeholder=\"الإسم الكامل الثاني\"\r\n          value={person2}\r\n          onChange={(e) => setPerson2(e.target.value)}\r\n        />\r\n        <button type=\"submit\">تحقق من العلاقة</button><br></br>\r\n      </form>\r\n      <p id=\"relationHolder\">{relationship}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}