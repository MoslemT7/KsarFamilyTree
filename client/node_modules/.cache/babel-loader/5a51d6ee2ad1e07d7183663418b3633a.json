{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\RelationChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './RelationChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nrequire('dotenv').config();\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nconst driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\nconst session = driver.session();\nfunction countBenAndBent(str) {\n  const matches = str.match(/\\b(ben|bent)\\b/gi);\n  return matches ? matches.length : 0;\n}\n\n// Function that split english translated name that may contain ben to full name only parts.\nfunction splitName(fullName) {\n  const parts = fullName.replace(/\\s+(ben|bent)\\s+/gi, ' ').trim().split(/\\s+/);\n  const bentCount = countBenAndBent(fullName);\n  if (parts.length === 2) {\n    if (bentCount === 0) {\n      return {\n        personName: parts[0],\n        fatherName: \"\",\n        grandfatherName: \"\",\n        familyName: parts[1]\n      };\n    } else if (bentCount === 1) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: \"\",\n        familyName: \"\"\n      };\n    }\n  } else if (parts.length === 3) {\n    if (bentCount === 1) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: \"\",\n        familyName: parts[2]\n      };\n    } else if (bentCount === 2) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: parts[2],\n        familyName: \"\"\n      };\n    }\n  } else if (parts.length === 4) {\n    return {\n      personName: parts[0],\n      fatherName: parts[1],\n      grandfatherName: parts[2],\n      familyName: parts[3]\n    };\n  }\n  // Default case if structure doesn't match\n  return {\n    personName: parts[0],\n    fatherName: \"\",\n    grandfatherName: \"\",\n    familyName: parts[1]\n  };\n}\nexport const translateName = (fullName, language = true) => {\n  const nameParts = fullName.split(' ');\n\n  // Build reverse translation map if needed\n  const reverseTranslations = Object.fromEntries(Object.entries(translations).map(([key, value]) => [value, key]));\n  const dict = language ? translations : reverseTranslations;\n  const translatedParts = nameParts.map(part => dict[part] || part);\n  return translatedParts.join(' ');\n};\nconst RelationPage = () => {\n  _s();\n  const [person1, setPerson1] = useState('');\n  const [person2, setPerson2] = useState('');\n  const [relationship, setRelationship] = useState('');\n  const [duplicates, setDuplicates] = useState({\n    person1: [],\n    person2: []\n  });\n  const [error, setError] = useState(null);\n  const fetchRelationship = async e => {\n    e.preventDefault();\n    try {\n      const result = await getRelationship(person1, person2);\n      if (result.error === 'non-unique-name') {\n        setDuplicates(result.duplicates);\n        setRelationship(result.message);\n      } else {\n        setDuplicates({\n          person1: [],\n          person2: []\n        });\n        setRelationship({\n          relationshipDescription: result.relation,\n          relationshipScore: result.score,\n          relationshipGenerationGap: result.generation,\n          relationshipExplanationType: result.explanation.type,\n          relationshipExplanationDesc: result.explanation.explanation,\n          commonAncestor: result.AncID\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching relationship:', error);\n      setRelationship({\n        relationshipDescription: 'An error occurred',\n        relationshipScore: null\n      });\n    }\n  };\n  const getPersonMatches = async (personName, fatherName = \"\", grandfatherName = \"\", familyName) => {\n    let cypherQuery = ``;\n    const queryParamsObject = {};\n    if (personName) {\n      if (fatherName) {\n        if (grandfatherName) {\n          if (familyName) {\n            cypherQuery += `\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\n              WHERE child.name = $personName AND \n                    father.name = $fatherName AND \n                    grandfather.name = $grandfatherName AND \n                    child.lastName = $familyName\n              RETURN \n                id(child) AS childID,\n                child.name AS childName, \n                father.name AS fatherName, \n                grandfather.name AS grandfatherName, \n                child.lastName AS familyName  \n            `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n            queryParamsObject.grandfatherName = grandfatherName;\n            queryParamsObject.familyName = familyName;\n          } else {\n            cypherQuery += `\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\n              WHERE child.name = $personName AND \n                    father.name = $fatherName AND \n                    grandfather.name = $grandfatherName\n              RETURN \n                    id(child) AS childID, \n                    child.name AS childName, \n                    father.name AS fatherName, \n                    grandfather.name AS grandfatherName,\n                    child.lastName AS familyName       \n              `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n            queryParamsObject.grandfatherName = grandfatherName;\n          }\n        } else {\n          if (familyName) {\n            cypherQuery += `\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\n            WHERE child.name = $personName AND \n                  father.name = $fatherName AND\n                  child.lastName = $familyName\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n            RETURN  \n              id(child) AS childID,\n              child.name AS childName, \n              father.name AS fatherName,\n              grandfather.name AS grandfatherName,\n              child.lastName AS familyName\n            `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n            queryParamsObject.familyName = familyName;\n          } else {\n            cypherQuery += `\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\n            \n            WHERE child.name = $personName AND \n                  father.name = $fatherName\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n            RETURN  id(child) AS childID, \n                    child.name AS childName, \n                    father.name AS fatherName, \n                    grandfather.name AS grandfatherName,\n                    child.lastName AS familyName\n            `;\n            queryParamsObject.personName = personName;\n            queryParamsObject.fatherName = fatherName;\n          }\n        }\n      } else {\n        if (familyName) {\n          cypherQuery += `\n          MATCH (child:Person)\n          WHERE child.name = $personName AND child.lastName = $familyName\n          OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n          RETURN \n            id(child) AS childID,\n            child.name AS childName, \n            father.name AS fatherName,\n            grandfather.name AS grandfatherName,\n            child.lastName AS familyName\n        `;\n          queryParamsObject.personName = personName;\n          queryParamsObject.familyName = familyName;\n        } else {\n          cypherQuery += `\n            MATCH (child:Person)\n            WHERE child.name = $personName\n            OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n            RETURN\n              id(child) AS childID,\n              child.name AS childName, \n              father.name AS fatherName, \n              grandfather.name AS grandfatherName,\n              child.lastName AS familyName\n          `;\n          queryParamsObject.personName = personName;\n        }\n      }\n    }\n    const session = driver.session();\n    try {\n      const result = await session.run(cypherQuery, queryParamsObject);\n      return result.records.map(record => ({\n        id: record.get('childID').toNumber(),\n        name: record.get('childName'),\n        father: record.get('fatherName') || \"\",\n        grandfather: record.get('grandfatherName') || \"\",\n        lastName: record.get('familyName')\n      }));\n    } catch (Error) {\n      console.error('Query Error:', Error);\n      setError('حدث خطأ أثناء البحث.');\n    } finally {\n      await session.close();\n    }\n  };\n  const getRelationship = async (person1FullName, person2FullName) => {\n    const isArabic = text => /[\\u0600-\\u06FF]/.test(text);\n    let translatedName1, translatedName2;\n    if (isArabic(person1FullName)) {\n      translatedName1 = translateName(person1FullName, false);\n    } else {\n      translatedName1 = person1FullName;\n    }\n    if (isArabic(person2FullName)) {\n      translatedName2 = translateName(person2FullName, false);\n    } else {\n      translatedName2 = person2FullName;\n    }\n    const {\n      personName: person1Name,\n      fatherName: person1FatherName,\n      grandfatherName: person1GrandfatherName,\n      familyName: person1LastName\n    } = splitName(translatedName1);\n    const {\n      personName: person2Name,\n      fatherName: person2FatherName,\n      grandfatherName: person2GrandfatherName,\n      familyName: person2LastName\n    } = splitName(translatedName2);\n    const errorContainer = document.getElementById('error-container');\n    try {\n      const person1Matches = await getPersonMatches(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\n      if (person1Matches.length === 0) {\n        throw new Error(`لا يوجد أشخاص بإسم ${person1FullName} الرجاء التثبت في الإسم جيدا`);\n      }\n      const person2Matches = await getPersonMatches(person2Name, person2FatherName, person2GrandfatherName, person2LastName);\n      if (person2Matches.length === 0) {\n        throw new Error(`لا يوجد أشخاص بإسم ${person2FullName} الرجاء التثبت في الإسم جيدا`);\n      }\n      console.log(\"P1 matches : \", person1Matches);\n      console.log(\"P2 matches : \", person2Matches);\n      let person1ID, person2ID;\n      if (person1Matches.length > 1 || person2Matches.length > 1) {\n        return {\n          error: 'non-unique-name',\n          message: 'تم العثور على عدة أشخاص بنفس الاسم. الرجاء اختيار الصحيح.',\n          duplicates: {\n            person1: person1Matches.length > 1 ? person1Matches : [],\n            person2: person2Matches.length > 1 ? person2Matches : []\n          }\n        };\n      } else {\n        person1ID = person1Matches[0].id;\n        person2ID = person2Matches[0].id;\n      }\n      // Function that return the ancestors of a given person starting with the person itself and going up to the root.\n      const getAncestors = async (person1ID, person2ID) => {\n        const result = await session.run(`\n          MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..4]->(p1:Person)\n          WHERE id(p1) = $person1ID\n      \n          MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..4]->(p2:Person)\n          WHERE id(p2) = $person2ID\n            AND id(p1) <> id(p2)\n      \n          WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\n          ORDER BY (level1 + level2) ASC\n          LIMIT 1\n      \n          RETURN \n            common.name AS commonAncestorName,\n            common.lastName AS commonAncestorLastName,\n            id(common) AS commonAncestorID,\n            common.gender AS commonAncestorGender,\n            level1 AS generationsFromP1,\n            level2 AS generationsFromP2,\n            [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\n            [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\n        `, {\n          person1ID,\n          person2ID\n        });\n        const record = result.records[0];\n        return {\n          id: record.get('commonAncestorID').toNumber(),\n          name: record.get('commonAncestorName'),\n          lastName: record.get('commonAncestorLastName'),\n          gender: record.get('commonAncestorGender'),\n          levelFromP1: record.get('generationsFromP1').toNumber(),\n          levelFromP2: record.get('generationsFromP2').toNumber(),\n          pathFromAncestorToP1: record.get('pathToP1'),\n          pathFromAncestorToP2: record.get('pathToP2')\n        };\n      };\n      let relationRecord = await getAncestors(person1ID, person2ID);\n      const ancestorID = relationRecord.id;\n      const ancestorName = relationRecord.name;\n      const ancestorLastName = relationRecord.lastName;\n      const ancestorGender = relationRecord.gender;\n      let levelFromP1, levelFromP2, pathFromAncestorToP1, pathFromAncestorToP2;\n      const ancestor = {\n        ancestorID,\n        ancestorName,\n        ancestorLastName,\n        ancestorGender\n      };\n      console.log(ancestor);\n      ({\n        levelFromP1,\n        levelFromP2,\n        pathFromAncestorToP1,\n        pathFromAncestorToP2\n      } = relationRecord);\n      const pathToP1 = pathFromAncestorToP1;\n      const pathToP2 = pathFromAncestorToP2;\n      console.log(pathFromAncestorToP1.reverse().map(a => a.name).join(\" ben \"));\n      console.log(pathFromAncestorToP2.reverse().map(a => a.name).join(\" ben \"));\n      var p1Level = levelFromP1;\n      var p2Level = levelFromP2;\n      const translatedName1 = translateName(person1FullName);\n      const translatedName2 = translateName(person2FullName);\n      const gender1 = pathToP1[0].gender;\n      const gender2 = pathToP2[0].gender;\n      let relation = '',\n        score = 0;\n      let relationshipExplanation = [{\n        type: \"العائلة\",\n        explanation: \"هؤلاء الشخصين مرتبطين من خلال العائلة ذو الدرجة الأولى.\"\n      }, {\n        type: \"العائلة المقربة\",\n        explanation: \"هؤلاء الشخصين مرتبطين من خلال أعمام وأخوال مشتركين.\"\n      }, {\n        type: \"العائلة الموسعة\",\n        explanation: \"هؤلاء الشخصين مرتبطين من خلال أعمام أو أخوال الأب وأحفادهم.\"\n      }, {\n        type: \"قرابة الزواج\",\n        explanation: \"هذان الشخصان مرتبطان من خلال الزواج.\"\n      }, {\n        type: \"صهر / نسيب\",\n        explanation: \"هذان الشخصان مرتبطان عبر الزواج وليس النسب الدموي.\"\n      }, {\n        type: \"لا توجد علاقة\",\n        explanation: \"لم يتم العثور على أي صلة قرابة بين الشخصين في قاعدة البيانات.\"\n      }, {\n        type: \"نفس الشخص\",\n        explanation: \"الاسمين يشيران إلى نفس الشخص.\"\n      }];\n      console.log(`Level: (${p1Level}, ${p2Level})`);\n      if (p1Level === 0 && p2Level === 1) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو والد ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي والدة ${translatedName2}`;\n        }\n        score = 100;\n      } else if (p1Level === 1 && p2Level === 0) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو ابن ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي إبنة ${translatedName2}`;\n        }\n        score = 100;\n      } else if (p1Level === 2 && p2Level === 0) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو حفيد ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي حفيدة ${translatedName2}`;\n        }\n        score = 90;\n      } else if (p1Level === 0 && p2Level === 2) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو جدّ ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي جدّة ${translatedName2}`;\n        }\n        score = 90;\n      } else if (p1Level === 3 && p2Level === 0) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو إبن حفيد ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\n        }\n        score = 75;\n      } else if (p1Level === 0 && p2Level === 3) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} و جد والد ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي جدة والدة ${translatedName2}`;\n        }\n        score = 89;\n      } else if (p1Level === 1 && p2Level === 1) {\n        if (gender1 === 'Male' && gender2 === 'Male') {\n          relation = `${translatedName1} و ${translatedName2} إخوة`;\n        } else if (gender1 === 'Female' && gender2 === 'Female') {\n          relation = `${translatedName1} و ${translatedName2} أخوات`;\n        } else {\n          relation = `${translatedName1} و ${translatedName2} إخوة`;\n        }\n        score = 98;\n      } else if (p1Level === 2 && p2Level === 1) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو ابن أخ ${translatedName2}`;\n        } else {\n          relation = `${translatedName1} هي إبن أخ ${translatedName2}`;\n        }\n        score = 94;\n      } else if (p1Level === 1 && p2Level === 2) {\n        if (gender1 === 'Male') {\n          relation = `${translatedName1} هو عم ${translatedName2}'`;\n          score = 95;\n        } else {\n          relation = `${translatedName1} هي عمّة ${translatedName2}`;\n          score = 93;\n        }\n      } else if (p1Level === 2 && p2Level === 2) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        if (gender1 === 'Male') {\n          if (p2AncestorGender === 'Male') {\n            if (p1AncestorGender === 'Male') {\n              // ولد عمه\n              relation = `${translatedName1} إبن عم ${translatedName2}`;\n              score = 90;\n            } else {\n              relation = `${translatedName1} هو إبن عمّة ${translatedName2}`;\n              score = 89;\n            }\n          } else {\n            if (p1AncestorGender === 'Male') {\n              // ولد خاله\n              relation = `${translatedName1} هو إبن خال ${translatedName2}`;\n              score = 88;\n            } else {\n              relation = `${translatedName1} هو إبن خالة ${translatedName2}`;\n              score = 86;\n            }\n          }\n        } else {\n          if (p1AncestorGender === 'Male') {\n            if (p2AncestorGender === 'Male') {\n              // بنت عمه\n              relation = `${translatedName1} هي إبنة عمّ ${translatedName2}`;\n              score = 90;\n            } else {\n              relation = `${translatedName1} هي إبنة عمّة ${translatedName2}`;\n              score = 89;\n            }\n          } else {\n            if (p2AncestorGender === 'Male') {\n              // بنت خاله\n              relation = `${translatedName1} هي إبنة خال ${translatedName2}`;\n              score = 88;\n            } else {\n              relation = `${translatedName1} هي إبنة خالة ${translatedName2}`;\n              score = 86;\n            }\n          }\n        }\n      } else if (p1Level === 2 && p2Level === 3) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        if (gender1 === 'Male') {\n          if (p1AncestorGender === 'Male') {\n            if (p2AncestorGender === 'Male') {\n              relation = `${translatedName1} هو إبن عم والد ${translatedName2}`;\n              score = 80;\n            } else {\n              relation = `${translatedName1} هو إبن عمة والد ${translatedName2}`;\n              score = 78;\n            }\n          } else {\n            // mother's side\n            if (p2AncestorGender === 'Male') {\n              // mother's brother's son\n              relation = `${translatedName1} هو إبن عم والدة ${translatedName2}.`;\n              score = 74;\n            } else {\n              // mother's brother's daughter\n              relation = `${translatedName1} هو إبن عمّة والدة ${translatedName2}`;\n              score = 72;\n            }\n          }\n        } else {\n          // If person1 is female\n          if (p1AncestorGender === 'Male') {\n            // father's side\n            if (p2AncestorGender === 'Male') {\n              // father's brother's son\n              relation = `${translatedName1} هي إبنة عم والد ${translatedName2}`;\n              score = 80;\n            } else {\n              // father's brother's daughter\n              relation = `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\n              score = 78;\n            }\n          } else {\n            // mother's side\n            if (p2AncestorGender === 'Male') {\n              // mother's brother's son\n              relation = `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\n              score = 74;\n            } else {\n              // mother's brother's daughter\n              relation = `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\n              score = 72;\n            }\n          }\n        }\n      } else if (p1Level === 3 && p2Level === 2) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        if (p1AncestorGender === 'Male') {\n          // father's side\n          if (p2AncestorGender === 'Male') {\n            // father's brother's son\n            relation = `والد ${translatedName1} هو إبن عم ${translatedName2}`;\n            score = 80;\n          } else {\n            relation = `والد ${translatedName1} هو إبن خال ${translatedName2}`;\n            score = 75;\n          }\n        } else {\n          // mother's side\n          if (p2AncestorGender === 'Male') {\n            // mother's brother's son\n            relation = `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\n            score = 80;\n          } else {\n            // mother's brother's daughter\n            relation = `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\n            score = 75;\n          }\n        }\n      } else if (p1Level === 3 && p2Level === 3) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        const p1GreatAncestorGender = pathToP1[2].gender;\n        const p2GreatAncestorGender = pathToP2[2].gender;\n        if (p1AncestorGender === 'Male') {\n          if (p2AncestorGender === 'Male') {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n              } else {\n                relation = `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n              } else {\n                relation = `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n              }\n            }\n          } else {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\n              } else {\n                relation = `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\n              } else {\n                relation = `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            }\n          }\n        } else {\n          if (p2AncestorGender === 'Male') {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\n              } else {\n                relation = `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\n              } else {\n                relation = `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\n              }\n            }\n          } else {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\n              } else {\n                relation = `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                relation = `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n              } else {\n                relation = `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            }\n          }\n        }\n      } else {\n        console.log('No direct relation found.');\n        errorContainer.innerText = 'لا يوجد قرابة مباشرة.';\n        return '';\n      }\n      if (relation != '') {\n        return {\n          relation,\n          score,\n          generation: Math.abs(p1Level - p2Level),\n          explanation: relationshipExplanation[0],\n          AncID\n        };\n      }\n    } catch (error) {\n      console.error('Error in relationship lookup:', error);\n\n      // Correctly use 'error' here instead of 'err'\n      setError(`❌ خطأ: ${error.message || error}`);\n\n      // Show the error message in the error container\n      if (errorContainer) {\n        errorContainer.innerText = `❌ خطأ: ${error.message || error}`;\n      }\n      return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relation-page\",\n    children: [(duplicates.person1.length > 0 || duplicates.person2.length > 0) && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"duplicates-panel\",\n      children: [duplicates.person1.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"duplicates-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0623\\u0643\\u062A\\u0628 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: duplicates.person1.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`\n          }, `p1-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 11\n      }, this), duplicates.person2.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"duplicates-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0627\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D \\\"\", person2, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: duplicates.person2.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`\n          }, `p2-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relation-form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\u0645\\u0627\\u0647\\u064A \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\\u061F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"DescriptionZone\",\n          children: \"\\u0627\\u0644\\u0647\\u062F\\u0641 \\u0645\\u0646 \\u0647\\u0630\\u0647 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0647\\u0648 \\u062A\\u062D\\u062F\\u064A\\u062F \\u0635\\u0644\\u0629 \\u0627\\u0644\\u0642\\u0631\\u0627\\u0628\\u0629 \\u0628\\u064A\\u0646 \\u0634\\u062E\\u0635\\u064A\\u0646 \\u0628\\u0646\\u0627\\u0621\\u064B\\u0627 \\u0639\\u0644\\u0649 \\u0627\\u0633\\u0645\\u0647\\u0645. \\u0643\\u0644 \\u0645\\u0627\\u0639\\u0644\\u064A\\u0643 \\u0641\\u0639\\u0644\\u0647 \\u0647\\u0648 \\u0627\\u062F\\u062E\\u0627\\u0644 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0627\\u0648\\u0644 \\u0648\\u0627\\u0644\\u062B\\u0627\\u0646\\u064A \\u0648\\u062B\\u0645 \\u0627\\u0644\\u0646\\u0642\\u0631 \\u0639\\u0644\\u0649 \\\"\\u0627\\u0644\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\\\" \\u0633\\u062A\\u0638\\u0647\\u0631 \\u0644\\u0643 \\u0627\\u0644\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0641\\u064A \\u0627\\u0633\\u0647\\u0644 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0648\\u0627\\u0644\\u062A\\u064A \\u064A\\u062A\\u0648\\u0636\\u062D \\u0644\\u0643 \\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0648\\u0645\\u062F\\u0649 \\u0642\\u0631\\u0627\\u0628\\u062A\\u0647\\u0627\\u061F \\u0641\\u064A \\u062D\\u0627\\u0644 \\u0648\\u062C\\u0648\\u062F \\u0627\\u064A \\u062A\\u0634\\u0627\\u0628\\u0647\\u0627\\u062A \\u0627\\u0648 \\u062A\\u0643\\u0631\\u0627\\u0631\\u0627\\u062A \\u0641\\u064A \\u0627\\u0644\\u0627\\u0633\\u0645\\u0627\\u0621 \\u0633\\u064A\\u0645 \\u062A\\u0648\\u0641\\u064A\\u0631 \\u062E\\u064A\\u0627\\u0631\\u0627\\u062A \\u0644\\u062A\\u062D\\u062F\\u064A\\u062F \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: fetchRelationship,\n          className: \"relation-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u0623\\u0648\\u0644\",\n              value: person1,\n              onChange: e => setPerson1(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u062B\\u0627\\u0646\\u064A\",\n              value: person2,\n              onChange: e => setPerson2(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ButtonSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"checkButton\",\n              children: \"\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"resetButton\",\n              children: \"\\u0625\\u0644\\u063A\\u0627\\u0621\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 17\n      }, this), \" \", relationship && !error && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relationship-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"resultTitle\",\n          children: \"\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"relationText\",\n          children: relationship.relationshipDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-details\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"result-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062F\\u0631\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"score-cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score-bar-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"score-bar-fill\",\n                      style: {\n                        width: `${relationship.relationshipScore || 0}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"score-value\",\n                      children: relationship.relationshipScore\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 824,\n                      columnNumber: 23\n                    }, this), relationship.relationshipScore !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: relationship.relationshipScore >= 80 ? \"score-category high\" : relationship.relationshipScore >= 60 ? \"score-category medium\" : \"score-category low\",\n                      children: relationship.relationshipScore >= 80 ? \"قوية\" : relationship.relationshipScore >= 60 ? \"متوسطة\" : \"ضعيفة\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 826,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"relationship-tag\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag blood\",\n                    children: \"\\u062F\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062A\\u0641\\u0633\\u064A\\u0631 \\u0625\\u0636\\u0627\\u0641\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"relation-explanation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"relation-explanation-type\",\n                    children: relationship.relationshipExplanationType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 21\n                  }, this), \" :\", relationship.relationshipExplanationDesc || \"لا يوجد تفسير متاح.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"generation-distance\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tooltip-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"numGen\",\n                      children: relationship.relationshipGenerationGap\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 862,\n                      columnNumber: 23\n                    }, this), \" \\u0623\\u062C\\u064A\\u0627\\u0644\", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"custom-tooltip\",\n                      children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0647\\u0648 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u0634\\u062E\\u0627\\u0635 \\u0627\\u0644\\u0641\\u0627\\u0635\\u0644\\u064A\\u0646 \\u0641\\u064A \\u0634\\u062C\\u0631\\u0629 \\u0627\\u0644\\u0639\\u0627\\u0626\\u0644\\u0629 \\u0628\\u064A\\u0646 \\u0627\\u0644\\u0634\\u062E\\u0635\\u064A\\u0646.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 863,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0627\\u0644\\u062C\\u062F \\u0627\\u0644\\u0645\\u0634\\u062A\\u0631\\u0643\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 870,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"generation-distance\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tooltip-container\",\n                    children: [relationship.commonAncestor.AncID, \" \\u0623\\u062C\\u064A\\u0627\\u0644\", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"custom-tooltip\",\n                      children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0647\\u0648 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u0634\\u062E\\u0627\\u0635 \\u0627\\u0644\\u0641\\u0627\\u0635\\u0644\\u064A\\u0646 \\u0641\\u064A \\u0634\\u062C\\u0631\\u0629 \\u0627\\u0644\\u0639\\u0627\\u0626\\u0644\\u0629 \\u0628\\u064A\\u0646 \\u0627\\u0644\\u0634\\u062E\\u0635\\u064A\\u0646.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 874,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 742,\n    columnNumber: 5\n  }, this);\n};\n_s(RelationPage, \"5MnJf2iOdfeuuTyUto3lKzeCyYw=\");\n_c = RelationPage;\nexport default RelationPage;\nvar _c;\n$RefreshReg$(_c, \"RelationPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","translations","require","config","neo4jURI","process","env","REACT_APP_NEO4J_URI","neo4jUser","REACT_APP_NEO4J_USER","neo4jPassword","REACT_APP_NEO4J_PASSWORD","driver","auth","basic","session","countBenAndBent","str","matches","match","length","splitName","fullName","parts","replace","trim","split","bentCount","personName","fatherName","grandfatherName","familyName","translateName","language","nameParts","reverseTranslations","Object","fromEntries","entries","map","key","value","dict","translatedParts","part","join","RelationPage","_s","person1","setPerson1","person2","setPerson2","relationship","setRelationship","duplicates","setDuplicates","error","setError","fetchRelationship","e","preventDefault","result","getRelationship","message","relationshipDescription","relation","relationshipScore","score","relationshipGenerationGap","generation","relationshipExplanationType","explanation","type","relationshipExplanationDesc","commonAncestor","AncID","console","getPersonMatches","cypherQuery","queryParamsObject","run","records","record","id","get","toNumber","name","father","grandfather","lastName","Error","close","person1FullName","person2FullName","isArabic","text","test","translatedName1","translatedName2","person1Name","person1FatherName","person1GrandfatherName","person1LastName","person2Name","person2FatherName","person2GrandfatherName","person2LastName","errorContainer","document","getElementById","person1Matches","person2Matches","log","person1ID","person2ID","getAncestors","gender","levelFromP1","levelFromP2","pathFromAncestorToP1","pathFromAncestorToP2","relationRecord","ancestorID","ancestorName","ancestorLastName","ancestorGender","ancestor","pathToP1","pathToP2","reverse","a","p1Level","p2Level","gender1","gender2","relationshipExplanation","p1AncestorGender","p2AncestorGender","p1GreatAncestorGender","p2GreatAncestorGender","innerText","Math","abs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","p","idx","onSubmit","placeholder","onChange","target","style","width","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/RelationChecker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './RelationChecker.css';\r\nconst translations = require('./translation.json');\r\nrequire('dotenv').config();\r\n\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nconst driver = require('neo4j-driver').driver(\r\n    neo4jURI,\r\n    require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n);\r\nconst session = driver.session();\r\n\r\nfunction countBenAndBent(str) {\r\n  const matches = str.match(/\\b(ben|bent)\\b/gi);\r\n  return matches ? matches.length : 0;\r\n}\r\n\r\n// Function that split english translated name that may contain ben to full name only parts.\r\nfunction splitName(fullName) {\r\n  const parts = fullName.replace(/\\s+(ben|bent)\\s+/gi, ' ').trim().split(/\\s+/);\r\n  const bentCount = countBenAndBent(fullName);\r\n  if (parts.length === 2) {\r\n    if (bentCount === 0){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: \"\",\r\n        grandfatherName: \"\",\r\n        familyName: parts[1]\r\n      };\r\n    }\r\n    else if (bentCount === 1){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: \"\",\r\n        familyName: \"\"\r\n      };\r\n    }\r\n    \r\n  } \r\n  else if (parts.length === 3) {\r\n    if (bentCount === 1){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: \"\",\r\n        familyName: parts[2]\r\n      };\r\n    }\r\n    else if (bentCount === 2){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: parts[2],\r\n        familyName: \"\"\r\n      };\r\n    }\r\n    \r\n  } else if (parts.length === 4) {\r\n    return {\r\n      personName: parts[0],\r\n      fatherName: parts[1],\r\n      grandfatherName: parts[2],\r\n      familyName: parts[3]\r\n    };\r\n  }\r\n  // Default case if structure doesn't match\r\n  return { personName: parts[0], fatherName: \"\", grandfatherName: \"\", familyName: parts[1] };\r\n}\r\n\r\nexport const translateName = (fullName, language = true) => {\r\n  const nameParts = fullName.split(' ');\r\n\r\n  // Build reverse translation map if needed\r\n  const reverseTranslations = Object.fromEntries(\r\n    Object.entries(translations).map(([key, value]) => [value, key])\r\n  );\r\n\r\n  const dict = language ? translations : reverseTranslations;\r\n\r\n  const translatedParts = nameParts.map(part => dict[part] || part);\r\n\r\n  return translatedParts.join(' ');\r\n};\r\n\r\nconst RelationPage = () => {\r\n  const [person1, setPerson1] = useState('');\r\n  const [person2, setPerson2] = useState('');\r\n  const [relationship, setRelationship] = useState('');\r\n  const [duplicates, setDuplicates] = useState({ person1: [], person2: [] });\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchRelationship = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const result = await getRelationship(person1, person2);\r\n\r\n      if (result.error === 'non-unique-name') {\r\n        setDuplicates(result.duplicates);\r\n        setRelationship(result.message);\r\n      } else {\r\n        setDuplicates({ person1: [], person2: [] });\r\n        setRelationship({\r\n          relationshipDescription: result.relation,\r\n          relationshipScore: result.score,\r\n          relationshipGenerationGap: result.generation,\r\n          relationshipExplanationType: result.explanation.type,\r\n          relationshipExplanationDesc: result.explanation.explanation,\r\n          commonAncestor: result.AncID\r\n\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching relationship:', error);\r\n      setRelationship({ relationshipDescription: 'An error occurred', relationshipScore: null });\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  const getPersonMatches = async (personName, fatherName = \"\", grandfatherName = \"\", familyName) => {\r\n\r\n    let cypherQuery = ``;\r\n    const queryParamsObject = {};\r\n  \r\n    if (personName){\r\n      if (fatherName) {\r\n        if (grandfatherName) {\r\n          if (familyName) {\r\n            cypherQuery += `\r\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\r\n              WHERE child.name = $personName AND \r\n                    father.name = $fatherName AND \r\n                    grandfather.name = $grandfatherName AND \r\n                    child.lastName = $familyName\r\n              RETURN \r\n                id(child) AS childID,\r\n                child.name AS childName, \r\n                father.name AS fatherName, \r\n                grandfather.name AS grandfatherName, \r\n                child.lastName AS familyName  \r\n            `;\r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n            queryParamsObject.grandfatherName = grandfatherName;\r\n            queryParamsObject.familyName = familyName;\r\n          } \r\n          else {\r\n            cypherQuery += `\r\n              MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\r\n              WHERE child.name = $personName AND \r\n                    father.name = $fatherName AND \r\n                    grandfather.name = $grandfatherName\r\n              RETURN \r\n                    id(child) AS childID, \r\n                    child.name AS childName, \r\n                    father.name AS fatherName, \r\n                    grandfather.name AS grandfatherName,\r\n                    child.lastName AS familyName       \r\n              `;\r\n            \r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n            queryParamsObject.grandfatherName = grandfatherName;\r\n          }\r\n          \r\n        } else {\r\n          if (familyName){\r\n            cypherQuery += `\r\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\r\n            WHERE child.name = $personName AND \r\n                  father.name = $fatherName AND\r\n                  child.lastName = $familyName\r\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n            RETURN  \r\n              id(child) AS childID,\r\n              child.name AS childName, \r\n              father.name AS fatherName,\r\n              grandfather.name AS grandfatherName,\r\n              child.lastName AS familyName\r\n            `;\r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n            queryParamsObject.familyName = familyName;\r\n          }\r\n          else{\r\n            cypherQuery += `\r\n            MATCH (father:Person)-[:FATHER_OF]->(child:Person)\r\n            \r\n            WHERE child.name = $personName AND \r\n                  father.name = $fatherName\r\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n            RETURN  id(child) AS childID, \r\n                    child.name AS childName, \r\n                    father.name AS fatherName, \r\n                    grandfather.name AS grandfatherName,\r\n                    child.lastName AS familyName\r\n            `;\r\n            queryParamsObject.personName = personName;\r\n            queryParamsObject.fatherName = fatherName;\r\n          }\r\n          }\r\n      }\r\n      else {\r\n        if (familyName){\r\n          cypherQuery += `\r\n          MATCH (child:Person)\r\n          WHERE child.name = $personName AND child.lastName = $familyName\r\n          OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\r\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n          RETURN \r\n            id(child) AS childID,\r\n            child.name AS childName, \r\n            father.name AS fatherName,\r\n            grandfather.name AS grandfatherName,\r\n            child.lastName AS familyName\r\n        `;\r\n        queryParamsObject.personName = personName;\r\n        queryParamsObject.familyName = familyName;\r\n        }\r\n        else{\r\n          cypherQuery += `\r\n            MATCH (child:Person)\r\n            WHERE child.name = $personName\r\n            OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\r\n            OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n            RETURN\r\n              id(child) AS childID,\r\n              child.name AS childName, \r\n              father.name AS fatherName, \r\n              grandfather.name AS grandfatherName,\r\n              child.lastName AS familyName\r\n          `;\r\n          queryParamsObject.personName = personName;\r\n        }\r\n      }\r\n    }\r\n\r\n    const session = driver.session();\r\n    try {\r\n      const result = await session.run(cypherQuery, queryParamsObject);\r\n  \r\n      return result.records.map(record => ({\r\n        id: record.get('childID').toNumber(),\r\n        name: record.get('childName'),\r\n        father: record.get('fatherName') || \"\",\r\n        grandfather: record.get('grandfatherName') || \"\",\r\n        lastName: record.get('familyName')\r\n      }));\r\n    } \r\n    catch (Error) {\r\n      console.error('Query Error:', Error);\r\n      setError('حدث خطأ أثناء البحث.');\r\n    } \r\n    finally {\r\n      await session.close();\r\n    }\r\n  };\r\n  const getRelationship = async (person1FullName, person2FullName) => {\r\n    const isArabic = (text) => /[\\u0600-\\u06FF]/.test(text);\r\n    let translatedName1, translatedName2;\r\n    \r\n    if (isArabic(person1FullName)){\r\n      translatedName1 = translateName(person1FullName, false);\r\n    }\r\n    else{\r\n      translatedName1 = person1FullName;\r\n    }\r\n    if (isArabic(person2FullName)){\r\n      translatedName2 = translateName(person2FullName, false);\r\n    }\r\n    else{\r\n      translatedName2 = person2FullName;\r\n    }\r\n    \r\n    const { personName: person1Name, fatherName: person1FatherName, grandfatherName: person1GrandfatherName, familyName: person1LastName } = splitName(translatedName1);\r\n    const { personName: person2Name, fatherName: person2FatherName, grandfatherName: person2GrandfatherName, familyName: person2LastName } = splitName(translatedName2);\r\n    const errorContainer = document.getElementById('error-container');\r\n    try {\r\n      const person1Matches = await getPersonMatches(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\r\n      if (person1Matches.length === 0) {\r\n        throw new Error(`لا يوجد أشخاص بإسم ${person1FullName} الرجاء التثبت في الإسم جيدا`);\r\n      }\r\n      const person2Matches = await getPersonMatches(person2Name, person2FatherName, person2GrandfatherName, person2LastName);\r\n      if (person2Matches.length === 0) {\r\n        throw new Error(`لا يوجد أشخاص بإسم ${person2FullName} الرجاء التثبت في الإسم جيدا`);\r\n      }\r\n  \r\n      console.log(\"P1 matches : \", person1Matches);\r\n      console.log(\"P2 matches : \", person2Matches);\r\n  \r\n      let person1ID, person2ID;\r\n      if (person1Matches.length > 1 || person2Matches.length > 1) {\r\n        return {\r\n          error: 'non-unique-name',\r\n          message: 'تم العثور على عدة أشخاص بنفس الاسم. الرجاء اختيار الصحيح.',\r\n          duplicates: {\r\n            person1: person1Matches.length > 1 ? person1Matches : [],\r\n            person2: person2Matches.length > 1 ? person2Matches : []\r\n          }\r\n        };\r\n      }\r\n      else{\r\n        person1ID = person1Matches[0].id;\r\n        person2ID = person2Matches[0].id;\r\n      }\r\n      // Function that return the ancestors of a given person starting with the person itself and going up to the root.\r\n      const getAncestors = async (person1ID, person2ID) => {\r\n        const result = await session.run(`\r\n          MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..4]->(p1:Person)\r\n          WHERE id(p1) = $person1ID\r\n      \r\n          MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..4]->(p2:Person)\r\n          WHERE id(p2) = $person2ID\r\n            AND id(p1) <> id(p2)\r\n      \r\n          WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\r\n          ORDER BY (level1 + level2) ASC\r\n          LIMIT 1\r\n      \r\n          RETURN \r\n            common.name AS commonAncestorName,\r\n            common.lastName AS commonAncestorLastName,\r\n            id(common) AS commonAncestorID,\r\n            common.gender AS commonAncestorGender,\r\n            level1 AS generationsFromP1,\r\n            level2 AS generationsFromP2,\r\n            [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\r\n            [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\r\n        `, { person1ID, person2ID });\r\n\r\n        const record = result.records[0];\r\n      \r\n        return {\r\n            id: record.get('commonAncestorID').toNumber(),\r\n            name: record.get('commonAncestorName'),\r\n            lastName: record.get('commonAncestorLastName'),\r\n            gender: record.get('commonAncestorGender'),\r\n            levelFromP1: record.get('generationsFromP1').toNumber(),\r\n            levelFromP2: record.get('generationsFromP2').toNumber(),\r\n            pathFromAncestorToP1: record.get('pathToP1'),\r\n            pathFromAncestorToP2: record.get('pathToP2')\r\n        };\r\n      };\r\n      \r\n      let relationRecord = await getAncestors(person1ID, person2ID);\r\n      const ancestorID = relationRecord.id;\r\n      const ancestorName = relationRecord.name;\r\n      const ancestorLastName = relationRecord.lastName;\r\n      const ancestorGender = relationRecord.gender;\r\n      let levelFromP1, levelFromP2, pathFromAncestorToP1, pathFromAncestorToP2;\r\n      const ancestor = {ancestorID, ancestorName, ancestorLastName, ancestorGender};\r\n      console.log(ancestor);\r\n\r\n      ({\r\n        levelFromP1, \r\n        levelFromP2, \r\n        pathFromAncestorToP1, \r\n        pathFromAncestorToP2 \r\n      } = relationRecord);\r\n\r\n      const pathToP1 = pathFromAncestorToP1;\r\n      const pathToP2 = pathFromAncestorToP2;\r\n\r\n      console.log(pathFromAncestorToP1.reverse().map(a => a.name).join(\" ben \"));\r\n      console.log(pathFromAncestorToP2.reverse().map(a => a.name).join(\" ben \"));\r\n  \r\n      var p1Level = levelFromP1;\r\n      var p2Level = levelFromP2;\r\n            \r\n      const translatedName1 = translateName(person1FullName);\r\n      const translatedName2 = translateName(person2FullName);\r\n  \r\n      const gender1 = pathToP1[0].gender;\r\n      const gender2 = pathToP2[0].gender;\r\n      let relation = '', score = 0;\r\n      let relationshipExplanation = [\r\n        {\r\n          type: \"العائلة\",\r\n          explanation: \"هؤلاء الشخصين مرتبطين من خلال العائلة ذو الدرجة الأولى.\"\r\n        },\r\n        {\r\n          type: \"العائلة المقربة\",\r\n          explanation: \"هؤلاء الشخصين مرتبطين من خلال أعمام وأخوال مشتركين.\"\r\n        },\r\n        {\r\n          type: \"العائلة الموسعة\",\r\n          explanation: \"هؤلاء الشخصين مرتبطين من خلال أعمام أو أخوال الأب وأحفادهم.\"\r\n        },\r\n        {\r\n          type: \"قرابة الزواج\",\r\n          explanation: \"هذان الشخصان مرتبطان من خلال الزواج.\"\r\n        },\r\n        {\r\n          type: \"صهر / نسيب\",\r\n          explanation: \"هذان الشخصان مرتبطان عبر الزواج وليس النسب الدموي.\"\r\n        },\r\n        {\r\n          type: \"لا توجد علاقة\",\r\n          explanation: \"لم يتم العثور على أي صلة قرابة بين الشخصين في قاعدة البيانات.\"\r\n        },\r\n        {\r\n          type: \"نفس الشخص\",\r\n          explanation: \"الاسمين يشيران إلى نفس الشخص.\"\r\n        }\r\n      ];\r\n      \r\n      console.log(`Level: (${p1Level}, ${p2Level})`);\r\n  \r\n      if (p1Level === 0 && p2Level === 1) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو والد ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي والدة ${translatedName2}`;\r\n        }\r\n        score = 100;\r\n      }\r\n  \r\n      else if (p1Level === 1 && p2Level === 0) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو ابن ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي إبنة ${translatedName2}`;\r\n        }\r\n        score = 100;\r\n      } \r\n  \r\n      else if (p1Level === 2 && p2Level === 0) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو حفيد ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي حفيدة ${translatedName2}`;\r\n        }\r\n        score = 90;\r\n      }\r\n      else if (p1Level === 0 && p2Level === 2) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو جدّ ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي جدّة ${translatedName2}`;\r\n        }\r\n        score = 90;\r\n      }\r\n  \r\n      else if (p1Level === 3 && p2Level === 0) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو إبن حفيد ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\r\n        }\r\n        score = 75;\r\n      }\r\n  \r\n      else if (p1Level === 0 && p2Level === 3) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} و جد والد ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي جدة والدة ${translatedName2}`;\r\n        }\r\n        score = 89;\r\n\r\n      } \r\n      \r\n      else if (p1Level === 1 && p2Level === 1) {\r\n        if (gender1 === 'Male' && gender2 === 'Male'){\r\n          relation = `${translatedName1} و ${translatedName2} إخوة`;\r\n        }\r\n        else if (gender1 === 'Female' && gender2 === 'Female'){\r\n          relation = `${translatedName1} و ${translatedName2} أخوات`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} و ${translatedName2} إخوة`;\r\n        }\r\n        score = 98;\r\n      } \r\n      \r\n      else if (p1Level === 2 && p2Level === 1) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو ابن أخ ${translatedName2}`;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي إبن أخ ${translatedName2}`;\r\n        }\r\n        score = 94;\r\n\r\n      } \r\n      \r\n      else if (p1Level === 1 && p2Level === 2) {\r\n        if (gender1 === 'Male'){\r\n          relation = `${translatedName1} هو عم ${translatedName2}'`;\r\n          score = 95;\r\n        }\r\n        else{\r\n          relation = `${translatedName1} هي عمّة ${translatedName2}`;\r\n          score = 93;\r\n\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 2 && p2Level === 2) {    \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n  \r\n        if (gender1 === 'Male') { \r\n          if (p2AncestorGender === 'Male') { \r\n            if (p1AncestorGender === 'Male'){  // ولد عمه\r\n              relation = `${translatedName1} إبن عم ${translatedName2}`;\r\n              score = 90;\r\n            }\r\n            else{\r\n              relation = `${translatedName1} هو إبن عمّة ${translatedName2}`;\r\n              score = 89;\r\n\r\n            }\r\n          } \r\n          else {  \r\n            if (p1AncestorGender === 'Male'){  // ولد خاله\r\n              relation = `${translatedName1} هو إبن خال ${translatedName2}`;\r\n              score = 88;\r\n            }\r\n            else{\r\n              relation = `${translatedName1} هو إبن خالة ${translatedName2}`;\r\n              score = 86;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (p1AncestorGender === 'Male') { \r\n            if (p2AncestorGender === 'Male'){  // بنت عمه\r\n              relation = `${translatedName1} هي إبنة عمّ ${translatedName2}`;\r\n              score = 90;\r\n            }\r\n            else{\r\n              relation = `${translatedName1} هي إبنة عمّة ${translatedName2}`;\r\n              score = 89;\r\n            }\r\n          } \r\n          else {  \r\n            if (p2AncestorGender === 'Male'){  // بنت خاله\r\n              relation = `${translatedName1} هي إبنة خال ${translatedName2}`;\r\n              score = 88;\r\n            }\r\n            else{\r\n              relation = `${translatedName1} هي إبنة خالة ${translatedName2}`;\r\n              score = 86;\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 2 && p2Level === 3) {         \r\n  \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n\r\n        if (gender1 === 'Male') { \r\n          if (p1AncestorGender === 'Male') {\r\n            if (p2AncestorGender === 'Male') {\r\n              relation = `${translatedName1} هو إبن عم والد ${translatedName2}`;\r\n              score = 80;\r\n            } else { \r\n              relation = `${translatedName1} هو إبن عمة والد ${translatedName2}`;\r\n              score = 78;\r\n            }\r\n          } else {  // mother's side\r\n            if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n              relation = `${translatedName1} هو إبن عم والدة ${translatedName2}.`;\r\n              score = 74;\r\n            } else {  // mother's brother's daughter\r\n              relation = `${translatedName1} هو إبن عمّة والدة ${translatedName2}`;\r\n              score = 72;\r\n            }\r\n          }\r\n        } \r\n        else {  // If person1 is female\r\n          if (p1AncestorGender === 'Male') {  // father's side\r\n            if (p2AncestorGender === 'Male') {  // father's brother's son\r\n              relation = `${translatedName1} هي إبنة عم والد ${translatedName2}`;\r\n              score = 80;\r\n            } else {  // father's brother's daughter\r\n              relation = `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\r\n              score = 78;\r\n            }\r\n          } else {  // mother's side\r\n            if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n              relation = `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\r\n              score = 74;\r\n            } else {  // mother's brother's daughter\r\n              relation = `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\r\n              score = 72;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      else if (p1Level === 3 && p2Level === 2) {          \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n\r\n        if (p1AncestorGender === 'Male') {  // father's side\r\n          if (p2AncestorGender === 'Male') {  // father's brother's son\r\n            relation = `والد ${translatedName1} هو إبن عم ${translatedName2}`;\r\n            score = 80;\r\n          } else { \r\n            relation = `والد ${translatedName1} هو إبن خال ${translatedName2}`;\r\n            score = 75;\r\n          }\r\n        } \r\n        else {  // mother's side\r\n          if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n            relation = `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\r\n            score = 80;\r\n          } else {  // mother's brother's daughter\r\n            relation = `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\r\n            score = 75;\r\n          }\r\n        }\r\n      }\r\n      else if (p1Level === 3 && p2Level === 3) {          \r\n        \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n        const p1GreatAncestorGender = pathToP1[2].gender;\r\n        const p2GreatAncestorGender = pathToP2[2].gender;\r\n\r\n        if (p1AncestorGender === 'Male') { \r\n          if (p2AncestorGender === 'Male'){\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (p2AncestorGender === 'Male'){\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                relation = `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                relation = `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      else {\r\n        console.log('No direct relation found.');\r\n        errorContainer.innerText = 'لا يوجد قرابة مباشرة.';\r\n        return '';\r\n      }\r\n\r\n      if (relation != ''){\r\n        return {relation, score, \r\n                generation:Math.abs(p1Level-p2Level), \r\n                explanation: relationshipExplanation[0],\r\n                AncID};\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error in relationship lookup:', error);\r\n    \r\n      // Correctly use 'error' here instead of 'err'\r\n      setError(`❌ خطأ: ${error.message || error}`);\r\n    \r\n      // Show the error message in the error container\r\n      if (errorContainer) {\r\n        errorContainer.innerText = `❌ خطأ: ${error.message || error}`;\r\n      }\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relation-page\">\r\n    {(duplicates.person1.length > 0 || duplicates.person2.length > 0) && (\r\n      <aside className=\"duplicates-panel\">\r\n        {duplicates.person1.length > 0 && (\r\n          <section className=\"duplicates-group\">\r\n            <h3>أكتب الاسم الكامل للشخص الصحيح:</h3>\r\n            <ul>\r\n              {duplicates.person1.map((p, idx) => (\r\n                <li key={`p1-${idx}`}>\r\n                  {`${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n  \r\n        {duplicates.person2.length > 0 && (\r\n          <section className=\"duplicates-group\">\r\n            <h3>اختر الشخص الصحيح \"{person2}\"</h3>\r\n            <ul>\r\n              {duplicates.person2.map((p, idx) => (\r\n                <li key={`p2-${idx}`}>\r\n                  {`${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n      </aside>\r\n    )}    \r\n    {/* Main Panel: Form + Result */}\r\n    <main className=\"main-panel\">\r\n      <section className=\"relation-form-section\">\r\n        <h2 className=\"section-title\">ماهي العلاقة بينهما؟</h2>\r\n        <p id=\"DescriptionZone\">\r\n          الهدف من هذه الصفحة هو تحديد صلة القرابة بين شخصين بناءًا على اسمهم. كل ماعليك فعله\r\n          هو ادخال الاسم للشخص الاول والثاني وثم النقر على \"التحقق من العلاقة\" ستظهر لك النتيجة في اسهل الصفحة\r\n          والتي يتوضح لك نوع العلاقة ومدى قرابتها؟ في حال وجود اي تشابهات او تكرارات في الاسماء سيم توفير خيارات لتحديد الشخص الصحيح\r\n        </p>\r\n        <form onSubmit={fetchRelationship} className=\"relation-form\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"الإسم الكامل الأول\"\r\n              value={person1}\r\n              onChange={(e) => setPerson1(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"الإسم الكامل الثاني\"\r\n              value={person2}\r\n              onChange={(e) => setPerson2(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className='ButtonSection'>\r\n            <button type=\"submit\" className=\"checkButton\">تحقق من العلاقة</button>\r\n            <button type=\"reset\" className='resetButton'>إلغاء</button>\r\n          </div>\r\n          \r\n        </form>\r\n      </section>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>} {/* Show the error message */}\r\n\r\n      {relationship && !error  && (\r\n        <section className=\"relationship-result\">\r\n          <h2 id=\"resultTitle\">نتيجة العلاقة</h2>\r\n          <p className=\"relationText\">{relationship.relationshipDescription}</p>\r\n          <div className=\"result-details\">\r\n            <table className=\"result-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>درجة العلاقة</th>\r\n                  <td className=\"score-cell\">\r\n                    <div className=\"score-bar-wrapper\">\r\n                      <div className=\"score-bar-fill\" style={{ width: `${relationship.relationshipScore || 0}%` }}></div>\r\n                    </div>\r\n                    <div className=\"score-meta\">\r\n                      <span className=\"score-value\">{relationship.relationshipScore}</span>\r\n                      {relationship.relationshipScore !== null && (\r\n                        <span className={\r\n                          relationship.relationshipScore >= 80\r\n                            ? \"score-category high\"\r\n                            : relationship.relationshipScore >= 60\r\n                            ? \"score-category medium\"\r\n                            : \"score-category low\"\r\n                        }>\r\n                          {\r\n                            relationship.relationshipScore >= 80\r\n                              ? \"قوية\"\r\n                              : relationship.relationshipScore >= 60\r\n                              ? \"متوسطة\"\r\n                              : \"ضعيفة\"\r\n                          }\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>نوع العلاقة</th>\r\n                  <td className=\"relationship-tag\"><span className=\"tag blood\">دم</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <th>تفسير إضافي</th>\r\n                  <td className=\"relation-explanation\">\r\n                    <span className='relation-explanation-type'>\r\n                      {relationship.relationshipExplanationType}\r\n                    </span> : \r\n                    {relationship.relationshipExplanationDesc || \"لا يوجد تفسير متاح.\"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>عدد الأجيال بينهما</th>\r\n                  <td className=\"generation-distance\">\r\n                    <div className=\"tooltip-container\">\r\n                      <span id=\"numGen\">{relationship.relationshipGenerationGap}</span> أجيال\r\n                      <div className=\"custom-tooltip\">\r\n                        عدد الأجيال هو عدد الأشخاص الفاصلين في شجرة العائلة بين الشخصين.\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>الجد المشترك</th>\r\n                  <td className=\"generation-distance\">\r\n                    <div className=\"tooltip-container\">\r\n                      {relationship.commonAncestor.AncID} أجيال\r\n                      <div className=\"custom-tooltip\">\r\n                        عدد الأجيال هو عدد الأشخاص الفاصلين في شجرة العائلة بين الشخصين.\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </main>\r\n  </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default RelationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}