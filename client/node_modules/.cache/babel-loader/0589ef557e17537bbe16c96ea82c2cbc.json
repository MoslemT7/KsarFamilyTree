{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar packstream_1 = require(\"../packstream\");\nvar transformer_1 = require(\"./transformer\");\nvar temporal_factory_1 = require(\"./temporal-factory\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\nvar _a = neo4j_driver_core_1.internal.temporalUtil,\n  dateToEpochDay = _a.dateToEpochDay,\n  localDateTimeToEpochSecond = _a.localDateTimeToEpochSecond,\n  localTimeToNanoOfDay = _a.localTimeToNanoOfDay;\nvar POINT_2D = 0x58;\nvar POINT_2D_STRUCT_SIZE = 3;\nvar POINT_3D = 0x59;\nvar POINT_3D_STRUCT_SIZE = 4;\nvar DURATION = 0x45;\nvar DURATION_STRUCT_SIZE = 4;\nvar LOCAL_TIME = 0x74;\nvar LOCAL_TIME_STRUCT_SIZE = 1;\nvar TIME = 0x54;\nvar TIME_STRUCT_SIZE = 2;\nvar DATE = 0x44;\nvar DATE_STRUCT_SIZE = 1;\nvar LOCAL_DATE_TIME = 0x64;\nvar LOCAL_DATE_TIME_STRUCT_SIZE = 2;\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x46;\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\nvar DATE_TIME_WITH_ZONE_ID = 0x66;\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\n/**\n * Creates the Point2D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint2DTransformer() {\n  return new transformer_1.TypeTransformer({\n    signature: POINT_2D,\n    isTypeInstance: function (point) {\n      return (0, neo4j_driver_core_1.isPoint)(point) && (point.z === null || point.z === undefined);\n    },\n    toStructure: function (point) {\n      return new packstream_1.structure.Structure(POINT_2D, [(0, neo4j_driver_core_1.int)(point.srid), point.x, point.y]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Point2D', POINT_2D_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 3),\n        srid = _a[0],\n        x = _a[1],\n        y = _a[2];\n      return new neo4j_driver_core_1.Point(srid, x, y, undefined // z\n      );\n    }\n  });\n}\n/**\n * Creates the Point3D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint3DTransformer() {\n  return new transformer_1.TypeTransformer({\n    signature: POINT_3D,\n    isTypeInstance: function (point) {\n      return (0, neo4j_driver_core_1.isPoint)(point) && point.z !== null && point.z !== undefined;\n    },\n    toStructure: function (point) {\n      return new packstream_1.structure.Structure(POINT_3D, [(0, neo4j_driver_core_1.int)(point.srid), point.x, point.y, point.z]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Point3D', POINT_3D_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 4),\n        srid = _a[0],\n        x = _a[1],\n        y = _a[2],\n        z = _a[3];\n      return new neo4j_driver_core_1.Point(srid, x, y, z);\n    }\n  });\n}\n/**\n * Creates the Duration Transformer\n * @returns {TypeTransformer}\n */\nfunction createDurationTransformer() {\n  return new transformer_1.TypeTransformer({\n    signature: DURATION,\n    isTypeInstance: neo4j_driver_core_1.isDuration,\n    toStructure: function (value) {\n      var months = (0, neo4j_driver_core_1.int)(value.months);\n      var days = (0, neo4j_driver_core_1.int)(value.days);\n      var seconds = (0, neo4j_driver_core_1.int)(value.seconds);\n      var nanoseconds = (0, neo4j_driver_core_1.int)(value.nanoseconds);\n      return new packstream_1.structure.Structure(DURATION, [months, days, seconds, nanoseconds]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Duration', DURATION_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 4),\n        months = _a[0],\n        days = _a[1],\n        seconds = _a[2],\n        nanoseconds = _a[3];\n      return new neo4j_driver_core_1.Duration(months, days, seconds, nanoseconds);\n    }\n  });\n}\n/**\n * Creates the LocalTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalTimeTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n    useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: LOCAL_TIME,\n    isTypeInstance: neo4j_driver_core_1.isLocalTime,\n    toStructure: function (value) {\n      var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n      return new packstream_1.structure.Structure(LOCAL_TIME, [nanoOfDay]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('LocalTime', LOCAL_TIME_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 1),\n        nanoOfDay = _a[0];\n      var result = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the Time Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createTimeTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n    useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: TIME,\n    isTypeInstance: neo4j_driver_core_1.isTime,\n    toStructure: function (value) {\n      var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n      var offsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n      return new packstream_1.structure.Structure(TIME, [nanoOfDay, offsetSeconds]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Time', TIME_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 2),\n        nanoOfDay = _a[0],\n        offsetSeconds = _a[1];\n      var localTime = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n      var result = new neo4j_driver_core_1.Time(localTime.hour, localTime.minute, localTime.second, localTime.nanosecond, offsetSeconds);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the Date Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n    useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: DATE,\n    isTypeInstance: neo4j_driver_core_1.isDate,\n    toStructure: function (value) {\n      var epochDay = dateToEpochDay(value.year, value.month, value.day);\n      return new packstream_1.structure.Structure(DATE, [epochDay]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Date', DATE_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 1),\n        epochDay = _a[0];\n      var result = (0, temporal_factory_1.epochDayToDate)(epochDay);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the LocalDateTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalDateTimeTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n    useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: LOCAL_DATE_TIME,\n    isTypeInstance: neo4j_driver_core_1.isLocalDateTime,\n    toStructure: function (value) {\n      var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n      var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n      return new packstream_1.structure.Structure(LOCAL_DATE_TIME, [epochSecond, nano]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('LocalDateTime', LOCAL_DATE_TIME_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 2),\n        epochSecond = _a[0],\n        nano = _a[1];\n      var result = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the DateTime with ZoneId Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithZoneIdTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n    useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: DATE_TIME_WITH_ZONE_ID,\n    isTypeInstance: function (object) {\n      return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId != null;\n    },\n    toStructure: function (value) {\n      var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n      var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n      var timeZoneId = value.timeZoneId;\n      return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [epochSecond, nano, timeZoneId]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 3),\n        epochSecond = _a[0],\n        nano = _a[1],\n        timeZoneId = _a[2];\n      var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n      var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, null, timeZoneId);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the DateTime with Offset Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithOffsetTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n    useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: DATE_TIME_WITH_ZONE_OFFSET,\n    isTypeInstance: function (object) {\n      return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId == null;\n    },\n    toStructure: function (value) {\n      var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n      var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n      var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n      return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [epochSecond, nano, timeZoneOffsetSeconds]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\n      var _a = __read(struct.fields, 3),\n        epochSecond = _a[0],\n        nano = _a[1],\n        timeZoneOffsetSeconds = _a[2];\n      var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n      var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\n  if (!disableLosslessIntegers && !useBigInt) {\n    return obj;\n  }\n  var convert = function (value) {\n    return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\n  };\n  var clone = Object.create(Object.getPrototypeOf(obj));\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\n      var value = obj[prop];\n      clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\n    }\n  }\n  Object.freeze(clone);\n  return clone;\n}\nexports.default = __assign(__assign({}, bolt_protocol_v1_transformer_1.default), {\n  createPoint2DTransformer: createPoint2DTransformer,\n  createPoint3DTransformer: createPoint3DTransformer,\n  createDurationTransformer: createDurationTransformer,\n  createLocalTimeTransformer: createLocalTimeTransformer,\n  createTimeTransformer: createTimeTransformer,\n  createDateTransformer: createDateTransformer,\n  createLocalDateTimeTransformer: createLocalDateTimeTransformer,\n  createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer,\n  createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__importDefault","mod","__esModule","defineProperty","exports","neo4j_driver_core_1","require","packstream_1","transformer_1","temporal_factory_1","bolt_protocol_v1_transformer_1","_a","internal","temporalUtil","dateToEpochDay","localDateTimeToEpochSecond","localTimeToNanoOfDay","POINT_2D","POINT_2D_STRUCT_SIZE","POINT_3D","POINT_3D_STRUCT_SIZE","DURATION","DURATION_STRUCT_SIZE","LOCAL_TIME","LOCAL_TIME_STRUCT_SIZE","TIME","TIME_STRUCT_SIZE","DATE","DATE_STRUCT_SIZE","LOCAL_DATE_TIME","LOCAL_DATE_TIME_STRUCT_SIZE","DATE_TIME_WITH_ZONE_OFFSET","DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE","DATE_TIME_WITH_ZONE_ID","DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE","createPoint2DTransformer","TypeTransformer","signature","isTypeInstance","point","isPoint","z","undefined","toStructure","structure","Structure","int","srid","x","y","fromStructure","struct","verifyStructSize","size","fields","Point","createPoint3DTransformer","createDurationTransformer","isDuration","months","days","seconds","nanoseconds","Duration","createLocalTimeTransformer","disableLosslessIntegers","useBigInt","isLocalTime","nanoOfDay","hour","minute","second","nanosecond","result","nanoOfDayToLocalTime","convertIntegerPropsIfNeeded","createTimeTransformer","isTime","offsetSeconds","timeZoneOffsetSeconds","localTime","Time","createDateTransformer","isDate","epochDay","year","month","day","epochDayToDate","createLocalDateTimeTransformer","isLocalDateTime","epochSecond","nano","epochSecondAndNanoToLocalDateTime","createDateTimeWithZoneIdTransformer","object","isDateTime","timeZoneId","localDateTime","DateTime","createDateTimeWithOffsetTransformer","obj","convert","toBigInt","toNumberOrInfinity","clone","create","getPrototypeOf","prop","isInt","freeze","default"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar packstream_1 = require(\"../packstream\");\nvar transformer_1 = require(\"./transformer\");\nvar temporal_factory_1 = require(\"./temporal-factory\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\nvar _a = neo4j_driver_core_1.internal.temporalUtil, dateToEpochDay = _a.dateToEpochDay, localDateTimeToEpochSecond = _a.localDateTimeToEpochSecond, localTimeToNanoOfDay = _a.localTimeToNanoOfDay;\nvar POINT_2D = 0x58;\nvar POINT_2D_STRUCT_SIZE = 3;\nvar POINT_3D = 0x59;\nvar POINT_3D_STRUCT_SIZE = 4;\nvar DURATION = 0x45;\nvar DURATION_STRUCT_SIZE = 4;\nvar LOCAL_TIME = 0x74;\nvar LOCAL_TIME_STRUCT_SIZE = 1;\nvar TIME = 0x54;\nvar TIME_STRUCT_SIZE = 2;\nvar DATE = 0x44;\nvar DATE_STRUCT_SIZE = 1;\nvar LOCAL_DATE_TIME = 0x64;\nvar LOCAL_DATE_TIME_STRUCT_SIZE = 2;\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x46;\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\nvar DATE_TIME_WITH_ZONE_ID = 0x66;\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\n/**\n * Creates the Point2D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint2DTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: POINT_2D,\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && (point.z === null || point.z === undefined); },\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_2D, [\n            (0, neo4j_driver_core_1.int)(point.srid),\n            point.x,\n            point.y\n        ]); },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Point2D', POINT_2D_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), srid = _a[0], x = _a[1], y = _a[2];\n            return new neo4j_driver_core_1.Point(srid, x, y, undefined // z\n            );\n        }\n    });\n}\n/**\n * Creates the Point3D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint3DTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: POINT_3D,\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && point.z !== null && point.z !== undefined; },\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_3D, [\n            (0, neo4j_driver_core_1.int)(point.srid),\n            point.x,\n            point.y,\n            point.z\n        ]); },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Point3D', POINT_3D_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), srid = _a[0], x = _a[1], y = _a[2], z = _a[3];\n            return new neo4j_driver_core_1.Point(srid, x, y, z);\n        }\n    });\n}\n/**\n * Creates the Duration Transformer\n * @returns {TypeTransformer}\n */\nfunction createDurationTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: DURATION,\n        isTypeInstance: neo4j_driver_core_1.isDuration,\n        toStructure: function (value) {\n            var months = (0, neo4j_driver_core_1.int)(value.months);\n            var days = (0, neo4j_driver_core_1.int)(value.days);\n            var seconds = (0, neo4j_driver_core_1.int)(value.seconds);\n            var nanoseconds = (0, neo4j_driver_core_1.int)(value.nanoseconds);\n            return new packstream_1.structure.Structure(DURATION, [months, days, seconds, nanoseconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Duration', DURATION_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), months = _a[0], days = _a[1], seconds = _a[2], nanoseconds = _a[3];\n            return new neo4j_driver_core_1.Duration(months, days, seconds, nanoseconds);\n        }\n    });\n}\n/**\n * Creates the LocalTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: LOCAL_TIME,\n        isTypeInstance: neo4j_driver_core_1.isLocalTime,\n        toStructure: function (value) {\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n            return new packstream_1.structure.Structure(LOCAL_TIME, [nanoOfDay]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('LocalTime', LOCAL_TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 1), nanoOfDay = _a[0];\n            var result = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the Time Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: TIME,\n        isTypeInstance: neo4j_driver_core_1.isTime,\n        toStructure: function (value) {\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n            var offsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(TIME, [nanoOfDay, offsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Time', TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 2), nanoOfDay = _a[0], offsetSeconds = _a[1];\n            var localTime = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n            var result = new neo4j_driver_core_1.Time(localTime.hour, localTime.minute, localTime.second, localTime.nanosecond, offsetSeconds);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the Date Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE,\n        isTypeInstance: neo4j_driver_core_1.isDate,\n        toStructure: function (value) {\n            var epochDay = dateToEpochDay(value.year, value.month, value.day);\n            return new packstream_1.structure.Structure(DATE, [epochDay]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Date', DATE_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 1), epochDay = _a[0];\n            var result = (0, temporal_factory_1.epochDayToDate)(epochDay);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the LocalDateTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalDateTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: LOCAL_DATE_TIME,\n        isTypeInstance: neo4j_driver_core_1.isLocalDateTime,\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            return new packstream_1.structure.Structure(LOCAL_DATE_TIME, [epochSecond, nano]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('LocalDateTime', LOCAL_DATE_TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 2), epochSecond = _a[0], nano = _a[1];\n            var result = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the DateTime with ZoneId Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithZoneIdTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE_TIME_WITH_ZONE_ID,\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId != null; },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneId = value.timeZoneId;\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [epochSecond, nano, timeZoneId]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneId = _a[2];\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, null, timeZoneId);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the DateTime with Offset Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithOffsetTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE_TIME_WITH_ZONE_OFFSET,\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId == null; },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [epochSecond, nano, timeZoneOffsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneOffsetSeconds = _a[2];\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\n    if (!disableLosslessIntegers && !useBigInt) {\n        return obj;\n    }\n    var convert = function (value) {\n        return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\n    };\n    var clone = Object.create(Object.getPrototypeOf(obj));\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\n            var value = obj[prop];\n            clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\n        }\n    }\n    Object.freeze(clone);\n    return clone;\n}\nexports.default = __assign(__assign({}, bolt_protocol_v1_transformer_1.default), { createPoint2DTransformer: createPoint2DTransformer, createPoint3DTransformer: createPoint3DTransformer, createDurationTransformer: createDurationTransformer, createLocalTimeTransformer: createLocalTimeTransformer, createTimeTransformer: createTimeTransformer, createDateTransformer: createDateTransformer, createLocalDateTimeTransformer: createLocalDateTimeTransformer, createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer, createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer });\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}