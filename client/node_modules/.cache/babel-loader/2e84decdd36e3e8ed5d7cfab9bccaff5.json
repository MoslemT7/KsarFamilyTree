{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyStructSize = exports.Structure = void 0;\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\n/**\n * A Structure have a signature and fields.\n */\nvar Structure = /** @class */function () {\n  /**\n   * Create new instance\n   */\n  function Structure(signature, fields) {\n    this.signature = signature;\n    this.fields = fields;\n  }\n  Object.defineProperty(Structure.prototype, \"size\", {\n    get: function () {\n      return this.fields.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Structure.prototype.toString = function () {\n    var fieldStr = '';\n    for (var i = 0; i < this.fields.length; i++) {\n      if (i > 0) {\n        fieldStr += ', ';\n      }\n      fieldStr += this.fields[i];\n    }\n    return 'Structure(' + this.signature + ', [' + fieldStr + '])';\n  };\n  return Structure;\n}();\nexports.Structure = Structure;\nfunction verifyStructSize(structName, expectedSize, actualSize) {\n  if (expectedSize !== actualSize) {\n    throw (0, neo4j_driver_core_1.newError)(\"Wrong struct size for \".concat(structName, \", expected \").concat(expectedSize, \" but was \").concat(actualSize), PROTOCOL_ERROR);\n  }\n}\nexports.verifyStructSize = verifyStructSize;\nexports.default = Structure;","map":{"version":3,"names":["Object","defineProperty","exports","value","verifyStructSize","Structure","neo4j_driver_core_1","require","PROTOCOL_ERROR","error","signature","fields","prototype","get","length","enumerable","configurable","toString","fieldStr","i","structName","expectedSize","actualSize","newError","concat","default"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-bolt-connection/lib/packstream/structure.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyStructSize = exports.Structure = void 0;\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\n/**\n * A Structure have a signature and fields.\n */\nvar Structure = /** @class */ (function () {\n    /**\n     * Create new instance\n     */\n    function Structure(signature, fields) {\n        this.signature = signature;\n        this.fields = fields;\n    }\n    Object.defineProperty(Structure.prototype, \"size\", {\n        get: function () {\n            return this.fields.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Structure.prototype.toString = function () {\n        var fieldStr = '';\n        for (var i = 0; i < this.fields.length; i++) {\n            if (i > 0) {\n                fieldStr += ', ';\n            }\n            fieldStr += this.fields[i];\n        }\n        return 'Structure(' + this.signature + ', [' + fieldStr + '])';\n    };\n    return Structure;\n}());\nexports.Structure = Structure;\nfunction verifyStructSize(structName, expectedSize, actualSize) {\n    if (expectedSize !== actualSize) {\n        throw (0, neo4j_driver_core_1.newError)(\"Wrong struct size for \".concat(structName, \", expected \").concat(expectedSize, \" but was \").concat(actualSize), PROTOCOL_ERROR);\n    }\n}\nexports.verifyStructSize = verifyStructSize;\nexports.default = Structure;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAGF,OAAO,CAACG,SAAS,GAAG,KAAK,CAAC;AACrD,IAAIC,mBAAmB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACtD,IAAIC,cAAc,GAAGF,mBAAmB,CAACG,KAAK,CAACD,cAAc;AAC7D;AACA;AACA;AACA,IAAIH,SAAS,GAAG,aAAe,YAAY;EACvC;AACJ;AACA;EACI,SAASA,SAASA,CAACK,SAAS,EAAEC,MAAM,EAAE;IAClC,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAX,MAAM,CAACC,cAAc,CAACI,SAAS,CAACO,SAAS,EAAE,MAAM,EAAE;IAC/CC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACF,MAAM,CAACG,MAAM;IAC7B,CAAC;IACDC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,SAAS,CAACO,SAAS,CAACK,QAAQ,GAAG,YAAY;IACvC,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACR,MAAM,CAACG,MAAM,EAAEK,CAAC,EAAE,EAAE;MACzC,IAAIA,CAAC,GAAG,CAAC,EAAE;QACPD,QAAQ,IAAI,IAAI;MACpB;MACAA,QAAQ,IAAI,IAAI,CAACP,MAAM,CAACQ,CAAC,CAAC;IAC9B;IACA,OAAO,YAAY,GAAG,IAAI,CAACT,SAAS,GAAG,KAAK,GAAGQ,QAAQ,GAAG,IAAI;EAClE,CAAC;EACD,OAAOb,SAAS;AACpB,CAAC,CAAC,CAAE;AACJH,OAAO,CAACG,SAAS,GAAGA,SAAS;AAC7B,SAASD,gBAAgBA,CAACgB,UAAU,EAAEC,YAAY,EAAEC,UAAU,EAAE;EAC5D,IAAID,YAAY,KAAKC,UAAU,EAAE;IAC7B,MAAM,CAAC,CAAC,EAAEhB,mBAAmB,CAACiB,QAAQ,EAAE,wBAAwB,CAACC,MAAM,CAACJ,UAAU,EAAE,aAAa,CAAC,CAACI,MAAM,CAACH,YAAY,EAAE,WAAW,CAAC,CAACG,MAAM,CAACF,UAAU,CAAC,EAAEd,cAAc,CAAC;EAC5K;AACJ;AACAN,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3CF,OAAO,CAACuB,OAAO,GAAGpB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script"}