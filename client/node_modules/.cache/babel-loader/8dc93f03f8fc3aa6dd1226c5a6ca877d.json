{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar pool_config_1 = __importDefault(require(\"./pool-config\"));\nvar error_1 = require(\"../../error\");\nvar logger_1 = require(\"../logger\");\nvar Pool = /** @class */function () {\n  /**\n   * @param {function(acquisitionContext: object, address: ServerAddress, function(address: ServerAddress, resource: object): Promise<object>): Promise<object>} create\n   *                an allocation function that creates a promise with a new resource. It's given an address for which to\n   *                allocate the connection and a function that will return the resource to the pool if invoked, which is\n   *                meant to be called on .dispose or .close or whatever mechanism the resource uses to finalize.\n   * @param {function(acquisitionContext: object, resource: object): boolean} validateOnAcquire\n   *                called at various times when an instance is acquired\n   *                If this returns false, the resource will be evicted\n   * @param {function(resource: object): boolean} validateOnRelease\n   *                called at various times when an instance is released\n   *                If this returns false, the resource will be evicted\n   * @param {function(resource: object): Promise<void>} destroy\n   *                called with the resource when it is evicted from this pool\n   * @param {function(resource: object, observer: { onError }): void} installIdleObserver\n   *                called when the resource is released back to pool\n   * @param {function(resource: object): void} removeIdleObserver\n   *                called when the resource is acquired from the pool\n   * @param {PoolConfig} config configuration for the new driver.\n   * @param {Logger} log the driver logger.\n   */\n  function Pool(_a) {\n    var _b = _a.create,\n      create = _b === void 0 ? function (acquisitionContext, address, release) {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, Promise.reject(new Error('Not implemented'))];\n              case 1:\n                return [2 /*return*/, _a.sent()];\n            }\n          });\n        });\n      } : _b,\n      _c = _a.destroy,\n      destroy = _c === void 0 ? function (conn) {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, Promise.resolve()];\n              case 1:\n                return [2 /*return*/, _a.sent()];\n            }\n          });\n        });\n      } : _c,\n      _d = _a.validateOnAcquire,\n      validateOnAcquire = _d === void 0 ? function (acquisitionContext, conn) {\n        return true;\n      } : _d,\n      _e = _a.validateOnRelease,\n      validateOnRelease = _e === void 0 ? function (conn) {\n        return true;\n      } : _e,\n      _f = _a.installIdleObserver,\n      installIdleObserver = _f === void 0 ? function (conn, observer) {} : _f,\n      _g = _a.removeIdleObserver,\n      removeIdleObserver = _g === void 0 ? function (conn) {} : _g,\n      _h = _a.config,\n      config = _h === void 0 ? pool_config_1.default.defaultConfig() : _h,\n      _j = _a.log,\n      log = _j === void 0 ? logger_1.Logger.noOp() : _j;\n    var _this = this;\n    this._create = create;\n    this._destroy = destroy;\n    this._validateOnAcquire = validateOnAcquire;\n    this._validateOnRelease = validateOnRelease;\n    this._installIdleObserver = installIdleObserver;\n    this._removeIdleObserver = removeIdleObserver;\n    this._maxSize = config.maxSize;\n    this._acquisitionTimeout = config.acquisitionTimeout;\n    this._pools = {};\n    this._pendingCreates = {};\n    this._acquireRequests = {};\n    this._activeResourceCounts = {};\n    this._release = this._release.bind(this);\n    this._log = log;\n    this._closed = false;\n  }\n  /**\n   * Acquire and idle resource fom the pool or create a new one.\n   * @param {object} acquisitionContext the acquisition context used for create and validateOnAcquire connection\n   * @param {ServerAddress} address the address for which we're acquiring.\n   * @param {object} config the config\n   * @param {boolean} config.requireNew Indicate it requires a new resource\n   * @return {Promise<Object>} resource that is ready to use.\n   */\n  Pool.prototype.acquire = function (acquisitionContext, address, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var key, allRequests, requests;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            key = address.asKey();\n            allRequests = this._acquireRequests;\n            requests = allRequests[key];\n            if (requests == null) {\n              allRequests[key] = [];\n            }\n            return [4 /*yield*/, new Promise(function (resolve, reject) {\n              var timeoutId = setTimeout(function () {\n                // acquisition timeout fired\n                // remove request from the queue of pending requests, if it's still there\n                // request might've been taken out by the release operation\n                var pendingRequests = allRequests[key];\n                if (pendingRequests != null) {\n                  allRequests[key] = pendingRequests.filter(function (item) {\n                    return item !== request;\n                  });\n                }\n                if (request.isCompleted()) {\n                  // request already resolved/rejected by the release operation; nothing to do\n                } else {\n                  // request is still pending and needs to be failed\n                  var activeCount = _this.activeResourceCount(address);\n                  var idleCount = _this.has(address) ? _this._pools[key].length : 0;\n                  request.reject((0, error_1.newError)(\"Connection acquisition timed out in \".concat(_this._acquisitionTimeout, \" ms. Pool status: Active conn count = \").concat(activeCount, \", Idle conn count = \").concat(idleCount, \".\")));\n                }\n              }, _this._acquisitionTimeout);\n              if (typeof timeoutId === 'object') {\n                // eslint-disable-next-line\n                // @ts-ignore\n                timeoutId.unref();\n              }\n              var request = new PendingRequest(key, acquisitionContext, config, resolve, reject, timeoutId, _this._log);\n              allRequests[key].push(request);\n              _this._processPendingAcquireRequests(address);\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Destroy all idle resources for the given address.\n   * @param {ServerAddress} address the address of the server to purge its pool.\n   * @returns {Promise<void>} A promise that is resolved when the resources are purged\n   */\n  Pool.prototype.purge = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._purgeKey(address.asKey())];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  Pool.prototype.apply = function (address, resourceConsumer) {\n    var key = address.asKey();\n    if (key in this._pools) {\n      this._pools[key].apply(resourceConsumer);\n    }\n  };\n  /**\n   * Destroy all idle resources in this pool.\n   * @returns {Promise<void>} A promise that is resolved when the resources are purged\n   */\n  Pool.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this._closed = true;\n            return [4 /*yield*/, Promise.all(Object.keys(this._pools).map(function (key) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, this._purgeKey(key)];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            })).then()];\n          case 1:\n            /**\n             * The lack of Promise consuming was making the driver do not close properly in the scenario\n             * captured at result.test.js:it('should handle missing onCompleted'). The test was timing out\n             * because while waiting for the driver close.\n             *\n             * Consuming the Promise.all or by calling then or by awaiting in the result inside this method solved\n             * the issue somehow.\n             *\n             * PS: the return of this method was already awaited at PooledConnectionProvider.close, but the await bellow\n             * seems to be need also.\n             */\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Keep the idle resources for the provided addresses and purge the rest.\n   * @returns {Promise<void>} A promise that is resolved when the other resources are purged\n   */\n  Pool.prototype.keepAll = function (addresses) {\n    return __awaiter(this, void 0, void 0, function () {\n      var keysToKeep, keysPresent, keysToPurge;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            keysToKeep = addresses.map(function (a) {\n              return a.asKey();\n            });\n            keysPresent = Object.keys(this._pools);\n            keysToPurge = keysPresent.filter(function (k) {\n              return !keysToKeep.includes(k);\n            });\n            return [4 /*yield*/, Promise.all(keysToPurge.map(function (key) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, this._purgeKey(key)];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            })).then()];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Check if this pool contains resources for the given address.\n   * @param {ServerAddress} address the address of the server to check.\n   * @return {boolean} `true` when pool contains entries for the given key, <code>false</code> otherwise.\n   */\n  Pool.prototype.has = function (address) {\n    return address.asKey() in this._pools;\n  };\n  /**\n   * Get count of active (checked out of the pool) resources for the given key.\n   * @param {ServerAddress} address the address of the server to check.\n   * @return {number} count of resources acquired by clients.\n   */\n  Pool.prototype.activeResourceCount = function (address) {\n    var _a;\n    return (_a = this._activeResourceCounts[address.asKey()]) !== null && _a !== void 0 ? _a : 0;\n  };\n  Pool.prototype._getOrInitializePoolFor = function (key) {\n    var pool = this._pools[key];\n    if (pool == null) {\n      pool = new SingleAddressPool();\n      this._pools[key] = pool;\n      this._pendingCreates[key] = 0;\n    }\n    return pool;\n  };\n  Pool.prototype._acquire = function (acquisitionContext, address, requireNew) {\n    return __awaiter(this, void 0, void 0, function () {\n      var key, pool, resource_1, valid, e_1, numConnections, resource, numConnections, resource_2;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._closed) {\n              throw (0, error_1.newError)('Pool is closed, it is no more able to serve requests.');\n            }\n            key = address.asKey();\n            pool = this._getOrInitializePoolFor(key);\n            if (!!requireNew) return [3 /*break*/, 10];\n            _a.label = 1;\n          case 1:\n            if (!(pool.length > 0)) return [3 /*break*/, 10];\n            resource_1 = pool.pop();\n            if (resource_1 == null) {\n              return [3 /*break*/, 1];\n            }\n            resourceAcquired(key, this._activeResourceCounts);\n            if (this._removeIdleObserver != null) {\n              this._removeIdleObserver(resource_1);\n            }\n            valid = false;\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 6]);\n            return [4 /*yield*/, this._validateOnAcquire(acquisitionContext, resource_1)];\n          case 3:\n            valid = _a.sent();\n            return [3 /*break*/, 6];\n          case 4:\n            e_1 = _a.sent();\n            resourceReleased(key, this._activeResourceCounts);\n            pool.removeInUse(resource_1);\n            return [4 /*yield*/, this._destroy(resource_1)];\n          case 5:\n            _a.sent();\n            throw e_1;\n          case 6:\n            if (!valid) return [3 /*break*/, 7];\n            // idle resource is valid and can be acquired\n            if (this._log.isDebugEnabled()) {\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n              this._log.debug(\"\".concat(resource_1, \" acquired from the pool \").concat(key));\n            }\n            return [2 /*return*/, {\n              resource: resource_1,\n              pool: pool\n            }];\n          case 7:\n            resourceReleased(key, this._activeResourceCounts);\n            pool.removeInUse(resource_1);\n            return [4 /*yield*/, this._destroy(resource_1)];\n          case 8:\n            _a.sent();\n            _a.label = 9;\n          case 9:\n            return [3 /*break*/, 1];\n          case 10:\n            // Ensure requested max pool size\n            if (this._maxSize > 0) {\n              numConnections = this.activeResourceCount(address) + this._pendingCreates[key];\n              if (numConnections >= this._maxSize) {\n                // Will put this request in queue instead since the pool is full\n                return [2 /*return*/, {\n                  resource: null,\n                  pool: pool\n                }];\n              }\n            }\n            // there exist no idle valid resources, create a new one for acquisition\n            // Keep track of how many pending creates there are to avoid making too many connections.\n            this._pendingCreates[key] = this._pendingCreates[key] + 1;\n            _a.label = 11;\n          case 11:\n            _a.trys.push([11,, 15, 16]);\n            numConnections = this.activeResourceCount(address) + pool.length;\n            if (!(numConnections >= this._maxSize && requireNew)) return [3 /*break*/, 13];\n            resource_2 = pool.pop();\n            if (!(resource_2 != null)) return [3 /*break*/, 13];\n            if (this._removeIdleObserver != null) {\n              this._removeIdleObserver(resource_2);\n            }\n            pool.removeInUse(resource_2);\n            return [4 /*yield*/, this._destroy(resource_2)];\n          case 12:\n            _a.sent();\n            _a.label = 13;\n          case 13:\n            return [4 /*yield*/, this._create(acquisitionContext, address, function (address, resource) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, this._release(address, resource, pool)];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            })];\n          case 14:\n            // Invoke callback that creates actual connection\n            resource = _a.sent();\n            pool.pushInUse(resource);\n            resourceAcquired(key, this._activeResourceCounts);\n            if (this._log.isDebugEnabled()) {\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n              this._log.debug(\"\".concat(resource, \" created for the pool \").concat(key));\n            }\n            return [3 /*break*/, 16];\n          case 15:\n            this._pendingCreates[key] = this._pendingCreates[key] - 1;\n            return [7 /*endfinally*/];\n          case 16:\n            return [2 /*return*/, {\n              resource: resource,\n              pool: pool\n            }];\n        }\n      });\n    });\n  };\n  Pool.prototype._release = function (address, resource, pool) {\n    return __awaiter(this, void 0, void 0, function () {\n      var key;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            key = address.asKey();\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 9, 10]);\n            if (!pool.isActive()) return [3 /*break*/, 6];\n            return [4 /*yield*/, this._validateOnRelease(resource)];\n          case 2:\n            if (!!_a.sent()) return [3 /*break*/, 4];\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n              \"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because it is not functional\"));\n            }\n            pool.removeInUse(resource);\n            return [4 /*yield*/, this._destroy(resource)];\n          case 3:\n            _a.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            if (this._installIdleObserver != null) {\n              this._installIdleObserver(resource, {\n                onError: function (error) {\n                  _this._log.debug(\n                  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                  \"Idle connection \".concat(resource, \" destroyed because of error: \").concat(error));\n                  var pool = _this._pools[key];\n                  if (pool != null) {\n                    _this._pools[key] = pool.filter(function (r) {\n                      return r !== resource;\n                    });\n                    pool.removeInUse(resource);\n                  }\n                  // let's not care about background clean-ups due to errors but just trigger the destroy\n                  // process for the resource, we especially catch any errors and ignore them to avoid\n                  // unhandled promise rejection warnings\n                  _this._destroy(resource).catch(function () {});\n                }\n              });\n            }\n            pool.push(resource);\n            if (this._log.isDebugEnabled()) {\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n              this._log.debug(\"\".concat(resource, \" released to the pool \").concat(key));\n            }\n            _a.label = 5;\n          case 5:\n            return [3 /*break*/, 8];\n          case 6:\n            // key has been purged, don't put it back, just destroy the resource\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n              \"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because pool has been purged\"));\n            }\n            pool.removeInUse(resource);\n            return [4 /*yield*/, this._destroy(resource)];\n          case 7:\n            _a.sent();\n            _a.label = 8;\n          case 8:\n            return [3 /*break*/, 10];\n          case 9:\n            resourceReleased(key, this._activeResourceCounts);\n            this._processPendingAcquireRequests(address);\n            return [7 /*endfinally*/];\n          case 10:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Pool.prototype._purgeKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pool, destructionList, resource;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            pool = this._pools[key];\n            destructionList = [];\n            if (!(pool != null)) return [3 /*break*/, 2];\n            while (pool.length > 0) {\n              resource = pool.pop();\n              if (resource == null) {\n                continue;\n              }\n              if (this._removeIdleObserver != null) {\n                this._removeIdleObserver(resource);\n              }\n              destructionList.push(this._destroy(resource));\n            }\n            pool.close();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this._pools[key];\n            return [4 /*yield*/, Promise.all(destructionList)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Pool.prototype._processPendingAcquireRequests = function (address) {\n    var _this = this;\n    var key = address.asKey();\n    var requests = this._acquireRequests[key];\n    if (requests != null) {\n      var pendingRequest_1 = requests.shift(); // pop a pending acquire request\n      if (pendingRequest_1 != null) {\n        this._acquire(pendingRequest_1.context, address, pendingRequest_1.requireNew).catch(function (error) {\n          // failed to acquire/create a new connection to resolve the pending acquire request\n          // propagate the error by failing the pending request\n          pendingRequest_1.reject(error);\n          return {\n            resource: null,\n            pool: null\n          };\n        }).then(function (_a) {\n          var resource = _a.resource,\n            pool = _a.pool;\n          // there is not situation where the pool resource is not null and the\n          // pool is null.\n          if (resource != null && pool != null) {\n            // managed to acquire a valid resource from the pool\n            if (pendingRequest_1.isCompleted()) {\n              // request has been completed, most likely failed by a timeout\n              // return the acquired resource back to the pool\n              _this._release(address, resource, pool).catch(function (error) {\n                if (_this._log.isDebugEnabled()) {\n                  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                  _this._log.debug(\"\".concat(resource, \" could not be release back to the pool. Cause: \").concat(error));\n                }\n              });\n            } else {\n              // request is still pending and can be resolved with the newly acquired resource\n              pendingRequest_1.resolve(resource); // resolve the pending request with the acquired resource\n            }\n          } else {\n            // failed to acquire a valid resource from the pool\n            // return the pending request back to the pool\n            if (!pendingRequest_1.isCompleted()) {\n              if (_this._acquireRequests[key] == null) {\n                _this._acquireRequests[key] = [];\n              }\n              _this._acquireRequests[key].unshift(pendingRequest_1);\n            }\n          }\n        }).catch(function (error) {\n          return pendingRequest_1.reject(error);\n        });\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this._acquireRequests[key];\n      }\n    }\n  };\n  return Pool;\n}();\n/**\n * Increment active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceAcquired(key, activeResourceCounts) {\n  var _a;\n  var currentCount = (_a = activeResourceCounts[key]) !== null && _a !== void 0 ? _a : 0;\n  activeResourceCounts[key] = currentCount + 1;\n}\n/**\n * Decrement active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceReleased(key, activeResourceCounts) {\n  var _a;\n  var currentCount = (_a = activeResourceCounts[key]) !== null && _a !== void 0 ? _a : 0;\n  var nextCount = currentCount - 1;\n  if (nextCount > 0) {\n    activeResourceCounts[key] = nextCount;\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete activeResourceCounts[key];\n  }\n}\nvar PendingRequest = /** @class */function () {\n  function PendingRequest(key, context, config, resolve, reject, timeoutId, log) {\n    this._key = key;\n    this._context = context;\n    this._resolve = resolve;\n    this._reject = reject;\n    this._timeoutId = timeoutId;\n    this._log = log;\n    this._completed = false;\n    this._config = config !== null && config !== void 0 ? config : {};\n  }\n  Object.defineProperty(PendingRequest.prototype, \"context\", {\n    get: function () {\n      return this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PendingRequest.prototype, \"requireNew\", {\n    get: function () {\n      var _a;\n      return (_a = this._config.requireNew) !== null && _a !== void 0 ? _a : false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PendingRequest.prototype.isCompleted = function () {\n    return this._completed;\n  };\n  PendingRequest.prototype.resolve = function (resource) {\n    if (this._completed) {\n      return;\n    }\n    this._completed = true;\n    clearTimeout(this._timeoutId);\n    if (this._log.isDebugEnabled()) {\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      this._log.debug(\"\".concat(resource, \" acquired from the pool \").concat(this._key));\n    }\n    this._resolve(resource);\n  };\n  PendingRequest.prototype.reject = function (error) {\n    if (this._completed) {\n      return;\n    }\n    this._completed = true;\n    clearTimeout(this._timeoutId);\n    this._reject(error);\n  };\n  return PendingRequest;\n}();\nvar SingleAddressPool = /** @class */function () {\n  function SingleAddressPool() {\n    this._active = true;\n    this._elements = [];\n    this._elementsInUse = new Set();\n  }\n  SingleAddressPool.prototype.isActive = function () {\n    return this._active;\n  };\n  SingleAddressPool.prototype.close = function () {\n    this._active = false;\n    this._elements = [];\n    this._elementsInUse = new Set();\n  };\n  SingleAddressPool.prototype.filter = function (predicate) {\n    this._elements = this._elements.filter(predicate);\n    return this;\n  };\n  SingleAddressPool.prototype.apply = function (resourceConsumer) {\n    this._elements.forEach(resourceConsumer);\n    this._elementsInUse.forEach(resourceConsumer);\n  };\n  Object.defineProperty(SingleAddressPool.prototype, \"length\", {\n    get: function () {\n      return this._elements.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SingleAddressPool.prototype.pop = function () {\n    var element = this._elements.pop();\n    if (element != null) {\n      this._elementsInUse.add(element);\n    }\n    return element;\n  };\n  SingleAddressPool.prototype.push = function (element) {\n    this._elementsInUse.delete(element);\n    return this._elements.push(element);\n  };\n  SingleAddressPool.prototype.pushInUse = function (element) {\n    this._elementsInUse.add(element);\n  };\n  SingleAddressPool.prototype.removeInUse = function (element) {\n    this._elementsInUse.delete(element);\n  };\n  return SingleAddressPool;\n}();\nexports.default = Pool;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","pool_config_1","require","error_1","logger_1","Pool","_a","_b","create","acquisitionContext","address","release","_this","Error","_c","destroy","conn","_d","validateOnAcquire","_e","validateOnRelease","_f","installIdleObserver","observer","_g","removeIdleObserver","_h","config","default","defaultConfig","_j","log","Logger","noOp","_create","_destroy","_validateOnAcquire","_validateOnRelease","_installIdleObserver","_removeIdleObserver","_maxSize","maxSize","_acquisitionTimeout","acquisitionTimeout","_pools","_pendingCreates","_acquireRequests","_activeResourceCounts","_release","bind","_log","_closed","prototype","acquire","key","allRequests","requests","asKey","timeoutId","setTimeout","pendingRequests","filter","item","request","isCompleted","activeCount","activeResourceCount","idleCount","has","newError","concat","unref","PendingRequest","_processPendingAcquireRequests","purge","_purgeKey","resourceConsumer","close","all","keys","map","keepAll","addresses","keysToKeep","keysPresent","keysToPurge","a","k","includes","_getOrInitializePoolFor","pool","SingleAddressPool","_acquire","requireNew","resource_1","valid","e_1","numConnections","resource","resource_2","resourceAcquired","resourceReleased","removeInUse","isDebugEnabled","debug","pushInUse","isActive","onError","error","r","catch","destructionList","pendingRequest_1","shift","context","unshift","activeResourceCounts","currentCount","nextCount","_key","_context","_resolve","_reject","_timeoutId","_completed","_config","get","enumerable","configurable","clearTimeout","_active","_elements","_elementsInUse","Set","predicate","forEach","element","add","delete"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver-core/lib/internal/pool/pool.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pool_config_1 = __importDefault(require(\"./pool-config\"));\nvar error_1 = require(\"../../error\");\nvar logger_1 = require(\"../logger\");\nvar Pool = /** @class */ (function () {\n    /**\n     * @param {function(acquisitionContext: object, address: ServerAddress, function(address: ServerAddress, resource: object): Promise<object>): Promise<object>} create\n     *                an allocation function that creates a promise with a new resource. It's given an address for which to\n     *                allocate the connection and a function that will return the resource to the pool if invoked, which is\n     *                meant to be called on .dispose or .close or whatever mechanism the resource uses to finalize.\n     * @param {function(acquisitionContext: object, resource: object): boolean} validateOnAcquire\n     *                called at various times when an instance is acquired\n     *                If this returns false, the resource will be evicted\n     * @param {function(resource: object): boolean} validateOnRelease\n     *                called at various times when an instance is released\n     *                If this returns false, the resource will be evicted\n     * @param {function(resource: object): Promise<void>} destroy\n     *                called with the resource when it is evicted from this pool\n     * @param {function(resource: object, observer: { onError }): void} installIdleObserver\n     *                called when the resource is released back to pool\n     * @param {function(resource: object): void} removeIdleObserver\n     *                called when the resource is acquired from the pool\n     * @param {PoolConfig} config configuration for the new driver.\n     * @param {Logger} log the driver logger.\n     */\n    function Pool(_a) {\n        var _b = _a.create, create = _b === void 0 ? function (acquisitionContext, address, release) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, Promise.reject(new Error('Not implemented'))];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        }); }); } : _b, _c = _a.destroy, destroy = _c === void 0 ? function (conn) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, Promise.resolve()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        }); }); } : _c, _d = _a.validateOnAcquire, validateOnAcquire = _d === void 0 ? function (acquisitionContext, conn) { return true; } : _d, _e = _a.validateOnRelease, validateOnRelease = _e === void 0 ? function (conn) { return true; } : _e, _f = _a.installIdleObserver, installIdleObserver = _f === void 0 ? function (conn, observer) { } : _f, _g = _a.removeIdleObserver, removeIdleObserver = _g === void 0 ? function (conn) { } : _g, _h = _a.config, config = _h === void 0 ? pool_config_1.default.defaultConfig() : _h, _j = _a.log, log = _j === void 0 ? logger_1.Logger.noOp() : _j;\n        var _this = this;\n        this._create = create;\n        this._destroy = destroy;\n        this._validateOnAcquire = validateOnAcquire;\n        this._validateOnRelease = validateOnRelease;\n        this._installIdleObserver = installIdleObserver;\n        this._removeIdleObserver = removeIdleObserver;\n        this._maxSize = config.maxSize;\n        this._acquisitionTimeout = config.acquisitionTimeout;\n        this._pools = {};\n        this._pendingCreates = {};\n        this._acquireRequests = {};\n        this._activeResourceCounts = {};\n        this._release = this._release.bind(this);\n        this._log = log;\n        this._closed = false;\n    }\n    /**\n     * Acquire and idle resource fom the pool or create a new one.\n     * @param {object} acquisitionContext the acquisition context used for create and validateOnAcquire connection\n     * @param {ServerAddress} address the address for which we're acquiring.\n     * @param {object} config the config\n     * @param {boolean} config.requireNew Indicate it requires a new resource\n     * @return {Promise<Object>} resource that is ready to use.\n     */\n    Pool.prototype.acquire = function (acquisitionContext, address, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key, allRequests, requests;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        key = address.asKey();\n                        allRequests = this._acquireRequests;\n                        requests = allRequests[key];\n                        if (requests == null) {\n                            allRequests[key] = [];\n                        }\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                var timeoutId = setTimeout(function () {\n                                    // acquisition timeout fired\n                                    // remove request from the queue of pending requests, if it's still there\n                                    // request might've been taken out by the release operation\n                                    var pendingRequests = allRequests[key];\n                                    if (pendingRequests != null) {\n                                        allRequests[key] = pendingRequests.filter(function (item) { return item !== request; });\n                                    }\n                                    if (request.isCompleted()) {\n                                        // request already resolved/rejected by the release operation; nothing to do\n                                    }\n                                    else {\n                                        // request is still pending and needs to be failed\n                                        var activeCount = _this.activeResourceCount(address);\n                                        var idleCount = _this.has(address) ? _this._pools[key].length : 0;\n                                        request.reject((0, error_1.newError)(\"Connection acquisition timed out in \".concat(_this._acquisitionTimeout, \" ms. Pool status: Active conn count = \").concat(activeCount, \", Idle conn count = \").concat(idleCount, \".\")));\n                                    }\n                                }, _this._acquisitionTimeout);\n                                if (typeof timeoutId === 'object') {\n                                    // eslint-disable-next-line\n                                    // @ts-ignore\n                                    timeoutId.unref();\n                                }\n                                var request = new PendingRequest(key, acquisitionContext, config, resolve, reject, timeoutId, _this._log);\n                                allRequests[key].push(request);\n                                _this._processPendingAcquireRequests(address);\n                            })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Destroy all idle resources for the given address.\n     * @param {ServerAddress} address the address of the server to purge its pool.\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\n     */\n    Pool.prototype.purge = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._purgeKey(address.asKey())];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Pool.prototype.apply = function (address, resourceConsumer) {\n        var key = address.asKey();\n        if (key in this._pools) {\n            this._pools[key].apply(resourceConsumer);\n        }\n    };\n    /**\n     * Destroy all idle resources in this pool.\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\n     */\n    Pool.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._closed = true;\n                        return [4 /*yield*/, Promise.all(Object.keys(this._pools).map(function (key) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, this._purgeKey(key)];\n                                    case 1: return [2 /*return*/, _a.sent()];\n                                }\n                            }); }); })).then()];\n                    case 1: \n                    /**\n                     * The lack of Promise consuming was making the driver do not close properly in the scenario\n                     * captured at result.test.js:it('should handle missing onCompleted'). The test was timing out\n                     * because while waiting for the driver close.\n                     *\n                     * Consuming the Promise.all or by calling then or by awaiting in the result inside this method solved\n                     * the issue somehow.\n                     *\n                     * PS: the return of this method was already awaited at PooledConnectionProvider.close, but the await bellow\n                     * seems to be need also.\n                     */\n                    return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Keep the idle resources for the provided addresses and purge the rest.\n     * @returns {Promise<void>} A promise that is resolved when the other resources are purged\n     */\n    Pool.prototype.keepAll = function (addresses) {\n        return __awaiter(this, void 0, void 0, function () {\n            var keysToKeep, keysPresent, keysToPurge;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        keysToKeep = addresses.map(function (a) { return a.asKey(); });\n                        keysPresent = Object.keys(this._pools);\n                        keysToPurge = keysPresent.filter(function (k) { return !keysToKeep.includes(k); });\n                        return [4 /*yield*/, Promise.all(keysToPurge.map(function (key) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, this._purgeKey(key)];\n                                    case 1: return [2 /*return*/, _a.sent()];\n                                }\n                            }); }); })).then()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Check if this pool contains resources for the given address.\n     * @param {ServerAddress} address the address of the server to check.\n     * @return {boolean} `true` when pool contains entries for the given key, <code>false</code> otherwise.\n     */\n    Pool.prototype.has = function (address) {\n        return address.asKey() in this._pools;\n    };\n    /**\n     * Get count of active (checked out of the pool) resources for the given key.\n     * @param {ServerAddress} address the address of the server to check.\n     * @return {number} count of resources acquired by clients.\n     */\n    Pool.prototype.activeResourceCount = function (address) {\n        var _a;\n        return (_a = this._activeResourceCounts[address.asKey()]) !== null && _a !== void 0 ? _a : 0;\n    };\n    Pool.prototype._getOrInitializePoolFor = function (key) {\n        var pool = this._pools[key];\n        if (pool == null) {\n            pool = new SingleAddressPool();\n            this._pools[key] = pool;\n            this._pendingCreates[key] = 0;\n        }\n        return pool;\n    };\n    Pool.prototype._acquire = function (acquisitionContext, address, requireNew) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key, pool, resource_1, valid, e_1, numConnections, resource, numConnections, resource_2;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._closed) {\n                            throw (0, error_1.newError)('Pool is closed, it is no more able to serve requests.');\n                        }\n                        key = address.asKey();\n                        pool = this._getOrInitializePoolFor(key);\n                        if (!!requireNew) return [3 /*break*/, 10];\n                        _a.label = 1;\n                    case 1:\n                        if (!(pool.length > 0)) return [3 /*break*/, 10];\n                        resource_1 = pool.pop();\n                        if (resource_1 == null) {\n                            return [3 /*break*/, 1];\n                        }\n                        resourceAcquired(key, this._activeResourceCounts);\n                        if (this._removeIdleObserver != null) {\n                            this._removeIdleObserver(resource_1);\n                        }\n                        valid = false;\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 6]);\n                        return [4 /*yield*/, this._validateOnAcquire(acquisitionContext, resource_1)];\n                    case 3:\n                        valid = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4:\n                        e_1 = _a.sent();\n                        resourceReleased(key, this._activeResourceCounts);\n                        pool.removeInUse(resource_1);\n                        return [4 /*yield*/, this._destroy(resource_1)];\n                    case 5:\n                        _a.sent();\n                        throw e_1;\n                    case 6:\n                        if (!valid) return [3 /*break*/, 7];\n                        // idle resource is valid and can be acquired\n                        if (this._log.isDebugEnabled()) {\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                            this._log.debug(\"\".concat(resource_1, \" acquired from the pool \").concat(key));\n                        }\n                        return [2 /*return*/, { resource: resource_1, pool: pool }];\n                    case 7:\n                        resourceReleased(key, this._activeResourceCounts);\n                        pool.removeInUse(resource_1);\n                        return [4 /*yield*/, this._destroy(resource_1)];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9: return [3 /*break*/, 1];\n                    case 10:\n                        // Ensure requested max pool size\n                        if (this._maxSize > 0) {\n                            numConnections = this.activeResourceCount(address) + this._pendingCreates[key];\n                            if (numConnections >= this._maxSize) {\n                                // Will put this request in queue instead since the pool is full\n                                return [2 /*return*/, { resource: null, pool: pool }];\n                            }\n                        }\n                        // there exist no idle valid resources, create a new one for acquisition\n                        // Keep track of how many pending creates there are to avoid making too many connections.\n                        this._pendingCreates[key] = this._pendingCreates[key] + 1;\n                        _a.label = 11;\n                    case 11:\n                        _a.trys.push([11, , 15, 16]);\n                        numConnections = this.activeResourceCount(address) + pool.length;\n                        if (!(numConnections >= this._maxSize && requireNew)) return [3 /*break*/, 13];\n                        resource_2 = pool.pop();\n                        if (!(resource_2 != null)) return [3 /*break*/, 13];\n                        if (this._removeIdleObserver != null) {\n                            this._removeIdleObserver(resource_2);\n                        }\n                        pool.removeInUse(resource_2);\n                        return [4 /*yield*/, this._destroy(resource_2)];\n                    case 12:\n                        _a.sent();\n                        _a.label = 13;\n                    case 13: return [4 /*yield*/, this._create(acquisitionContext, address, function (address, resource) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this._release(address, resource, pool)];\n                                case 1: return [2 /*return*/, _a.sent()];\n                            }\n                        }); }); })];\n                    case 14:\n                        // Invoke callback that creates actual connection\n                        resource = _a.sent();\n                        pool.pushInUse(resource);\n                        resourceAcquired(key, this._activeResourceCounts);\n                        if (this._log.isDebugEnabled()) {\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                            this._log.debug(\"\".concat(resource, \" created for the pool \").concat(key));\n                        }\n                        return [3 /*break*/, 16];\n                    case 15:\n                        this._pendingCreates[key] = this._pendingCreates[key] - 1;\n                        return [7 /*endfinally*/];\n                    case 16: return [2 /*return*/, { resource: resource, pool: pool }];\n                }\n            });\n        });\n    };\n    Pool.prototype._release = function (address, resource, pool) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        key = address.asKey();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 9, 10]);\n                        if (!pool.isActive()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._validateOnRelease(resource)];\n                    case 2:\n                        if (!!(_a.sent())) return [3 /*break*/, 4];\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                            \"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because it is not functional\"));\n                        }\n                        pool.removeInUse(resource);\n                        return [4 /*yield*/, this._destroy(resource)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        if (this._installIdleObserver != null) {\n                            this._installIdleObserver(resource, {\n                                onError: function (error) {\n                                    _this._log.debug(\n                                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                                    \"Idle connection \".concat(resource, \" destroyed because of error: \").concat(error));\n                                    var pool = _this._pools[key];\n                                    if (pool != null) {\n                                        _this._pools[key] = pool.filter(function (r) { return r !== resource; });\n                                        pool.removeInUse(resource);\n                                    }\n                                    // let's not care about background clean-ups due to errors but just trigger the destroy\n                                    // process for the resource, we especially catch any errors and ignore them to avoid\n                                    // unhandled promise rejection warnings\n                                    _this._destroy(resource).catch(function () { });\n                                }\n                            });\n                        }\n                        pool.push(resource);\n                        if (this._log.isDebugEnabled()) {\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                            this._log.debug(\"\".concat(resource, \" released to the pool \").concat(key));\n                        }\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        // key has been purged, don't put it back, just destroy the resource\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                            \"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because pool has been purged\"));\n                        }\n                        pool.removeInUse(resource);\n                        return [4 /*yield*/, this._destroy(resource)];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        resourceReleased(key, this._activeResourceCounts);\n                        this._processPendingAcquireRequests(address);\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Pool.prototype._purgeKey = function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pool, destructionList, resource;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        pool = this._pools[key];\n                        destructionList = [];\n                        if (!(pool != null)) return [3 /*break*/, 2];\n                        while (pool.length > 0) {\n                            resource = pool.pop();\n                            if (resource == null) {\n                                continue;\n                            }\n                            if (this._removeIdleObserver != null) {\n                                this._removeIdleObserver(resource);\n                            }\n                            destructionList.push(this._destroy(resource));\n                        }\n                        pool.close();\n                        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                        delete this._pools[key];\n                        return [4 /*yield*/, Promise.all(destructionList)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Pool.prototype._processPendingAcquireRequests = function (address) {\n        var _this = this;\n        var key = address.asKey();\n        var requests = this._acquireRequests[key];\n        if (requests != null) {\n            var pendingRequest_1 = requests.shift(); // pop a pending acquire request\n            if (pendingRequest_1 != null) {\n                this._acquire(pendingRequest_1.context, address, pendingRequest_1.requireNew)\n                    .catch(function (error) {\n                    // failed to acquire/create a new connection to resolve the pending acquire request\n                    // propagate the error by failing the pending request\n                    pendingRequest_1.reject(error);\n                    return { resource: null, pool: null };\n                })\n                    .then(function (_a) {\n                    var resource = _a.resource, pool = _a.pool;\n                    // there is not situation where the pool resource is not null and the\n                    // pool is null.\n                    if (resource != null && pool != null) {\n                        // managed to acquire a valid resource from the pool\n                        if (pendingRequest_1.isCompleted()) {\n                            // request has been completed, most likely failed by a timeout\n                            // return the acquired resource back to the pool\n                            _this._release(address, resource, pool)\n                                .catch(function (error) {\n                                if (_this._log.isDebugEnabled()) {\n                                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                                    _this._log.debug(\"\".concat(resource, \" could not be release back to the pool. Cause: \").concat(error));\n                                }\n                            });\n                        }\n                        else {\n                            // request is still pending and can be resolved with the newly acquired resource\n                            pendingRequest_1.resolve(resource); // resolve the pending request with the acquired resource\n                        }\n                    }\n                    else {\n                        // failed to acquire a valid resource from the pool\n                        // return the pending request back to the pool\n                        if (!pendingRequest_1.isCompleted()) {\n                            if (_this._acquireRequests[key] == null) {\n                                _this._acquireRequests[key] = [];\n                            }\n                            _this._acquireRequests[key].unshift(pendingRequest_1);\n                        }\n                    }\n                }).catch(function (error) { return pendingRequest_1.reject(error); });\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this._acquireRequests[key];\n            }\n        }\n    };\n    return Pool;\n}());\n/**\n * Increment active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceAcquired(key, activeResourceCounts) {\n    var _a;\n    var currentCount = (_a = activeResourceCounts[key]) !== null && _a !== void 0 ? _a : 0;\n    activeResourceCounts[key] = currentCount + 1;\n}\n/**\n * Decrement active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceReleased(key, activeResourceCounts) {\n    var _a;\n    var currentCount = (_a = activeResourceCounts[key]) !== null && _a !== void 0 ? _a : 0;\n    var nextCount = currentCount - 1;\n    if (nextCount > 0) {\n        activeResourceCounts[key] = nextCount;\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete activeResourceCounts[key];\n    }\n}\nvar PendingRequest = /** @class */ (function () {\n    function PendingRequest(key, context, config, resolve, reject, timeoutId, log) {\n        this._key = key;\n        this._context = context;\n        this._resolve = resolve;\n        this._reject = reject;\n        this._timeoutId = timeoutId;\n        this._log = log;\n        this._completed = false;\n        this._config = config !== null && config !== void 0 ? config : {};\n    }\n    Object.defineProperty(PendingRequest.prototype, \"context\", {\n        get: function () {\n            return this._context;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PendingRequest.prototype, \"requireNew\", {\n        get: function () {\n            var _a;\n            return (_a = this._config.requireNew) !== null && _a !== void 0 ? _a : false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PendingRequest.prototype.isCompleted = function () {\n        return this._completed;\n    };\n    PendingRequest.prototype.resolve = function (resource) {\n        if (this._completed) {\n            return;\n        }\n        this._completed = true;\n        clearTimeout(this._timeoutId);\n        if (this._log.isDebugEnabled()) {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            this._log.debug(\"\".concat(resource, \" acquired from the pool \").concat(this._key));\n        }\n        this._resolve(resource);\n    };\n    PendingRequest.prototype.reject = function (error) {\n        if (this._completed) {\n            return;\n        }\n        this._completed = true;\n        clearTimeout(this._timeoutId);\n        this._reject(error);\n    };\n    return PendingRequest;\n}());\nvar SingleAddressPool = /** @class */ (function () {\n    function SingleAddressPool() {\n        this._active = true;\n        this._elements = [];\n        this._elementsInUse = new Set();\n    }\n    SingleAddressPool.prototype.isActive = function () {\n        return this._active;\n    };\n    SingleAddressPool.prototype.close = function () {\n        this._active = false;\n        this._elements = [];\n        this._elementsInUse = new Set();\n    };\n    SingleAddressPool.prototype.filter = function (predicate) {\n        this._elements = this._elements.filter(predicate);\n        return this;\n    };\n    SingleAddressPool.prototype.apply = function (resourceConsumer) {\n        this._elements.forEach(resourceConsumer);\n        this._elementsInUse.forEach(resourceConsumer);\n    };\n    Object.defineProperty(SingleAddressPool.prototype, \"length\", {\n        get: function () {\n            return this._elements.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SingleAddressPool.prototype.pop = function () {\n        var element = this._elements.pop();\n        if (element != null) {\n            this._elementsInUse.add(element);\n        }\n        return element;\n    };\n    SingleAddressPool.prototype.push = function (element) {\n        this._elementsInUse.delete(element);\n        return this._elements.push(element);\n    };\n    SingleAddressPool.prototype.pushInUse = function (element) {\n        this._elementsInUse.add(element);\n    };\n    SingleAddressPool.prototype.removeInUse = function (element) {\n        this._elementsInUse.delete(element);\n    };\n    return SingleAddressPool;\n}());\nexports.default = Pool;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}