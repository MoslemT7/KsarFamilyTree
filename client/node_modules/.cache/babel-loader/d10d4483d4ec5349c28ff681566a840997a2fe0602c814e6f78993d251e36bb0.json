{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n// eslint-disable-next-line no-unused-vars\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar\n// eslint-disable-next-line no-unused-vars\nLogger = neo4j_driver_core_1.internal.logger.Logger;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\nvar RxRetryLogic = /** @class */function () {\n  /**\n   *\n   * @param {Object} args\n   * @param {Logger} args.logger\n   */\n  function RxRetryLogic(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.maxRetryTimeout,\n      maxRetryTimeout = _c === void 0 ? DEFAULT_MAX_RETRY_TIME_MS : _c,\n      _d = _b.initialDelay,\n      initialDelay = _d === void 0 ? DEFAULT_INITIAL_RETRY_DELAY_MS : _d,\n      _e = _b.delayMultiplier,\n      delayMultiplier = _e === void 0 ? DEFAULT_RETRY_DELAY_MULTIPLIER : _e,\n      _f = _b.delayJitter,\n      delayJitter = _f === void 0 ? DEFAULT_RETRY_DELAY_JITTER_FACTOR : _f,\n      _g = _b.logger,\n      logger = _g === void 0 ? null : _g;\n    this._maxRetryTimeout = valueOrDefault(maxRetryTimeout, DEFAULT_MAX_RETRY_TIME_MS);\n    this._initialDelay = valueOrDefault(initialDelay, DEFAULT_INITIAL_RETRY_DELAY_MS);\n    this._delayMultiplier = valueOrDefault(delayMultiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\n    this._delayJitter = valueOrDefault(delayJitter, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\n    this._logger = logger;\n  }\n  /**\n   *\n   * @param {Observable<Any>} work\n   */\n  RxRetryLogic.prototype.retry = function (work) {\n    var _this = this;\n    return work.pipe((0, operators_1.retryWhen)(function (failedWork) {\n      var handledExceptions = [];\n      var startTime = Date.now();\n      var retryCount = 1;\n      var delayDuration = _this._initialDelay;\n      return failedWork.pipe((0, operators_1.mergeMap)(function (err) {\n        if (!(0, neo4j_driver_core_1.isRetriableError)(err)) {\n          return (0, rxjs_1.throwError)(function () {\n            return err;\n          });\n        }\n        handledExceptions.push(err);\n        if (retryCount >= 2 && Date.now() - startTime >= _this._maxRetryTimeout) {\n          var error_1 = (0, neo4j_driver_core_1.newError)(\"Failed after retried for \".concat(retryCount, \" times in \").concat(_this._maxRetryTimeout, \" ms. Make sure that your database is online and retry again.\"), SERVICE_UNAVAILABLE);\n          error_1.seenErrors = handledExceptions;\n          return (0, rxjs_1.throwError)(function () {\n            return error_1;\n          });\n        }\n        var nextDelayDuration = _this._computeNextDelay(delayDuration);\n        delayDuration = delayDuration * _this._delayMultiplier;\n        retryCount++;\n        if (_this._logger) {\n          _this._logger.warn(\"Transaction failed and will be retried in \".concat(nextDelayDuration));\n        }\n        return (0, rxjs_1.of)(1).pipe((0, operators_1.delay)(nextDelayDuration));\n      }));\n    }));\n  };\n  RxRetryLogic.prototype._computeNextDelay = function (delay) {\n    var jitter = delay * this._delayJitter;\n    return delay - jitter + 2 * jitter * Math.random();\n  };\n  return RxRetryLogic;\n}();\nexports.default = RxRetryLogic;\nfunction valueOrDefault(value, defaultValue) {\n  if (value || value === 0) {\n    return value;\n  }\n  return defaultValue;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","neo4j_driver_core_1","require","rxjs_1","operators_1","Logger","internal","logger","SERVICE_UNAVAILABLE","error","DEFAULT_MAX_RETRY_TIME_MS","DEFAULT_INITIAL_RETRY_DELAY_MS","DEFAULT_RETRY_DELAY_MULTIPLIER","DEFAULT_RETRY_DELAY_JITTER_FACTOR","RxRetryLogic","_a","_b","_c","maxRetryTimeout","_d","initialDelay","_e","delayMultiplier","_f","delayJitter","_g","_maxRetryTimeout","valueOrDefault","_initialDelay","_delayMultiplier","_delayJitter","_logger","prototype","retry","work","_this","pipe","retryWhen","failedWork","handledExceptions","startTime","Date","now","retryCount","delayDuration","mergeMap","err","isRetriableError","throwError","push","error_1","newError","concat","seenErrors","nextDelayDuration","_computeNextDelay","warn","of","delay","jitter","Math","random","default","defaultValue"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver/lib/internal/retry-logic-rx.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n// eslint-disable-next-line no-unused-vars\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar \n// eslint-disable-next-line no-unused-vars\nLogger = neo4j_driver_core_1.internal.logger.Logger;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\nvar RxRetryLogic = /** @class */ (function () {\n    /**\n     *\n     * @param {Object} args\n     * @param {Logger} args.logger\n     */\n    function RxRetryLogic(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.maxRetryTimeout, maxRetryTimeout = _c === void 0 ? DEFAULT_MAX_RETRY_TIME_MS : _c, _d = _b.initialDelay, initialDelay = _d === void 0 ? DEFAULT_INITIAL_RETRY_DELAY_MS : _d, _e = _b.delayMultiplier, delayMultiplier = _e === void 0 ? DEFAULT_RETRY_DELAY_MULTIPLIER : _e, _f = _b.delayJitter, delayJitter = _f === void 0 ? DEFAULT_RETRY_DELAY_JITTER_FACTOR : _f, _g = _b.logger, logger = _g === void 0 ? null : _g;\n        this._maxRetryTimeout = valueOrDefault(maxRetryTimeout, DEFAULT_MAX_RETRY_TIME_MS);\n        this._initialDelay = valueOrDefault(initialDelay, DEFAULT_INITIAL_RETRY_DELAY_MS);\n        this._delayMultiplier = valueOrDefault(delayMultiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\n        this._delayJitter = valueOrDefault(delayJitter, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\n        this._logger = logger;\n    }\n    /**\n     *\n     * @param {Observable<Any>} work\n     */\n    RxRetryLogic.prototype.retry = function (work) {\n        var _this = this;\n        return work.pipe((0, operators_1.retryWhen)(function (failedWork) {\n            var handledExceptions = [];\n            var startTime = Date.now();\n            var retryCount = 1;\n            var delayDuration = _this._initialDelay;\n            return failedWork.pipe((0, operators_1.mergeMap)(function (err) {\n                if (!(0, neo4j_driver_core_1.isRetriableError)(err)) {\n                    return (0, rxjs_1.throwError)(function () { return err; });\n                }\n                handledExceptions.push(err);\n                if (retryCount >= 2 &&\n                    Date.now() - startTime >= _this._maxRetryTimeout) {\n                    var error_1 = (0, neo4j_driver_core_1.newError)(\"Failed after retried for \".concat(retryCount, \" times in \").concat(_this._maxRetryTimeout, \" ms. Make sure that your database is online and retry again.\"), SERVICE_UNAVAILABLE);\n                    error_1.seenErrors = handledExceptions;\n                    return (0, rxjs_1.throwError)(function () { return error_1; });\n                }\n                var nextDelayDuration = _this._computeNextDelay(delayDuration);\n                delayDuration = delayDuration * _this._delayMultiplier;\n                retryCount++;\n                if (_this._logger) {\n                    _this._logger.warn(\"Transaction failed and will be retried in \".concat(nextDelayDuration));\n                }\n                return (0, rxjs_1.of)(1).pipe((0, operators_1.delay)(nextDelayDuration));\n            }));\n        }));\n    };\n    RxRetryLogic.prototype._computeNextDelay = function (delay) {\n        var jitter = delay * this._delayJitter;\n        return delay - jitter + 2 * jitter * Math.random();\n    };\n    return RxRetryLogic;\n}());\nexports.default = RxRetryLogic;\nfunction valueOrDefault(value, defaultValue) {\n    if (value || value === 0) {\n        return value;\n    }\n    return defaultValue;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}