{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\StatisticsDashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport React, { useRef } from 'react';\nimport './StatisticsDashboard.css';\nimport Chart from 'chart.js/dist/chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nrequire('dotenv').config();\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nconst driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\nconst totalPopulation = async () => {\n  const session = driver.session();\n  try {\n    const result = await session.run(`\n      MATCH (n:Person)\n      RETURN count(n) AS total\n    `);\n    return result.records[0].get('total').toInt();\n  } catch (error) {\n    console.error(\"Error counting population:\", error);\n    return 0;\n  } finally {\n    await session.close();\n  }\n};\nconst oldestPerson = async () => {\n  const session = driver.session();\n  try {\n    const result = await session.run(`\n        MATCH (n:Person)\n        WHERE n.YoB IS NOT NULL\n        RETURN n\n        ORDER BY n.YoB ASC\n        LIMIT 1\n      `);\n    if (result.records.length > 0) {\n      const person = result.records[0].get(\"n\").properties;\n      const age = new Date().getFullYear() - person.YoB;\n      return {\n        name: person.name || '',\n        lastName: person.lastName || '',\n        age\n      };\n    } else {\n      return {\n        name: \"غير معروف\",\n        lastName: \"\",\n        age: \"-\"\n      };\n    }\n  } catch (error) {\n    console.error(\"Error fetching oldest person:\", error);\n    return {\n      name: \"خطأ\",\n      lastName: \"\",\n      age: \"-\"\n    };\n  } finally {\n    await session.close();\n  }\n};\nconst youngestPerson = async () => {\n  const session = driver.session();\n  try {\n    const result = await session.run(`\n      MATCH (n:Person)\n      WHERE n.YoB IS NOT NULL\n      RETURN n\n      ORDER BY n.YoB DESC\n      LIMIT 1\n    `);\n    if (result.records.length > 0) {\n      const person = result.records[0].get(\"n\").properties;\n      const age = new Date().getFullYear() - person.YoB;\n      return {\n        name: person.name || '',\n        lastName: person.lastName || '',\n        age\n      };\n    } else {\n      return {\n        name: \"غير معروف\",\n        lastName: \"\",\n        age: \"-\"\n      };\n    }\n  } catch (error) {\n    console.error(\"Error fetching youngest person:\", error);\n    return {\n      name: \"خطأ\",\n      lastName: \"\",\n      age: \"-\"\n    };\n  } finally {\n    await session.close();\n  }\n};\nconst averageAge = async () => {\n  const session = driver.session();\n  try {\n    const result = await session.run(`\n        MATCH (n:Person)\n        WHERE n.YoB IS NOT NULL\n        RETURN AVG(n.YoB) AS averageYoB\n      `);\n    if (result.records.length > 0) {\n      const avgYoB = result.records[0].get('averageYoB');\n      const currentYear = new Date().getFullYear();\n      const averageAge = Math.round(currentYear - avgYoB);\n      return {\n        averageAge\n      };\n    } else {\n      return {\n        averageAge: \"-\"\n      };\n    }\n  } catch (error) {\n    console.error(\"Error fetching average age:\", error);\n    return {\n      averageAge: \"-\"\n    };\n  } finally {\n    await session.close();\n  }\n};\nconst SexCount = async () => {\n  const session = driver.session();\n  try {\n    const resultM = await session.run(`\n        MATCH (n:Person)\n        WHERE n.gender = 'Male'\n        RETURN COUNT(n) AS MaleCount\n      `);\n    const resultF = await session.run(`\n        MATCH (n:Person)\n        WHERE n.gender = 'Female'\n        RETURN COUNT(n) AS FemaleCount\n      `);\n    if (resultM.records.length > 0 && resultF.records.length > 0) {\n      const maleCount = resultM.records[0].get('MaleCount').toNumber(); // ensure it's a number\n      const femaleCount = resultF.records[0].get('FemaleCount').toNumber(); // ensure it's a number\n      return {\n        maleCount,\n        femaleCount\n      };\n    } else {\n      return {\n        maleCount: \"-\",\n        femaleCount: \"-\"\n      };\n    }\n  } catch (error) {\n    console.error(\"Error fetching gender counts:\", error);\n    return {\n      maleCount: \"-\",\n      femaleCount: \"-\"\n    };\n  } finally {\n    await session.close();\n  }\n};\n_c = SexCount;\nexport const translateName = (firstName, lastName) => {\n  const translatedFirstName = translations[firstName] || firstName; // Translate first name\n  const translatedLastName = translations[lastName] || lastName; // Translate last name\n  return `${translatedFirstName} ${translatedLastName}`; // Return combined translated names\n};\nconst totalAlivePopulation = async () => {\n  const session = driver.session();\n  try {\n    const result = await session.run(`\n        MATCH (n:Person)\n        WHERE n.isAlive = True\n        RETURN count(n) AS total\n      `);\n    return result.records[0].get('total').toNumber();\n  } catch (error) {\n    console.error(\"Error counting population:\", error);\n    return 0;\n  } finally {\n    await session.close();\n  }\n};\nconst StatisticsDashboard = () => {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [ageDistribution, setAgeDistribution] = useState([]);\n  const chartRef = useRef(null);\n  let chartInstance = useRef(null); // Track chart instance to destroy it properly\n\n  // Fetch the stats and age distribution\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const total = await totalPopulation();\n        const totalAlive = await totalAlivePopulation();\n        const oldest = await oldestPerson();\n        const youngest = await youngestPerson();\n        const avgAge = await averageAge();\n        const {\n          maleCount,\n          femaleCount\n        } = await SexCount();\n        const fetchedAgeDistribution = await ageBins();\n        setStats({\n          totalPopulation: total,\n          totalAlivePopulation: totalAlive,\n          totalMen: maleCount,\n          totalWomen: femaleCount,\n          averageAge: avgAge.averageAge,\n          oldestPerson: oldest,\n          youngestPerson: youngest\n        });\n        setAgeDistribution(fetchedAgeDistribution); // Store the age distribution data\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, []); // Fetch stats once when the component mounts\n\n  // Render Age Distribution Chart\n  useEffect(() => {\n    if (!chartRef.current || ageDistribution.length === 0) return;\n\n    // Destroy previous chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Create a new chart instance\n    chartInstance.current = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ageDistribution.map(item => item.ageBin),\n        datasets: [{\n          label: 'Age Distribution',\n          data: ageDistribution.map(item => item.count),\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n    return () => {\n      var _chartInstance$curren;\n      (_chartInstance$curren = chartInstance.current) === null || _chartInstance$curren === void 0 ? void 0 : _chartInstance$curren.destroy(); // Clean up chart instance when the component unmounts or updates\n    };\n  }, [ageDistribution]); // Runs when age distribution data is available\n\n  // Render Gender Ratio Chart\n  useEffect(() => {\n    if (!stats || !stats.totalMen || !stats.totalWomen) return;\n    const ctx = chartRef.current.getContext('2d');\n\n    // Destroy previous chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    // Create a new chart instance for Gender Ratio\n    chartInstance.current = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Male', 'Female'],\n        datasets: [{\n          data: [stats.totalMen, stats.totalWomen],\n          backgroundColor: ['#36A2EB', '#FF6384'],\n          hoverBackgroundColor: ['#5DADE2', '#FF8F9E']\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (tooltipItem) {\n                return tooltipItem.raw + ' people';\n              }\n            }\n          },\n          legend: {\n            position: 'top'\n          }\n        }\n      }\n    });\n    return () => {\n      var _chartInstance$curren2;\n      (_chartInstance$curren2 = chartInstance.current) === null || _chartInstance$curren2 === void 0 ? void 0 : _chartInstance$curren2.destroy(); // Clean up chart instance when the component unmounts or updates\n    };\n  }, [stats]); // Runs when stats are available (totalMen and totalWomen)\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u062C\\u0627\\u0631\\u064A \\u062A\\u062D\\u0645\\u064A\\u0644 \\u0627\\u0644\\u0625\\u062D\\u0635\\u0627\\u0626\\u064A\\u0627\\u062A...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 23\n  }, this);\n  if (!stats) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u062A\\u0639\\u0630\\u0631 \\u062A\\u062D\\u0645\\u064A\\u0644 \\u0627\\u0644\\u0628\\u064A\\u0627\\u0646\\u0627\\u062A.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCA \\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u0625\\u062D\\u0635\\u0627\\u0626\\u064A\\u0627\\u062A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC65 \\u0623\\u0628\\u0646\\u0627\\u0621 \\u0642\\u0635\\u0631 \\u0623\\u0648\\u0644\\u0627\\u062F \\u0628\\u0648\\u0628\\u0643\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: stats.totalPopulation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC93 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0633\\u0643\\u0627\\u0646 \\u0627\\u0644\\u0625\\u062C\\u0645\\u0627\\u0644\\u064A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: stats.totalAlivePopulation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC69 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0646\\u0633\\u0627\\u0621\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: stats.totalWomen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC68 \\u0639\\u062F\\u062F \\u0627\\u0644\\u0631\\u062C\\u0627\\u0644\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: stats.totalMen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC8 \\u0645\\u062A\\u0648\\u0633\\u0637 \\u0627\\u0644\\u0639\\u0645\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [stats.averageAge, \" \\u0633\\u0646\\u0629\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC74\\u0623\\u0643\\u0628\\u0631 \\u0634\\u062E\\u0635 \\u0633\\u0646\\u064B\\u0627\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [translateName(stats.oldestPerson.name, stats.oldestPerson.lastName), \" (\", stats.oldestPerson.age, \" \\u0633\\u0646\\u0629)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC76\\u0623\\u0635\\u063A\\u0631 \\u0634\\u062E\\u0635 \\u0633\\u0646\\u064B\\u0627\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [translateName(stats.youngestPerson.name, stats.youngestPerson.lastName), \" (\", stats.youngestPerson.age, \" \\u0633\\u0646\\u0629)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Age Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Gender Ratio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Alive vs Deceased\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"lifeStatusChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsDashboard, \"CNkeNGhe7dIbr3mbiW5cBhsK2bM=\");\n_c2 = StatisticsDashboard;\nexport default StatisticsDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SexCount\");\n$RefreshReg$(_c2, \"StatisticsDashboard\");","map":{"version":3,"names":["useEffect","useState","React","useRef","Chart","jsxDEV","_jsxDEV","translations","require","config","neo4jURI","process","env","REACT_APP_NEO4J_URI","neo4jUser","REACT_APP_NEO4J_USER","neo4jPassword","REACT_APP_NEO4J_PASSWORD","driver","auth","basic","totalPopulation","session","result","run","records","get","toInt","error","console","close","oldestPerson","length","person","properties","age","Date","getFullYear","YoB","name","lastName","youngestPerson","averageAge","avgYoB","currentYear","Math","round","SexCount","resultM","resultF","maleCount","toNumber","femaleCount","_c","translateName","firstName","translatedFirstName","translatedLastName","totalAlivePopulation","StatisticsDashboard","_s","stats","setStats","loading","setLoading","ageDistribution","setAgeDistribution","chartRef","chartInstance","fetchStats","total","totalAlive","oldest","youngest","avgAge","fetchedAgeDistribution","ageBins","totalMen","totalWomen","current","destroy","ctx","getContext","type","data","labels","map","item","ageBin","datasets","label","count","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero","_chartInstance$curren","hoverBackgroundColor","plugins","tooltip","callbacks","tooltipItem","raw","legend","position","_chartInstance$curren2","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","id","_c2","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/StatisticsDashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport React, { useRef } from 'react';\r\n\r\nimport './StatisticsDashboard.css';\r\nimport Chart from 'chart.js/dist/chart.js';\r\n\r\nconst translations = require('./translation.json');\r\nrequire('dotenv').config();\r\n\r\n\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nconst driver = require('neo4j-driver').driver(\r\n    neo4jURI,\r\n    require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n);\r\nconst totalPopulation = async () => {\r\n  const session = driver.session();\r\n  try {\r\n    const result = await session.run(`\r\n      MATCH (n:Person)\r\n      RETURN count(n) AS total\r\n    `);\r\n    return result.records[0].get('total').toInt();\r\n  } catch (error) {\r\n    console.error(\"Error counting population:\", error);\r\n    return 0;\r\n  } finally {\r\n    await session.close();\r\n  }\r\n};\r\n\r\nconst oldestPerson = async () => {\r\n    const session = driver.session();\r\n    try {\r\n      const result = await session.run(`\r\n        MATCH (n:Person)\r\n        WHERE n.YoB IS NOT NULL\r\n        RETURN n\r\n        ORDER BY n.YoB ASC\r\n        LIMIT 1\r\n      `);\r\n      if (result.records.length > 0) {\r\n        const person = result.records[0].get(\"n\").properties;\r\n        const age = new Date().getFullYear() - person.YoB;\r\n        return {\r\n          name: person.name || '',\r\n          lastName: person.lastName || '',\r\n          age\r\n        };\r\n      } else {\r\n        return { name: \"غير معروف\", lastName: \"\", age: \"-\" };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching oldest person:\", error);\r\n      return { name: \"خطأ\", lastName: \"\", age: \"-\" };\r\n    } finally {\r\n      await session.close();\r\n    }\r\n  };\r\n  \r\nconst youngestPerson = async () => {\r\n  const session = driver.session();\r\n  try {\r\n    const result = await session.run(`\r\n      MATCH (n:Person)\r\n      WHERE n.YoB IS NOT NULL\r\n      RETURN n\r\n      ORDER BY n.YoB DESC\r\n      LIMIT 1\r\n    `);\r\n    if (result.records.length > 0) {\r\n      const person = result.records[0].get(\"n\").properties;\r\n      const age = new Date().getFullYear() - person.YoB;\r\n      return {\r\n        name: person.name || '',\r\n        lastName: person.lastName || '',\r\n        age\r\n      };\r\n    } else {\r\n        return { name: \"غير معروف\", lastName: \"\", age: \"-\" };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching youngest person:\", error);\r\n    return { name: \"خطأ\", lastName: \"\", age: \"-\" };\r\n} finally {\r\n    await session.close();\r\n  }\r\n};\r\n\r\nconst averageAge = async () => {\r\n    const session = driver.session();\r\n    try {\r\n      const result = await session.run(`\r\n        MATCH (n:Person)\r\n        WHERE n.YoB IS NOT NULL\r\n        RETURN AVG(n.YoB) AS averageYoB\r\n      `);\r\n  \r\n      if (result.records.length > 0) {\r\n        const avgYoB = result.records[0].get('averageYoB');\r\n        const currentYear = new Date().getFullYear();\r\n        const averageAge = Math.round(currentYear - avgYoB);\r\n        return { averageAge };\r\n      } else {\r\n        return { averageAge: \"-\" };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching average age:\", error);\r\n      return { averageAge: \"-\" };\r\n    } finally {\r\n      await session.close();\r\n    }\r\n};\r\n  \r\nconst SexCount = async () => {\r\n    const session = driver.session();\r\n    try {\r\n      const resultM = await session.run(`\r\n        MATCH (n:Person)\r\n        WHERE n.gender = 'Male'\r\n        RETURN COUNT(n) AS MaleCount\r\n      `);\r\n      const resultF = await session.run(`\r\n        MATCH (n:Person)\r\n        WHERE n.gender = 'Female'\r\n        RETURN COUNT(n) AS FemaleCount\r\n      `);\r\n  \r\n      if (resultM.records.length > 0 && resultF.records.length > 0) {\r\n        const maleCount = resultM.records[0].get('MaleCount').toNumber(); // ensure it's a number\r\n        const femaleCount = resultF.records[0].get('FemaleCount').toNumber(); // ensure it's a number\r\n        return { maleCount, femaleCount };\r\n      } else {\r\n        return { maleCount: \"-\", femaleCount: \"-\" };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching gender counts:\", error);\r\n      return { maleCount: \"-\", femaleCount: \"-\" };\r\n    } finally {\r\n      await session.close();\r\n    }\r\n};\r\n\r\nexport const translateName = (firstName, lastName) => {\r\n    const translatedFirstName = translations[firstName] || firstName; // Translate first name\r\n    const translatedLastName = translations[lastName] || lastName; // Translate last name\r\n    return `${translatedFirstName} ${translatedLastName}`; // Return combined translated names\r\n};\r\n\r\nconst totalAlivePopulation = async () => {\r\n    const session = driver.session();\r\n    try {\r\n      const result = await session.run(`\r\n        MATCH (n:Person)\r\n        WHERE n.isAlive = True\r\n        RETURN count(n) AS total\r\n      `);\r\n      return result.records[0].get('total').toNumber();\r\n    } catch (error) {\r\n      console.error(\"Error counting population:\", error);\r\n      return 0;\r\n    } finally {\r\n      await session.close();\r\n    }\r\n};\r\n\r\n\r\nconst StatisticsDashboard = () => {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [ageDistribution, setAgeDistribution] = useState([]);\r\n  const chartRef = useRef(null);\r\n  let chartInstance = useRef(null); // Track chart instance to destroy it properly\r\n\r\n  // Fetch the stats and age distribution\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        const total = await totalPopulation();\r\n        const totalAlive = await totalAlivePopulation();\r\n        const oldest = await oldestPerson();\r\n        const youngest = await youngestPerson();\r\n        const avgAge = await averageAge();\r\n        const { maleCount, femaleCount } = await SexCount();\r\n        const fetchedAgeDistribution = await ageBins();\r\n\r\n        setStats({\r\n          totalPopulation: total,\r\n          totalAlivePopulation: totalAlive,\r\n          totalMen: maleCount,\r\n          totalWomen: femaleCount,\r\n          averageAge: avgAge.averageAge,\r\n          oldestPerson: oldest,\r\n          youngestPerson: youngest,\r\n        });\r\n        setAgeDistribution(fetchedAgeDistribution); // Store the age distribution data\r\n      } catch (error) {\r\n        console.error('Error fetching stats:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n  }, []); // Fetch stats once when the component mounts\r\n\r\n  // Render Age Distribution Chart\r\n  useEffect(() => {\r\n    if (!chartRef.current || ageDistribution.length === 0) return;\r\n\r\n    // Destroy previous chart if it exists\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    // Create a new chart instance\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: ageDistribution.map((item) => item.ageBin),\r\n        datasets: [\r\n          {\r\n            label: 'Age Distribution',\r\n            data: ageDistribution.map((item) => item.count),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      chartInstance.current?.destroy(); // Clean up chart instance when the component unmounts or updates\r\n    };\r\n  }, [ageDistribution]); // Runs when age distribution data is available\r\n\r\n  // Render Gender Ratio Chart\r\n  useEffect(() => {\r\n    if (!stats || !stats.totalMen || !stats.totalWomen) return;\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    // Destroy previous chart if it exists\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n\r\n    // Create a new chart instance for Gender Ratio\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'pie',\r\n      data: {\r\n        labels: ['Male', 'Female'],\r\n        datasets: [\r\n          {\r\n            data: [stats.totalMen, stats.totalWomen],\r\n            backgroundColor: ['#36A2EB', '#FF6384'],\r\n            hoverBackgroundColor: ['#5DADE2', '#FF8F9E'],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function (tooltipItem) {\r\n                return tooltipItem.raw + ' people';\r\n              },\r\n            },\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      chartInstance.current?.destroy(); // Clean up chart instance when the component unmounts or updates\r\n    };\r\n  }, [stats]); // Runs when stats are available (totalMen and totalWomen)\r\n\r\n  if (loading) return <p>جاري تحميل الإحصائيات...</p>;\r\n  if (!stats) return <p>تعذر تحميل البيانات.</p>;\r\n\r\n  return (\r\n    <div className=\"stats-dashboard\">\r\n      <h2>📊 لوحة الإحصائيات</h2>\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card\">\r\n          <h3>👥 أبناء قصر أولاد بوبكر</h3>\r\n          <p>{stats.totalPopulation}</p>\r\n        </div>\r\n\r\n        <div className=\"stat-card\">\r\n          <h3>💓 عدد السكان الإجمالي</h3>\r\n          <p>{stats.totalAlivePopulation}</p>\r\n        </div>\r\n\r\n        <div className=\"stat-card\">\r\n          <h3>👩 عدد النساء</h3>\r\n          <p>{stats.totalWomen}</p>\r\n        </div>\r\n\r\n        <div className=\"stat-card\">\r\n          <h3>👨 عدد الرجال</h3>\r\n          <p>{stats.totalMen}</p>\r\n        </div>\r\n\r\n        <div className=\"stat-card\">\r\n          <h3>📈 متوسط العمر</h3>\r\n          <p>{stats.averageAge} سنة</p>\r\n        </div>\r\n\r\n        <div className=\"stat-card\">\r\n          <h3>👴أكبر شخص سنًا</h3>\r\n          <p>\r\n            {translateName(stats.oldestPerson.name, stats.oldestPerson.lastName)} ({stats.oldestPerson.age} سنة)\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"stat-card\">\r\n          <h3>👶أصغر شخص سنًا</h3>\r\n          <p>\r\n            {translateName(stats.youngestPerson.name, stats.youngestPerson.lastName)} ({stats.youngestPerson.age} سنة)\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"charts\">\r\n        <div className=\"chart-container\">\r\n          <h3>Age Distribution</h3>\r\n          <canvas ref={chartRef}></canvas>\r\n        </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Gender Ratio</h3>\r\n          <canvas ref={chartRef}></canvas>\r\n        </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Alive vs Deceased</h3>\r\n          <canvas id=\"lifeStatusChart\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsDashboard;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAErC,OAAO,2BAA2B;AAClC,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAClDA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAG1B,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAChD,MAAMC,SAAS,GAAGH,OAAO,CAACC,GAAG,CAACG,oBAAoB;AAClD,MAAMC,aAAa,GAAGL,OAAO,CAACC,GAAG,CAACK,wBAAwB;AAE1D,MAAMC,MAAM,GAAGV,OAAO,CAAC,cAAc,CAAC,CAACU,MAAM,CACzCR,QAAQ,EACRF,OAAO,CAAC,cAAc,CAAC,CAACW,IAAI,CAACC,KAAK,CAACN,SAAS,EAAEE,aAAa,CAC/D,CAAC;AACD,MAAMK,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,CAAC;EAChC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,GAAG,CAAC;AACrC;AACA;AACA,KAAK,CAAC;IACF,OAAOD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,CAAC;EACV,CAAC,SAAS;IACR,MAAMN,OAAO,CAACQ,KAAK,CAAC,CAAC;EACvB;AACF,CAAC;AAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMT,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,CAAC;EAChC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,GAAG,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO,CAAC;IACF,IAAID,MAAM,CAACE,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,MAAM,GAAGV,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,CAACQ,UAAU;MACpD,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGJ,MAAM,CAACK,GAAG;MACjD,OAAO;QACLC,IAAI,EAAEN,MAAM,CAACM,IAAI,IAAI,EAAE;QACvBC,QAAQ,EAAEP,MAAM,CAACO,QAAQ,IAAI,EAAE;QAC/BL;MACF,CAAC;IACH,CAAC,MAAM;MACL,OAAO;QAAEI,IAAI,EAAE,WAAW;QAAEC,QAAQ,EAAE,EAAE;QAAEL,GAAG,EAAE;MAAI,CAAC;IACtD;EACF,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO;MAAEW,IAAI,EAAE,KAAK;MAAEC,QAAQ,EAAE,EAAE;MAAEL,GAAG,EAAE;IAAI,CAAC;EAChD,CAAC,SAAS;IACR,MAAMb,OAAO,CAACQ,KAAK,CAAC,CAAC;EACvB;AACF,CAAC;AAEH,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMnB,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,CAAC;EAChC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,GAAG,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACF,IAAID,MAAM,CAACE,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,MAAM,GAAGV,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,CAACQ,UAAU;MACpD,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGJ,MAAM,CAACK,GAAG;MACjD,OAAO;QACLC,IAAI,EAAEN,MAAM,CAACM,IAAI,IAAI,EAAE;QACvBC,QAAQ,EAAEP,MAAM,CAACO,QAAQ,IAAI,EAAE;QAC/BL;MACF,CAAC;IACH,CAAC,MAAM;MACH,OAAO;QAAEI,IAAI,EAAE,WAAW;QAAEC,QAAQ,EAAE,EAAE;QAAEL,GAAG,EAAE;MAAI,CAAC;IACxD;EACF,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO;MAAEW,IAAI,EAAE,KAAK;MAAEC,QAAQ,EAAE,EAAE;MAAEL,GAAG,EAAE;IAAI,CAAC;EAClD,CAAC,SAAS;IACN,MAAMb,OAAO,CAACQ,KAAK,CAAC,CAAC;EACvB;AACF,CAAC;AAED,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMpB,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,CAAC;EAChC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,GAAG,CAAC;AACvC;AACA;AACA;AACA,OAAO,CAAC;IAEF,IAAID,MAAM,CAACE,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMW,MAAM,GAAGpB,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,YAAY,CAAC;MAClD,MAAMkB,WAAW,GAAG,IAAIR,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC5C,MAAMK,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACF,WAAW,GAAGD,MAAM,CAAC;MACnD,OAAO;QAAED;MAAW,CAAC;IACvB,CAAC,MAAM;MACL,OAAO;QAAEA,UAAU,EAAE;MAAI,CAAC;IAC5B;EACF,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO;MAAEc,UAAU,EAAE;IAAI,CAAC;EAC5B,CAAC,SAAS;IACR,MAAMpB,OAAO,CAACQ,KAAK,CAAC,CAAC;EACvB;AACJ,CAAC;AAED,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;EACzB,MAAMzB,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,CAAC;EAChC,IAAI;IACF,MAAM0B,OAAO,GAAG,MAAM1B,OAAO,CAACE,GAAG,CAAC;AACxC;AACA;AACA;AACA,OAAO,CAAC;IACF,MAAMyB,OAAO,GAAG,MAAM3B,OAAO,CAACE,GAAG,CAAC;AACxC;AACA;AACA;AACA,OAAO,CAAC;IAEF,IAAIwB,OAAO,CAACvB,OAAO,CAACO,MAAM,GAAG,CAAC,IAAIiB,OAAO,CAACxB,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;MAC5D,MAAMkB,SAAS,GAAGF,OAAO,CAACvB,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,WAAW,CAAC,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClE,MAAMC,WAAW,GAAGH,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,aAAa,CAAC,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAAC;MACtE,OAAO;QAAED,SAAS;QAAEE;MAAY,CAAC;IACnC,CAAC,MAAM;MACL,OAAO;QAAEF,SAAS,EAAE,GAAG;QAAEE,WAAW,EAAE;MAAI,CAAC;IAC7C;EACF,CAAC,CAAC,OAAOxB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO;MAAEsB,SAAS,EAAE,GAAG;MAAEE,WAAW,EAAE;IAAI,CAAC;EAC7C,CAAC,SAAS;IACR,MAAM9B,OAAO,CAACQ,KAAK,CAAC,CAAC;EACvB;AACJ,CAAC;AAACuB,EAAA,GA3BIN,QAAQ;AA6Bd,OAAO,MAAMO,aAAa,GAAGA,CAACC,SAAS,EAAEf,QAAQ,KAAK;EAClD,MAAMgB,mBAAmB,GAAGjD,YAAY,CAACgD,SAAS,CAAC,IAAIA,SAAS,CAAC,CAAC;EAClE,MAAME,kBAAkB,GAAGlD,YAAY,CAACiC,QAAQ,CAAC,IAAIA,QAAQ,CAAC,CAAC;EAC/D,OAAO,GAAGgB,mBAAmB,IAAIC,kBAAkB,EAAE,CAAC,CAAC;AAC3D,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMpC,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,CAAC;EAChC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,GAAG,CAAC;AACvC;AACA;AACA;AACA,OAAO,CAAC;IACF,OAAOD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC,CAACyB,QAAQ,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOvB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,CAAC;EACV,CAAC,SAAS;IACR,MAAMN,OAAO,CAACQ,KAAK,CAAC,CAAC;EACvB;AACJ,CAAC;AAGD,MAAM6B,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG7D,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC8D,OAAO,EAAEC,UAAU,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgE,eAAe,EAAEC,kBAAkB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMkE,QAAQ,GAAGhE,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIiE,aAAa,GAAGjE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElC;EACAH,SAAS,CAAC,MAAM;IACd,MAAMqE,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMjD,eAAe,CAAC,CAAC;QACrC,MAAMkD,UAAU,GAAG,MAAMb,oBAAoB,CAAC,CAAC;QAC/C,MAAMc,MAAM,GAAG,MAAMzC,YAAY,CAAC,CAAC;QACnC,MAAM0C,QAAQ,GAAG,MAAMhC,cAAc,CAAC,CAAC;QACvC,MAAMiC,MAAM,GAAG,MAAMhC,UAAU,CAAC,CAAC;QACjC,MAAM;UAAEQ,SAAS;UAAEE;QAAY,CAAC,GAAG,MAAML,QAAQ,CAAC,CAAC;QACnD,MAAM4B,sBAAsB,GAAG,MAAMC,OAAO,CAAC,CAAC;QAE9Cd,QAAQ,CAAC;UACPzC,eAAe,EAAEiD,KAAK;UACtBZ,oBAAoB,EAAEa,UAAU;UAChCM,QAAQ,EAAE3B,SAAS;UACnB4B,UAAU,EAAE1B,WAAW;UACvBV,UAAU,EAAEgC,MAAM,CAAChC,UAAU;UAC7BX,YAAY,EAAEyC,MAAM;UACpB/B,cAAc,EAAEgC;QAClB,CAAC,CAAC;QACFP,kBAAkB,CAACS,sBAAsB,CAAC,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAO/C,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRoC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACArE,SAAS,CAAC,MAAM;IACd,IAAI,CAACmE,QAAQ,CAACY,OAAO,IAAId,eAAe,CAACjC,MAAM,KAAK,CAAC,EAAE;;IAEvD;IACA,IAAIoC,aAAa,CAACW,OAAO,EAAE;MACzBX,aAAa,CAACW,OAAO,CAACC,OAAO,CAAC,CAAC;IACjC;IAEA,MAAMC,GAAG,GAAGd,QAAQ,CAACY,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACAd,aAAa,CAACW,OAAO,GAAG,IAAI3E,KAAK,CAAC6E,GAAG,EAAE;MACrCE,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAEpB,eAAe,CAACqB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC;QAClDC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,kBAAkB;UACzBN,IAAI,EAAEnB,eAAe,CAACqB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;UAC/CC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MAAA,IAAAC,qBAAA;MACX,CAAAA,qBAAA,GAAAhC,aAAa,CAACW,OAAO,cAAAqB,qBAAA,uBAArBA,qBAAA,CAAuBpB,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEvB;EACAjE,SAAS,CAAC,MAAM;IACd,IAAI,CAAC6D,KAAK,IAAI,CAACA,KAAK,CAACgB,QAAQ,IAAI,CAAChB,KAAK,CAACiB,UAAU,EAAE;IAEpD,MAAMG,GAAG,GAAGd,QAAQ,CAACY,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,IAAId,aAAa,CAACW,OAAO,EAAE;MACzBX,aAAa,CAACW,OAAO,CAACC,OAAO,CAAC,CAAC;IACjC;;IAEA;IACAZ,aAAa,CAACW,OAAO,GAAG,IAAI3E,KAAK,CAAC6E,GAAG,EAAE;MACrCE,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;QAC1BI,QAAQ,EAAE,CACR;UACEL,IAAI,EAAE,CAACvB,KAAK,CAACgB,QAAQ,EAAEhB,KAAK,CAACiB,UAAU,CAAC;UACxCc,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UACvCS,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS;QAC7C,CAAC;MAEL,CAAC;MACDN,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBM,OAAO,EAAE;UACPC,OAAO,EAAE;YACPC,SAAS,EAAE;cACTd,KAAK,EAAE,SAAAA,CAAUe,WAAW,EAAE;gBAC5B,OAAOA,WAAW,CAACC,GAAG,GAAG,SAAS;cACpC;YACF;UACF,CAAC;UACDC,MAAM,EAAE;YACNC,QAAQ,EAAE;UACZ;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MAAA,IAAAC,sBAAA;MACX,CAAAA,sBAAA,GAAAzC,aAAa,CAACW,OAAO,cAAA8B,sBAAA,uBAArBA,sBAAA,CAAuB7B,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,IAAIE,OAAO,EAAE,oBAAOzD,OAAA;IAAAwG,QAAA,EAAG;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACnD,IAAI,CAACrD,KAAK,EAAE,oBAAOvD,OAAA;IAAAwG,QAAA,EAAG;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,oBACE5G,OAAA;IAAK6G,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC9BxG,OAAA;MAAAwG,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B5G,OAAA;MAAK6G,SAAS,EAAC,YAAY;MAAAL,QAAA,gBACzBxG,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC5G,OAAA;UAAAwG,QAAA,EAAIjD,KAAK,CAACxC;QAAe;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B5G,OAAA;UAAAwG,QAAA,EAAIjD,KAAK,CAACH;QAAoB;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5G,OAAA;UAAAwG,QAAA,EAAIjD,KAAK,CAACiB;QAAU;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5G,OAAA;UAAAwG,QAAA,EAAIjD,KAAK,CAACgB;QAAQ;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB5G,OAAA;UAAAwG,QAAA,GAAIjD,KAAK,CAACnB,UAAU,EAAC,qBAAI;QAAA;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5G,OAAA;UAAAwG,QAAA,GACGxD,aAAa,CAACO,KAAK,CAAC9B,YAAY,CAACQ,IAAI,EAAEsB,KAAK,CAAC9B,YAAY,CAACS,QAAQ,CAAC,EAAC,IAAE,EAACqB,KAAK,CAAC9B,YAAY,CAACI,GAAG,EAAC,sBACjG;QAAA;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBxG,OAAA;UAAAwG,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5G,OAAA;UAAAwG,QAAA,GACGxD,aAAa,CAACO,KAAK,CAACpB,cAAc,CAACF,IAAI,EAAEsB,KAAK,CAACpB,cAAc,CAACD,QAAQ,CAAC,EAAC,IAAE,EAACqB,KAAK,CAACpB,cAAc,CAACN,GAAG,EAAC,sBACvG;QAAA;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5G,OAAA;MAAK6G,SAAS,EAAC,QAAQ;MAAAL,QAAA,gBACrBxG,OAAA;QAAK6G,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9BxG,OAAA;UAAAwG,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB5G,OAAA;UAAQ8G,GAAG,EAAEjD;QAAS;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9BxG,OAAA;UAAAwG,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB5G,OAAA;UAAQ8G,GAAG,EAAEjD;QAAS;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEN5G,OAAA;QAAK6G,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9BxG,OAAA;UAAAwG,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B5G,OAAA;UAAQ+G,EAAE,EAAC;QAAiB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtD,EAAA,CA9LID,mBAAmB;AAAA2D,GAAA,GAAnB3D,mBAAmB;AAgMzB,eAAeA,mBAAmB;AAAC,IAAAN,EAAA,EAAAiE,GAAA;AAAAC,YAAA,CAAAlE,EAAA;AAAAkE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}