{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n*/\n/* eslint-disable @typescript-eslint/promise-function-async */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Interface which defines a connection for the core driver object.\n *\n *\n * This connection exposes only methods used by the code module.\n * Methods with connection implementation details can be defined and used\n * by the implementation layer.\n *\n * @private\n * @interface\n */\nvar Connection = /** @class */function () {\n  function Connection() {}\n  /**\n   *\n   * @param config\n   * @returns {ResultStreamObserver}\n   */\n  Connection.prototype.beginTransaction = function (config) {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @param query\n   * @param parameters\n   * @param config\n   * @returns {ResultStreamObserver}\n   */\n  Connection.prototype.run = function (query, parameters, config) {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @param config\n   * @returns {ResultStreamObserver}\n   */\n  Connection.prototype.commitTransaction = function (config) {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @param config\n   * @returns {ResultStreamObserver}\n   */\n  Connection.prototype.rollbackTransaction = function (config) {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @returns {Promise<void>}\n   */\n  Connection.prototype.resetAndFlush = function () {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @returns {boolean}\n   */\n  Connection.prototype.isOpen = function () {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @returns {number}\n   */\n  Connection.prototype.getProtocolVersion = function () {\n    throw new Error('Not implemented');\n  };\n  /**\n   *\n   * @returns {boolean}\n   */\n  Connection.prototype.hasOngoingObservableRequests = function () {\n    throw new Error('Not implemented');\n  };\n  return Connection;\n}();\nexports.default = Connection;","map":{"version":3,"names":["Object","defineProperty","exports","value","Connection","prototype","beginTransaction","config","Error","run","query","parameters","commitTransaction","rollbackTransaction","resetAndFlush","isOpen","getProtocolVersion","hasOngoingObservableRequests","default"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-core/lib/connection.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n*/\n/* eslint-disable @typescript-eslint/promise-function-async */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface which defines a connection for the core driver object.\n *\n *\n * This connection exposes only methods used by the code module.\n * Methods with connection implementation details can be defined and used\n * by the implementation layer.\n *\n * @private\n * @interface\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    /**\n     *\n     * @param config\n     * @returns {ResultStreamObserver}\n     */\n    Connection.prototype.beginTransaction = function (config) {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @param query\n     * @param parameters\n     * @param config\n     * @returns {ResultStreamObserver}\n     */\n    Connection.prototype.run = function (query, parameters, config) {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @param config\n     * @returns {ResultStreamObserver}\n     */\n    Connection.prototype.commitTransaction = function (config) {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @param config\n     * @returns {ResultStreamObserver}\n     */\n    Connection.prototype.rollbackTransaction = function (config) {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @returns {Promise<void>}\n     */\n    Connection.prototype.resetAndFlush = function () {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    Connection.prototype.isOpen = function () {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @returns {number}\n     */\n    Connection.prototype.getProtocolVersion = function () {\n        throw new Error('Not implemented');\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    Connection.prototype.hasOngoingObservableRequests = function () {\n        throw new Error('Not implemented');\n    };\n    return Connection;\n}());\nexports.default = Connection;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAG,aAAe,YAAY;EACxC,SAASA,UAAUA,CAAA,EAAG,CACtB;EACA;AACJ;AACA;AACA;AACA;EACIA,UAAU,CAACC,SAAS,CAACC,gBAAgB,GAAG,UAAUC,MAAM,EAAE;IACtD,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACI,GAAG,GAAG,UAAUC,KAAK,EAAEC,UAAU,EAAEJ,MAAM,EAAE;IAC5D,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACO,iBAAiB,GAAG,UAAUL,MAAM,EAAE;IACvD,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACQ,mBAAmB,GAAG,UAAUN,MAAM,EAAE;IACzD,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACS,aAAa,GAAG,YAAY;IAC7C,MAAM,IAAIN,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACU,MAAM,GAAG,YAAY;IACtC,MAAM,IAAIP,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACW,kBAAkB,GAAG,YAAY;IAClD,MAAM,IAAIR,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD;AACJ;AACA;AACA;EACIJ,UAAU,CAACC,SAAS,CAACY,4BAA4B,GAAG,YAAY;IAC5D,MAAM,IAAIT,KAAK,CAAC,iBAAiB,CAAC;EACtC,CAAC;EACD,OAAOJ,UAAU;AACrB,CAAC,CAAC,CAAE;AACJF,OAAO,CAACgB,OAAO,GAAGd,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script"}