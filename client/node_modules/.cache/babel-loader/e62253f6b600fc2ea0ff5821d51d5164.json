{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\RelationChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RelationChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nrequire('dotenv').config();\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nconst driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\nconst session = driver.session();\nlet score;\nlet relationDescribtion = '';\nconst getPersonMatches = async (name, fatherName = \"\", grandfatherName = \"\", lastName) => {\n  let query = \"\";\n  if (grandfatherName) {\n    query = `\n      MATCH (grandfather:Person {name: $grandfatherName})-[:FATHER_OF]->(father:Person {name: $fatherName})-[:FATHER_OF]->(p:Person {name: $name, lastName: $lastName})\n      RETURN id(p) AS personID, p.name AS personName, p.lastName AS familyName, father.name AS fatherName, grandfather.name AS grandfatherName\n    `;\n  } else if (fatherName) {\n    query = `\n      MATCH (father:Person {name: $fatherName})-[:FATHER_OF]->(p:Person {name: $name, lastName: $lastName})\n      OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n      RETURN id(p) AS personID, p.name AS personName, p.lastName AS familyName, father.name AS fatherName, grandfather.name AS grandfatherName\n    `;\n  } else {\n    query = `\n      MATCH (p:Person {name: $name, lastName: $lastName})\n      OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(p)\n      OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n      RETURN id(p) AS personID, p.name AS personName, p.lastName AS familyName, father.name AS fatherName, grandfather.name AS grandfatherName\n    `;\n  }\n  const params = {\n    name,\n    lastName,\n    fatherName,\n    grandfatherName\n  };\n  const result = await session.run(query, params);\n  return result.records.map(record => ({\n    id: record.get('personID').toNumber(),\n    name: record.get('personName'),\n    father: record.get('fatherName') || \"Unknown\",\n    grandfather: record.get('grandfatherName') || \"Unknown\",\n    lastName: record.get('familyName')\n  }));\n};\n\n// Function that split english translated name that may contain ben to full name only parts.\nfunction splitName(fullName) {\n  const parts = fullName.replace(/ ben /gi, ' ').split(/\\s+/);\n  if (parts.length === 2) {\n    return {\n      personName: parts[0],\n      fatherName: \"\",\n      grandfatherName: \"\",\n      familyName: parts[1]\n    };\n  } else if (parts.length === 3) {\n    return {\n      personName: parts[0],\n      fatherName: parts[1],\n      grandfatherName: \"\",\n      familyName: parts[2]\n    };\n  } else if (parts.length === 4) {\n    return {\n      personName: parts[0],\n      fatherName: parts[1],\n      grandfatherName: parts[2],\n      familyName: parts[3]\n    };\n  }\n  // Default case if structure doesn't match\n  return {\n    personName: parts[0],\n    fatherName: \"\",\n    grandfatherName: \"\",\n    familyName: parts[1]\n  };\n}\nconst getRelationship = async (person1FullName, person2FullName) => {\n  const isArabic = text => /[\\u0600-\\u06FF]/.test(text);\n  let translatedName1, translatedName2;\n  if (isArabic(person1FullName)) {\n    translatedName1 = translateName(person1FullName, false);\n  } else {\n    translatedName1 = person1FullName;\n  }\n  if (isArabic(person2FullName)) {\n    translatedName2 = translateName(person2FullName, false);\n  } else {\n    translatedName2 = person2FullName;\n  }\n  const {\n    personName: person1Name,\n    fatherName: person1FatherName,\n    grandfatherName: person1GrandfatherName,\n    familyName: person1LastName\n  } = splitName(translatedName1);\n  const {\n    personName: person2Name,\n    fatherName: person2FatherName,\n    grandfatherName: person2GrandfatherName,\n    familyName: person2LastName\n  } = splitName(translatedName2);\n  const person1Matches = await getPersonMatches(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\n  const person2Matches = await getPersonMatches(person2Name, person2FatherName, person2GrandfatherName, person2LastName);\n  console.log(\"P1 matches : \", person1Matches);\n  console.log(\"P2 matches : \", person2Matches);\n  let person1ID, person2ID;\n  if (person1Matches.length > 1 || person2Matches.length > 1) {\n    return {\n      error: 'non-unique-name',\n      message: 'تم العثور على عدة أشخاص بنفس الاسم. الرجاء اختيار الصحيح.',\n      duplicates: {\n        person1: person1Matches.length > 1 ? person1Matches : [],\n        person2: person2Matches.length > 1 ? person2Matches : []\n      }\n    };\n  } else {\n    person1ID = person1Matches[0].id;\n    person2ID = person2Matches[0].id;\n  }\n  try {\n    // Function that return the ancestors of a given person starting with the person itself and going up to the root.\n    const getAncestors = async (person1ID, person2ID) => {\n      const result = await session.run(`\n        // Get paths from any person to both persons (limit depth to 4)\n        MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..4]->(p1:Person)\n        WHERE id(p1) = $person1ID\n\n        MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..4]->(p2:Person)\n        WHERE id(p2) = $person2ID\n\n        // Avoid self-match if both IDs are same\n        AND id(p1) <> id(p2)\n\n        // Compute levels\n        WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\n\n        // Order by total distance\n        ORDER BY (level1 + level2) ASC\n        LIMIT 1\n\n        // Return paths with full person info\n        RETURN \n          common.name AS commonAncestorName,\n          common.lastName AS commonAncestorLastName,\n          id(common) AS commonAncestorID,\n          common.gender AS commonAncestorGender,\n          level1 AS generationsFromP1,\n          level2 AS generationsFromP2,\n          [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\n          [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\n\n      `, {\n        person1ID,\n        person2ID\n      });\n      const personResult = await session.run(`\n        MATCH (p:Person)\n        WHERE id(p) = $personID\n        RETURN id(p) AS ID, p.name AS name, p.lastName AS lastName\n      `, {\n        person1ID\n      });\n      const person = personResult.records[0];\n      return [{\n        id: person.get('ID').toNumber(),\n        name: person.get('name'),\n        lastName: person.get('lastName'),\n        level: 0\n      }, ...result.records.map(record => ({\n        commonAcnestorName: record.get('commonAncestorName'),\n        commonAcnestorFamilyName: record.get('commonAncestorLastName'),\n        commonAcnestorID: record.get('commonAncestorID'),\n        commonAncestorGender: record.get('commonAncestorGender'),\n        level1: record.get(generationsFromP1),\n        level2: record.get(generationsFromP2),\n        PathFromAncestorToP1: record.get(pathToP1),\n        PathFromAncestorToP2: record.get(pathToP2)\n      }))];\n    };\n\n    // const maxLevels = 4; \n    let relationRecord = await getAncestors(person1ID);\n    const pathToP1 = relationRecord.PathFromAncestorToP1;\n    const pathToP2 = relationRecord.PathFromAncestorToP2;\n    console.log(pathToP1);\n    console.log(pathToP2);\n    const translatedName1 = translateName(person1FullName);\n    const translatedName2 = translateName(person2FullName);\n    const gender1 = pathToP1[pathToP1.length].gender;\n    const gender2 = pathToP2[pathToP2.length].gender;\n    var p1Level = relationRecord.level1;\n    var p2Level = relationRecord.level2;\n    console.log(`Level: (${p1Level}, ${p2Level})`);\n    if (p1Level === 0 && p2Level === 1) {\n      if (gender1 === 'Male') {\n        score = 100;\n        return `${translatedName1} هو والد ${translatedName2}`;\n      } else {\n        return `${translatedName1} هي والدة ${translatedName2}`;\n      }\n    } else if (p1Level === 1 && p2Level === 0) {\n      if (gender1 === 'Male') {\n        console.log(`${translatedName1} هو ابن ${translatedName2}`);\n        return `${translatedName1} هو ابن ${translatedName2}`;\n      } else {\n        console.log(`${translatedName1} هي إبنة ${person2FullName}`);\n        return `${translatedName1} هي إبنة ${translatedName2}`;\n      }\n    } else if (p1Level === 2 && p2Level === 0) {\n      if (gender1 === 'Male') {\n        return `${translatedName1} هو حفيد ${translatedName2}`;\n      } else {\n        return `${translatedName1} هي حفيدة ${translatedName2}`;\n      }\n    } else if (p1Level === 0 && p2Level === 2) {\n      if (gender1 === 'Male') {\n        return `${translatedName1} هو جدّ ${translatedName2}`;\n      } else {\n        return `${translatedName1} هي جدّة ${translatedName2}`;\n      }\n    } else if (p1Level === 3 && p2Level === 0) {\n      if (gender1 === 'Male') {\n        return `${translatedName1} هو إبن حفيد ${translatedName2}`;\n      } else {\n        return `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\n      }\n    } else if (p1Level === 0 && p2Level === 3) {\n      if (gender1 === 'Male') {\n        return `${translatedName1} و جد والد ${translatedName2}`;\n      } else {\n        return `${translatedName1} هي جدة والدة ${translatedName2}`;\n      }\n    } else if (p1Level === 1 && p2Level === 1) {\n      if (gender1 === 'Male' && gender2 === 'Male') {\n        return `${translatedName1} و ${translatedName2} إخوة`;\n      } else if (gender1 === 'Female' && gender2 === 'Female') {\n        return `${translatedName1} و ${translatedName2} أخوات`;\n      } else {\n        return `${translatedName1} و ${translatedName2} إخوة`;\n      }\n    } else if (p1Level === 2 && p2Level === 1) {\n      if (gender1 === 'Male') {\n        return `${translatedName1} هو ابن أخ ${translatedName2}`;\n      } else {\n        return `${translatedName1} هي إبن أخ ${translatedName2}`;\n      }\n    } else if (p1Level === 1 && p2Level === 2) {\n      if (gender1 === 'Male') {\n        return `${translatedName1} هو عم ${translatedName2}'`;\n      } else {\n        return `${translatedName1} هي عمّة ${translatedName2}`;\n      }\n    } else if (p1Level === 2 && p2Level === 2) {\n      console.log(`${translatedName1} و ${translatedName2} أولاد العم.`);\n      const p1AncestorGender = pathToP1[2].gender;\n      const p2AncestorGender = pathToP2[2].gender;\n      console.log(p1AncestorGender, p2AncestorGender);\n      if (gender1 === 'Male') {\n        if (p1AncestorGender === 'Male') {\n          if (p2AncestorGender === 'Male') {\n            // ولد عمه\n            return `${translatedName1} إبن عم ${translatedName2}`;\n          } else {\n            // ولد عمته\n            return `${translatedName1} هو إبن عمّة ${translatedName2}`;\n          }\n        } else {\n          if (p2AncestorGender === 'Male') {\n            // ولد خاله\n            return `${translatedName1} هو إبن خال ${translatedName2}`;\n          } else {\n            // ولد خالته\n            return `${translatedName1} هو إبن خالة ${translatedName2}`;\n          }\n        }\n      } else {\n        if (p1AncestorGender === 'Male') {\n          if (p2AncestorGender === 'Male') {\n            // بنت عمه\n            return `${translatedName1} هي إبنة عمّ ${translatedName2}`;\n          } else {\n            // بنت عمته\n            return `${translatedName1} هي إبنة عمّة ${translatedName2}`;\n          }\n        } else {\n          if (p2AncestorGender === 'Male') {\n            // بنت خاله\n            return `${translatedName1} هي إبنة خال ${translatedName2}`;\n          } else {\n            // بنت خالته\n            return `${translatedName1} هي إبنة خالة ${translatedName2}`;\n          }\n        }\n      }\n    } else if (p1Level === 2 && p2Level === 3) {\n      const p1AncestorGender = pathToP1[2].gender;\n      const p2AncestorGender = pathToP2[3].gender;\n      if (gender1 === 'Male') {\n        if (p1AncestorGender === 'Male') {\n          // father's side\n          if (p2AncestorGender === 'Male') {\n            // father's brother's son\n            return `${translatedName1} هو إبن عم والد ${translatedName2}`;\n          } else {\n            return `${translatedName1} هو إبن عمة والد ${translatedName2}`;\n          }\n        } else {\n          // mother's side\n          if (p2AncestorGender === 'Male') {\n            // mother's brother's son\n            return `${translatedName1} هو إبن عم أم ${translatedName2}.`;\n          } else {\n            // mother's brother's daughter\n            return `${translatedName1} هو إبن عمّة أم ${translatedName2}`;\n          }\n        }\n      } else {\n        // If person1 is female\n\n        if (p1AncestorGender === 'Male') {\n          // father's side\n          if (p2AncestorGender === 'Male') {\n            // father's brother's son\n            return `${translatedName1} هي إبنة عم والد ${translatedName2}`;\n          } else {\n            // father's brother's daughter\n            return `${translatedName1} هي إبنة عمة والد ${translatedName2}`;\n          }\n        } else {\n          // mother's side\n          if (p2AncestorGender === 'Male') {\n            // mother's brother's son\n            return `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\n          } else {\n            // mother's brother's daughter\n            return `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\n          }\n        }\n      }\n    } else if (p1Level === 3 && p2Level === 2) {\n      const p1AncestorGender = pathToP1[3].gender;\n      const p2AncestorGender = pathToP2[2].gender;\n      if (p1AncestorGender === 'Male') {\n        // father's side\n        if (p2AncestorGender === 'Male') {\n          // father's brother's son\n          return `والد ${translatedName1} هو إبن عم ${translatedName2}`;\n        } else {\n          return `والد ${translatedName1} هو إبن خال ${translatedName2}`;\n        }\n      } else {\n        // mother's side\n        if (p2AncestorGender === 'Male') {\n          // mother's brother's son\n          return `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\n        } else {\n          // mother's brother's daughter\n          return `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\n        }\n      }\n    } else if (p1Level === 3 && p2Level === 3) {\n      const p1AncestorGender = pathToP1[2].gender;\n      const p2AncestorGender = pathToP2[3].gender;\n      const p1GreatAncestorGender = pathToP1[4].gender;\n      const p2GreatAncestorGender = pathToP2[4].gender;\n\n      // Ancestor changes paternal/maternal\n      // Great Ancestor changes grandfather/grandmother\n      if (p1AncestorGender === 'Male') {\n        if (p2AncestorGender === 'Male') {\n          if (p1GreatAncestorGender === 'Male') {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n            } else {\n              return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n            }\n          } else {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n            } else {\n              return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n            }\n          }\n        } else {\n          if (p1GreatAncestorGender === 'Male') {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\n            } else {\n              return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n            }\n          } else {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\n            } else {\n              return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n            }\n          }\n        }\n      } else {\n        if (p2AncestorGender === 'Male') {\n          if (p1GreatAncestorGender === 'Male') {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\n            } else {\n              return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n            }\n          } else {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\n            } else {\n              return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\n            }\n          }\n        } else {\n          if (p1GreatAncestorGender === 'Male') {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\n            } else {\n              return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n            }\n          } else {\n            if (p2GreatAncestorGender === 'Male') {\n              return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n            } else {\n              return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n            }\n          }\n        }\n      }\n    }\n    console.log('No direct relation found.');\n    return 'No direct relation found';\n  } catch (error) {\n    console.error('Error in relationship lookup:', error);\n    return 'Error in relationship lookup';\n  }\n};\nconst getGender = async personID => {\n  const session = driver.session(); // Open a session\n\n  try {\n    const result = await session.run(`MATCH (p:Person) \n      WHERE id(p) = $personID\n      \n      RETURN p.gender AS gender`, {\n      personID\n    });\n    if (result.records.length > 0) {\n      const gender = result.records[0].get('gender');\n      return gender; // Return the gender value\n    } else {\n      console.log(`No person found with the ID ${personID}`);\n      return null; // Return null when no person is found\n    }\n  } catch (error) {\n    console.error('Error retrieving gender:', error);\n    return null; // Return null in case of an error\n  } finally {\n    await session.close(); // Always close the session after the query\n  }\n};\nconst getAncestorFullName = (personAncestors, level) => {\n  // Check if the ancestor exists at the given level\n  if (!personAncestors[level - 1] || !personAncestors[level - 1].properties) {\n    return `Unknown (Level: ${level})`;\n  }\n  const ancestor = personAncestors[level - 1].properties;\n  const name = ancestor.name || \"Unknown\"; // Default to \"Unknown\" if name is missing\n  const lastName = ancestor.lastName || \"Unknown\"; // Default to \"Unknown\" if lastName is missing\n\n  return `${name} ${lastName}`;\n};\nexport const translateName = (fullName, language = true) => {\n  const nameParts = fullName.split(' ');\n\n  // Build reverse translation map if needed\n  const reverseTranslations = Object.fromEntries(Object.entries(translations).map(([key, value]) => [value, key]));\n  const dict = language ? translations : reverseTranslations;\n  const translatedParts = nameParts.map(part => dict[part] || part);\n  return translatedParts.join(' ');\n};\nconst RelationPage = () => {\n  _s();\n  const [person1, setPerson1] = useState('');\n  const [person2, setPerson2] = useState('');\n  const [relationship, setRelationship] = useState('');\n  const [duplicates, setDuplicates] = useState({\n    person1: [],\n    person2: []\n  });\n  // const relationTypes = [\"Blood\"]; // or [\"In-Law\", \"Marriage\"]\n  // const explanation = \"You both share the same grandfather. This makes you close relatives (blood relation).\";\n  function getArabicClosenessLabel(score) {\n    if (score >= 95) return \"صلة قرابة شديدة جدًا\";\n    if (score >= 85) return \"صلة قرابة قوية\";\n    if (score >= 70) return \"صلة قرابة متوسطة\";\n    if (score >= 50) return \"صلة بعيدة نسبياً\";\n    if (score > 0) return \"صلة ضعيفة جدًا\";\n    return \"لا توجد صلة واضحة\";\n  }\n  const fetchRelationship = async (name1, name2) => {\n    const relationshipResult = await getRelationship(name1, name2);\n    return relationshipResult;\n  };\n  const FetchRelationship = async e => {\n    e.preventDefault();\n    const result = await fetchRelationship(person1, person2);\n    if (result.error === 'non-unique-name') {\n      setDuplicates(result.duplicates);\n      setRelationship(result.message); // optional message\n    } else {\n      setDuplicates({\n        person1: [],\n        person2: []\n      }); // clear if no dups\n      setRelationship(result);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relation-page\",\n    children: [(duplicates.person1.length > 0 || duplicates.person2.length > 0) && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"duplicates-panel\",\n      children: [duplicates.person1.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"duplicates-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0623\\u0643\\u062A\\u0628 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: duplicates.person1.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`\n          }, `p1-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this), duplicates.person2.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"duplicates-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0627\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D \\\"\", person2, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: duplicates.person2.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`\n          }, `p2-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relation-form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\u0645\\u0627\\u0647\\u064A \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\\u061F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"DescriptionZone\",\n          children: \"\\u0627\\u0644\\u0647\\u062F\\u0641 \\u0645\\u0646 \\u0647\\u0630\\u0647 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0647\\u0648 \\u062A\\u062D\\u062F\\u064A\\u062F \\u0635\\u0644\\u0629 \\u0627\\u0644\\u0642\\u0631\\u0627\\u0628\\u0629 \\u0628\\u064A\\u0646 \\u0634\\u062E\\u0635\\u064A\\u0646 \\u0628\\u0646\\u0627\\u0621\\u064B\\u0627 \\u0639\\u0644\\u0649 \\u0627\\u0633\\u0645\\u0647\\u0645. \\u0643\\u0644 \\u0645\\u0627\\u0639\\u0644\\u064A\\u0643 \\u0641\\u0639\\u0644\\u0647 \\u0647\\u0648 \\u0627\\u062F\\u062E\\u0627\\u0644 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0627\\u0648\\u0644 \\u0648\\u0627\\u0644\\u062B\\u0627\\u0646\\u064A \\u0648\\u062B\\u0645 \\u0627\\u0644\\u0646\\u0642\\u0631 \\u0639\\u0644\\u0649 \\\"\\u0627\\u0644\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\\\" \\u0633\\u062A\\u0638\\u0647\\u0631 \\u0644\\u0643 \\u0627\\u0644\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0641\\u064A \\u0627\\u0633\\u0647\\u0644 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0648\\u0627\\u0644\\u062A\\u064A \\u064A\\u062A\\u0648\\u0636\\u062D \\u0644\\u0643 \\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0648\\u0645\\u062F\\u0649 \\u0642\\u0631\\u0627\\u0628\\u062A\\u0647\\u0627\\u061F \\u0641\\u064A \\u062D\\u0627\\u0644 \\u0648\\u062C\\u0648\\u062F \\u0627\\u064A \\u062A\\u0634\\u0627\\u0628\\u0647\\u0627\\u062A \\u0627\\u0648 \\u062A\\u0643\\u0631\\u0627\\u0631\\u0627\\u062A \\u0641\\u064A \\u0627\\u0644\\u0627\\u0633\\u0645\\u0627\\u0621 \\u0633\\u064A\\u0645 \\u062A\\u0648\\u0641\\u064A\\u0631 \\u062E\\u064A\\u0627\\u0631\\u0627\\u062A \\u0644\\u062A\\u062D\\u062F\\u064A\\u062F \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: FetchRelationship,\n          className: \"relation-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u0623\\u0648\\u0644\",\n              value: person1,\n              onChange: e => setPerson1(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u062B\\u0627\\u0646\\u064A\",\n              value: person2,\n              onChange: e => setPerson2(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ButtonSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"checkButton\",\n              children: \"\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"resetButton\",\n              children: \"\\u0625\\u0644\\u063A\\u0627\\u0621\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 7\n      }, this), relationship && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relationship-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"resultTitle\",\n          children: \"\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"relationText\",\n          children: relationship\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"result-details\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"result-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062F\\u0631\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"score-cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"score-bar-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"score-bar-fill\",\n                      style: {\n                        width: '80%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 669,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"score-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"score-value\",\n                      children: \"80%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"score-category high\",\n                      children: \"\\u0642\\u0648\\u064A\\u0629\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 673,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"relationship-tag\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"tag blood\",\n                    children: \"\\u062F\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062A\\u0641\\u0633\\u064A\\u0631 \\u0625\\u0636\\u0627\\u0641\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"relation-explanation\",\n                  children: \"\\u0647\\u0624\\u0644\\u0627\\u0621 \\u0627\\u0644\\u0634\\u062E\\u0635\\u064A\\u0646 \\u0645\\u0631\\u062A\\u0628\\u0637\\u064A\\u0646 \\u0639\\u0646 \\u0637\\u0631\\u064A\\u0642 \\u0627\\u0644\\u0623\\u0628\\u0646\\u0627\\u0621 \\u0648\\u0627\\u0644\\u0623\\u062C\\u062F\\u0627\\u062F.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"generation-distance\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"numGen\",\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 51\n                  }, this), \" \\u0623\\u062C\\u064A\\u0627\\u0644\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0623\\u0642\\u0631\\u0628 \\u062C\\u062F \\u0645\\u0634\\u062A\\u0631\\u0643\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"common-ancestor\",\n                  children: \"\\u0627\\u0644\\u062D\\u0627\\u062C \\u0645\\u062D\\u0645\\u062F \\u0628\\u0646 \\u0627\\u0644\\u0637\\u064A\\u0628\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n};\n_s(RelationPage, \"qHAXbttrKxE0kvX0hfwbhsoSWf0=\");\n_c = RelationPage;\nexport default RelationPage;\nvar _c;\n$RefreshReg$(_c, \"RelationPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","translations","require","config","neo4jURI","process","env","REACT_APP_NEO4J_URI","neo4jUser","REACT_APP_NEO4J_USER","neo4jPassword","REACT_APP_NEO4J_PASSWORD","driver","auth","basic","session","score","relationDescribtion","getPersonMatches","name","fatherName","grandfatherName","lastName","query","params","result","run","records","map","record","id","get","toNumber","father","grandfather","splitName","fullName","parts","replace","split","length","personName","familyName","getRelationship","person1FullName","person2FullName","isArabic","text","test","translatedName1","translatedName2","translateName","person1Name","person1FatherName","person1GrandfatherName","person1LastName","person2Name","person2FatherName","person2GrandfatherName","person2LastName","person1Matches","person2Matches","console","log","person1ID","person2ID","error","message","duplicates","person1","person2","getAncestors","personResult","person","level","commonAcnestorName","commonAcnestorFamilyName","commonAcnestorID","commonAncestorGender","level1","generationsFromP1","level2","generationsFromP2","PathFromAncestorToP1","pathToP1","PathFromAncestorToP2","pathToP2","relationRecord","gender1","gender","gender2","p1Level","p2Level","p1AncestorGender","p2AncestorGender","p1GreatAncestorGender","p2GreatAncestorGender","getGender","personID","close","getAncestorFullName","personAncestors","properties","ancestor","language","nameParts","reverseTranslations","Object","fromEntries","entries","key","value","dict","translatedParts","part","join","RelationPage","_s","setPerson1","setPerson2","relationship","setRelationship","setDuplicates","getArabicClosenessLabel","fetchRelationship","name1","name2","relationshipResult","FetchRelationship","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","p","idx","onSubmit","type","placeholder","onChange","target","class","style","width","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/RelationChecker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './RelationChecker.css';\r\nconst translations = require('./translation.json');\r\nrequire('dotenv').config();\r\n\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nconst driver = require('neo4j-driver').driver(\r\n    neo4jURI,\r\n    require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n);\r\nconst session = driver.session();\r\n\r\nlet score;\r\nlet relationDescribtion = '';\r\nconst getPersonMatches = async (name, fatherName = \"\", grandfatherName = \"\", lastName) => {\r\n  let query = \"\";\r\n\r\n  if (grandfatherName) {\r\n    query = `\r\n      MATCH (grandfather:Person {name: $grandfatherName})-[:FATHER_OF]->(father:Person {name: $fatherName})-[:FATHER_OF]->(p:Person {name: $name, lastName: $lastName})\r\n      RETURN id(p) AS personID, p.name AS personName, p.lastName AS familyName, father.name AS fatherName, grandfather.name AS grandfatherName\r\n    `;\r\n  } \r\n  else if (fatherName) {\r\n    query = `\r\n      MATCH (father:Person {name: $fatherName})-[:FATHER_OF]->(p:Person {name: $name, lastName: $lastName})\r\n      OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n      RETURN id(p) AS personID, p.name AS personName, p.lastName AS familyName, father.name AS fatherName, grandfather.name AS grandfatherName\r\n    `;\r\n  } \r\n  else {\r\n    query = `\r\n      MATCH (p:Person {name: $name, lastName: $lastName})\r\n      OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(p)\r\n      OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n      RETURN id(p) AS personID, p.name AS personName, p.lastName AS familyName, father.name AS fatherName, grandfather.name AS grandfatherName\r\n    `;\r\n  }\r\n\r\n  const params = { name, lastName, fatherName, grandfatherName };\r\n  const result = await session.run(query, params);\r\n\r\n  return result.records.map(record => ({\r\n    id: record.get('personID').toNumber(),\r\n    name: record.get('personName'),\r\n    father: record.get('fatherName') || \"Unknown\",\r\n    grandfather: record.get('grandfatherName') || \"Unknown\",\r\n    lastName: record.get('familyName')\r\n  }));\r\n};\r\n\r\n// Function that split english translated name that may contain ben to full name only parts.\r\nfunction splitName(fullName) {\r\n  const parts = fullName.replace(/ ben /gi, ' ').split(/\\s+/);\r\n  if (parts.length === 2) {\r\n    return {\r\n      personName: parts[0],\r\n      fatherName: \"\",\r\n      grandfatherName: \"\",\r\n      familyName: parts[1]\r\n    };\r\n  } else if (parts.length === 3) {\r\n    return {\r\n      personName: parts[0],\r\n      fatherName: parts[1],\r\n      grandfatherName: \"\",\r\n      familyName: parts[2]\r\n    };\r\n  } else if (parts.length === 4) {\r\n    return {\r\n      personName: parts[0],\r\n      fatherName: parts[1],\r\n      grandfatherName: parts[2],\r\n      familyName: parts[3]\r\n    };\r\n  }\r\n  // Default case if structure doesn't match\r\n  return { personName: parts[0], fatherName: \"\", grandfatherName: \"\", familyName: parts[1] };\r\n}\r\n\r\nconst getRelationship = async (person1FullName, person2FullName) => {\r\n  const isArabic = (text) => /[\\u0600-\\u06FF]/.test(text);\r\n  let translatedName1, translatedName2;\r\n\r\n  if (isArabic(person1FullName)){\r\n    translatedName1 = translateName(person1FullName, false);\r\n  }\r\n  else{\r\n    translatedName1 = person1FullName;\r\n  }\r\n  if (isArabic(person2FullName)){\r\n    translatedName2 = translateName(person2FullName, false);\r\n  }\r\n  else{\r\n    translatedName2 = person2FullName;\r\n  }\r\n  \r\n  const { personName: person1Name, fatherName: person1FatherName, grandfatherName: person1GrandfatherName, familyName: person1LastName } = splitName(translatedName1);\r\n  const { personName: person2Name, fatherName: person2FatherName, grandfatherName: person2GrandfatherName, familyName: person2LastName } = splitName(translatedName2);\r\n  const person1Matches = await getPersonMatches(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\r\n  const person2Matches = await getPersonMatches(person2Name, person2FatherName, person2GrandfatherName, person2LastName);\r\n\r\n  console.log(\"P1 matches : \", person1Matches);\r\n  console.log(\"P2 matches : \", person2Matches);\r\n\r\n  let person1ID, person2ID;\r\n  if (person1Matches.length > 1 || person2Matches.length > 1) {\r\n    return {\r\n      error: 'non-unique-name',\r\n      message: 'تم العثور على عدة أشخاص بنفس الاسم. الرجاء اختيار الصحيح.',\r\n      duplicates: {\r\n        person1: person1Matches.length > 1 ? person1Matches : [],\r\n        person2: person2Matches.length > 1 ? person2Matches : []\r\n      }\r\n    };\r\n  }\r\n  else{\r\n    person1ID = person1Matches[0].id;\r\n    person2ID = person2Matches[0].id;\r\n  }\r\n  try {\r\n\r\n    // Function that return the ancestors of a given person starting with the person itself and going up to the root.\r\n    const getAncestors = async (person1ID, person2ID) => {\r\n      const result = await session.run(`\r\n        // Get paths from any person to both persons (limit depth to 4)\r\n        MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..4]->(p1:Person)\r\n        WHERE id(p1) = $person1ID\r\n\r\n        MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..4]->(p2:Person)\r\n        WHERE id(p2) = $person2ID\r\n\r\n        // Avoid self-match if both IDs are same\r\n        AND id(p1) <> id(p2)\r\n\r\n        // Compute levels\r\n        WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\r\n\r\n        // Order by total distance\r\n        ORDER BY (level1 + level2) ASC\r\n        LIMIT 1\r\n\r\n        // Return paths with full person info\r\n        RETURN \r\n          common.name AS commonAncestorName,\r\n          common.lastName AS commonAncestorLastName,\r\n          id(common) AS commonAncestorID,\r\n          common.gender AS commonAncestorGender,\r\n          level1 AS generationsFromP1,\r\n          level2 AS generationsFromP2,\r\n          [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\r\n          [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\r\n\r\n      `, { person1ID, person2ID });\r\n    \r\n      const personResult = await session.run(`\r\n        MATCH (p:Person)\r\n        WHERE id(p) = $personID\r\n        RETURN id(p) AS ID, p.name AS name, p.lastName AS lastName\r\n      `, { person1ID });\r\n    \r\n      const person = personResult.records[0];\r\n    \r\n      return [\r\n        {\r\n          id: person.get('ID').toNumber(),\r\n          name: person.get('name'),\r\n          lastName: person.get('lastName'),\r\n          level: 0\r\n        },\r\n        ...result.records.map(record => ({\r\n          commonAcnestorName: record.get('commonAncestorName'),\r\n          commonAcnestorFamilyName: record.get('commonAncestorLastName'),\r\n          commonAcnestorID: record.get('commonAncestorID'),\r\n          commonAncestorGender: record.get('commonAncestorGender'),\r\n          level1: record.get(generationsFromP1),\r\n          level2: record.get(generationsFromP2),\r\n          PathFromAncestorToP1: record.get(pathToP1),\r\n          PathFromAncestorToP2: record.get(pathToP2)\r\n        }))\r\n      ];\r\n    };\r\n\r\n    // const maxLevels = 4; \r\n    let relationRecord = await getAncestors(person1ID);\r\n    const pathToP1 = relationRecord.PathFromAncestorToP1;\r\n    const pathToP2 = relationRecord.PathFromAncestorToP2;\r\n\r\n    console.log(pathToP1);\r\n    console.log(pathToP2);\r\n\r\n    const translatedName1 = translateName(person1FullName);\r\n    const translatedName2 = translateName(person2FullName);\r\n    const gender1 = pathToP1[pathToP1.length].gender;\r\n    const gender2 = pathToP2[pathToP2.length].gender;\r\n\r\n    var p1Level = relationRecord.level1;\r\n    var p2Level = relationRecord.level2;\r\n          \r\n          console.log(`Level: (${p1Level}, ${p2Level})`);\r\n\r\n          if (p1Level === 0 && p2Level === 1) {\r\n            if (gender1 === 'Male'){\r\n              score = 100;\r\n              return `${translatedName1} هو والد ${translatedName2}`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي والدة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 1 && p2Level === 0) {\r\n            if (gender1 === 'Male'){\r\n              console.log(`${translatedName1} هو ابن ${translatedName2}`);\r\n              return `${translatedName1} هو ابن ${translatedName2}`;\r\n            }\r\n            else{\r\n              console.log(`${translatedName1} هي إبنة ${person2FullName}`);\r\n              return `${translatedName1} هي إبنة ${translatedName2}`;\r\n            }\r\n          } \r\n\r\n          else if (p1Level === 2 && p2Level === 0) {\r\n            if (gender1 === 'Male'){\r\n              return `${translatedName1} هو حفيد ${translatedName2}`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي حفيدة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 0 && p2Level === 2) {\r\n            if (gender1 === 'Male'){\r\n              return `${translatedName1} هو جدّ ${translatedName2}`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي جدّة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 3 && p2Level === 0) {\r\n            if (gender1 === 'Male'){\r\n              return `${translatedName1} هو إبن حفيد ${translatedName2}`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 0 && p2Level === 3) {\r\n            if (gender1 === 'Male'){\r\n              return `${translatedName1} و جد والد ${translatedName2}`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي جدة والدة ${translatedName2}`;\r\n            }\r\n          } \r\n          \r\n          else if (p1Level === 1 && p2Level === 1) {\r\n            if (gender1 === 'Male' && gender2 === 'Male'){\r\n              return `${translatedName1} و ${translatedName2} إخوة`;\r\n            }\r\n            else if (gender1 === 'Female' && gender2 === 'Female'){\r\n              return `${translatedName1} و ${translatedName2} أخوات`;\r\n            }\r\n            else{\r\n              return `${translatedName1} و ${translatedName2} إخوة`;\r\n            }\r\n          } \r\n          \r\n          else if (p1Level === 2 && p2Level === 1) {\r\n            if (gender1 === 'Male'){\r\n              return `${translatedName1} هو ابن أخ ${translatedName2}`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي إبن أخ ${translatedName2}`;\r\n            }\r\n          } \r\n          \r\n          else if (p1Level === 1 && p2Level === 2) {\r\n            if (gender1 === 'Male'){\r\n              return `${translatedName1} هو عم ${translatedName2}'`;\r\n            }\r\n            else{\r\n              return `${translatedName1} هي عمّة ${translatedName2}`;\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 2 && p2Level === 2) {\r\n            console.log(`${translatedName1} و ${translatedName2} أولاد العم.`);\r\n          \r\n            const p1AncestorGender = pathToP1[2].gender;\r\n            const p2AncestorGender = pathToP2[2].gender;\r\n\r\n            console.log(p1AncestorGender, p2AncestorGender);\r\n\r\n            if (gender1 === 'Male') { \r\n              if (p1AncestorGender === 'Male') { \r\n                if (p2AncestorGender === 'Male'){  // ولد عمه\r\n                  return `${translatedName1} إبن عم ${translatedName2}`;\r\n                }\r\n                else{ // ولد عمته\r\n                  return `${translatedName1} هو إبن عمّة ${translatedName2}`;\r\n                }\r\n              } \r\n              else {  \r\n                if (p2AncestorGender === 'Male'){  // ولد خاله\r\n                  return `${translatedName1} هو إبن خال ${translatedName2}`;\r\n                }\r\n                else{ // ولد خالته\r\n                  return `${translatedName1} هو إبن خالة ${translatedName2}`;\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (p1AncestorGender === 'Male') { \r\n                if (p2AncestorGender === 'Male'){  // بنت عمه\r\n                  return `${translatedName1} هي إبنة عمّ ${translatedName2}`;\r\n                }\r\n                else{ // بنت عمته\r\n                  return `${translatedName1} هي إبنة عمّة ${translatedName2}`;\r\n                }\r\n              } \r\n              else {  \r\n                if (p2AncestorGender === 'Male'){  // بنت خاله\r\n                  return `${translatedName1} هي إبنة خال ${translatedName2}`;\r\n                }\r\n                else{ // بنت خالته\r\n                  return `${translatedName1} هي إبنة خالة ${translatedName2}`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          else if (p1Level === 2 && p2Level === 3) {         \r\n\r\n            const p1AncestorGender = pathToP1[2].gender;\r\n            const p2AncestorGender = pathToP2[3].gender;\r\n\r\n            if (gender1 === 'Male') { \r\n              \r\n              if (p1AncestorGender === 'Male') {  // father's side\r\n                if (p2AncestorGender === 'Male') {  // father's brother's son\r\n                  return `${translatedName1} هو إبن عم والد ${translatedName2}`;\r\n                } else { \r\n                  return `${translatedName1} هو إبن عمة والد ${translatedName2}`;\r\n                }\r\n              } else {  // mother's side\r\n                if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n                  return `${translatedName1} هو إبن عم أم ${translatedName2}.`;\r\n                } else {  // mother's brother's daughter\r\n                  return `${translatedName1} هو إبن عمّة أم ${translatedName2}`;\r\n                }\r\n              }\r\n            } else {  // If person1 is female\r\n            \r\n              if (p1AncestorGender === 'Male') {  // father's side\r\n                if (p2AncestorGender === 'Male') {  // father's brother's son\r\n                  return `${translatedName1} هي إبنة عم والد ${translatedName2}`;\r\n                } else {  // father's brother's daughter\r\n                  return `${translatedName1} هي إبنة عمة والد ${translatedName2}`;\r\n                }\r\n              } else {  // mother's side\r\n                if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n                  return `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\r\n                } else {  // mother's brother's daughter\r\n                  return `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n          \r\n          else if (p1Level === 3 && p2Level === 2) {          \r\n            const p1AncestorGender = pathToP1[3].gender;\r\n            const p2AncestorGender = pathToP2[2].gender;\r\n\r\n            if (p1AncestorGender === 'Male') {  // father's side\r\n              if (p2AncestorGender === 'Male') {  // father's brother's son\r\n                return `والد ${translatedName1} هو إبن عم ${translatedName2}`;\r\n              } else { \r\n                return `والد ${translatedName1} هو إبن خال ${translatedName2}`;\r\n              }\r\n            } \r\n            else {  // mother's side\r\n              if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n                return `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\r\n              } else {  // mother's brother's daughter\r\n                return `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\r\n              }\r\n            }\r\n            \r\n            \r\n          }\r\n          else if (p1Level === 3 && p2Level === 3) {          \r\n            \r\n            const p1AncestorGender = pathToP1[2].gender;\r\n            const p2AncestorGender = pathToP2[3].gender;\r\n            const p1GreatAncestorGender = pathToP1[4].gender;\r\n            const p2GreatAncestorGender = pathToP2[4].gender;\r\n\r\n            // Ancestor changes paternal/maternal\r\n            // Great Ancestor changes grandfather/grandmother\r\n            if (p1AncestorGender === 'Male') { \r\n              if (p2AncestorGender === 'Male'){\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (p2AncestorGender === 'Male'){\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                if (p1GreatAncestorGender === 'Male'){\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n                else {\r\n                  if (p2GreatAncestorGender === 'Male'){\r\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n                  }\r\n                  else{\r\n                    return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n\r\n\r\n    console.log('No direct relation found.');\r\n    return 'No direct relation found';\r\n  } catch (error) {\r\n    console.error('Error in relationship lookup:', error);\r\n    return 'Error in relationship lookup';\r\n  }\r\n};\r\n\r\nconst getGender = async (personID) => {\r\n  const session = driver.session(); // Open a session\r\n\r\n  try {\r\n    const result = await session.run(\r\n      `MATCH (p:Person) \r\n      WHERE id(p) = $personID\r\n      \r\n      RETURN p.gender AS gender`,\r\n      { personID }\r\n    );\r\n    \r\n    if (result.records.length > 0) {\r\n      const gender = result.records[0].get('gender');\r\n      return gender; // Return the gender value\r\n    } else {\r\n      console.log(`No person found with the ID ${personID}`);\r\n      return null; // Return null when no person is found\r\n    }\r\n  } catch (error) {\r\n    console.error('Error retrieving gender:', error);\r\n    return null; // Return null in case of an error\r\n  } finally {\r\n    await session.close(); // Always close the session after the query\r\n  }\r\n};\r\n\r\nconst getAncestorFullName = (personAncestors, level) => {\r\n  // Check if the ancestor exists at the given level\r\n  if (!personAncestors[level - 1] || !personAncestors[level - 1].properties) {\r\n    return `Unknown (Level: ${level})`;\r\n  }\r\n\r\n  const ancestor = personAncestors[level - 1].properties;\r\n  const name = ancestor.name || \"Unknown\"; // Default to \"Unknown\" if name is missing\r\n  const lastName = ancestor.lastName || \"Unknown\"; // Default to \"Unknown\" if lastName is missing\r\n\r\n  return `${name} ${lastName}`;\r\n};\r\n\r\nexport const translateName = (fullName, language = true) => {\r\n  const nameParts = fullName.split(' ');\r\n\r\n  // Build reverse translation map if needed\r\n  const reverseTranslations = Object.fromEntries(\r\n    Object.entries(translations).map(([key, value]) => [value, key])\r\n  );\r\n\r\n  const dict = language ? translations : reverseTranslations;\r\n\r\n  const translatedParts = nameParts.map(part => dict[part] || part);\r\n\r\n  return translatedParts.join(' ');\r\n};\r\n\r\n\r\nconst RelationPage = () => {\r\n  const [person1, setPerson1] = useState('');\r\n  const [person2, setPerson2] = useState('');\r\n  const [relationship, setRelationship] = useState('');\r\n  const [duplicates, setDuplicates] = useState({ person1: [], person2: [] });\r\n  // const relationTypes = [\"Blood\"]; // or [\"In-Law\", \"Marriage\"]\r\n  // const explanation = \"You both share the same grandfather. This makes you close relatives (blood relation).\";\r\n  function getArabicClosenessLabel(score) {\r\n    if (score >= 95) return \"صلة قرابة شديدة جدًا\";\r\n    if (score >= 85) return \"صلة قرابة قوية\";\r\n    if (score >= 70) return \"صلة قرابة متوسطة\";\r\n    if (score >= 50) return \"صلة بعيدة نسبياً\";\r\n    if (score > 0) return \"صلة ضعيفة جدًا\";\r\n    return \"لا توجد صلة واضحة\";\r\n  }\r\n  const fetchRelationship = async (name1, name2) => {\r\n    \r\n    const relationshipResult = await getRelationship(name1, name2);\r\n    return relationshipResult;\r\n  };\r\n\r\n  const FetchRelationship = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const result = await fetchRelationship(person1, person2);\r\n  \r\n    if (result.error === 'non-unique-name') {\r\n      setDuplicates(result.duplicates);\r\n      setRelationship(result.message); // optional message\r\n    } else {\r\n      setDuplicates({ person1: [], person2: [] }); // clear if no dups\r\n      setRelationship(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relation-page\">\r\n    {/* Left Panel: Duplicate Suggestions */}\r\n    {(duplicates.person1.length > 0 || duplicates.person2.length > 0) && (\r\n      <aside className=\"duplicates-panel\">\r\n        {duplicates.person1.length > 0 && (\r\n          <section className=\"duplicates-group\">\r\n            <h3>أكتب الاسم الكامل للشخص الصحيح:</h3>\r\n            <ul>\r\n              {duplicates.person1.map((p, idx) => (\r\n                <li key={`p1-${idx}`}>\r\n                  {`${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n  \r\n        {duplicates.person2.length > 0 && (\r\n          <section className=\"duplicates-group\">\r\n            <h3>اختر الشخص الصحيح \"{person2}\"</h3>\r\n            <ul>\r\n              {duplicates.person2.map((p, idx) => (\r\n                <li key={`p2-${idx}`}>\r\n                  {`${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n      </aside>\r\n    )}\r\n  \r\n    {/* Main Panel: Form + Result */}\r\n    <main className=\"main-panel\">\r\n      <section className=\"relation-form-section\">\r\n        <h2 className=\"section-title\">ماهي العلاقة بينهما؟</h2>\r\n        <p id=\"DescriptionZone\">\r\n          الهدف من هذه الصفحة هو تحديد صلة القرابة بين شخصين بناءًا على اسمهم. كل ماعليك فعله\r\n          هو ادخال الاسم للشخص الاول والثاني وثم النقر على \"التحقق من العلاقة\" ستظهر لك النتيجة في اسهل الصفحة\r\n          والتي يتوضح لك نوع العلاقة ومدى قرابتها؟ في حال وجود اي تشابهات او تكرارات في الاسماء سيم توفير خيارات لتحديد الشخص الصحيح\r\n        </p>\r\n        <form onSubmit={FetchRelationship} className=\"relation-form\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"الإسم الكامل الأول\"\r\n              value={person1}\r\n              onChange={(e) => setPerson1(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"الإسم الكامل الثاني\"\r\n              value={person2}\r\n              onChange={(e) => setPerson2(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className='ButtonSection'>\r\n            <button type=\"submit\" className=\"checkButton\">تحقق من العلاقة</button>\r\n            <button type=\"reset\" className='resetButton'>إلغاء</button>\r\n          </div>\r\n          \r\n        </form>\r\n      </section>\r\n\r\n  \r\n      {/* Result */}\r\n      {relationship && (\r\n        <section className=\"relationship-result\">\r\n          <h2 id=\"resultTitle\">نتيجة العلاقة</h2>\r\n          <p className=\"relationText\">{relationship}</p>\r\n  \r\n          <div class=\"result-details\">\r\n            <table class=\"result-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>درجة العلاقة</th>\r\n                  <td class=\"score-cell\">\r\n                    <div class=\"score-bar-wrapper\">\r\n                      <div class=\"score-bar-fill\" style={{width: '80%'}}></div>\r\n                    </div>\r\n                    <div class=\"score-meta\">\r\n                      <span class=\"score-value\">80%</span>\r\n                      <span class=\"score-category high\">قوية</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>نوع العلاقة</th>\r\n                  <td class=\"relationship-tag\"><span class=\"tag blood\">دم</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <th>تفسير إضافي</th>\r\n                  <td class=\"relation-explanation\">\r\n                    هؤلاء الشخصين مرتبطين عن طريق الأبناء والأجداد.\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>عدد الأجيال بينهما</th>\r\n                  <td class=\"generation-distance\"><span id=\"numGen\">5</span> أجيال</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>أقرب جد مشترك</th>\r\n                  <td class=\"common-ancestor\">الحاج محمد بن الطيب</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n        </section>\r\n      )}\r\n    </main>\r\n  </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default RelationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}