{"ast":null,"code":"import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n  return distinctUntilChanged(function (x, y) {\n    return compare ? compare(x[key], y[key]) : x[key] === y[key];\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/distinctUntilKeyChanged.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAoB,QAAQ,wBAAwB;AAqE7D,OAAM,SAAU,uBAAuB,CACrC,GAAM,EACN,OAAuC,EAAA;EAEvC,OAAO,oBAAoB,CAAC,UAAC,CAAI,EAAE,CAAI,EAAA;IAAK,OAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;EAAtD,CAAuD,CAAC;AACtG","sourceRoot":"","sourcesContent":["import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged(function (x, y) { return (compare ? compare(x[key], y[key]) : x[key] === y[key]); });\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map"]},"metadata":{},"sourceType":"module"}