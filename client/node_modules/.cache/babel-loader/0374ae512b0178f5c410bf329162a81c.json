{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\FamilyTree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Tree from 'react-d3-tree';\nimport './FamilyTree.css';\n// import neo4j from 'neo4j-driver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config(); // Load .env file\n\nconst translations = require('./translation.json');\nconsole.log(\"Neo4j URI:\", process.env.REACT_APP_NEO4J_URI);\nconsole.log(\"Neo4j User:\", process.env.REACT_APP_NEO4J_USER);\nconsole.log(\"Neo4j Password:\", process.env.REACT_APP_NEO4J_PASSWORD);\n\n// Make sure Neo4j is using correct values\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nif (!neo4jURI || !neo4jUser || !neo4jPassword) {\n  console.error(\"Environment variables for Neo4j are missing!\");\n} else {\n  const driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\n}\nconst session = driver.session();\nlet uniqueKeyCounter = 0;\nexport const translateName = name => {\n  return translations[name] || name;\n};\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [person.name, \" \", person.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), person.children && person.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: person.children.map(child => renderFamilyTree(child, person.id, level + 1))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, uniqueKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\nconst fetchFamilyTree = async () => {\n  try {\n    const response = await fetch('http://localhost:5000/api/family-tree');\n    if (!response.ok) {\n      throw new Error('Server error');\n    }\n    const data = await response.json(); // Parse JSON if response is valid\n    return data;\n  } catch (error) {\n    console.error('Error fetching family tree:', error.message);\n    return [];\n  }\n};\nconst formatFamilyTreeData = person => {\n  const children = person.children && person.children.length > 0 ? person.children.map(formatFamilyTreeData) // Recursively format children\n  : [];\n  return {\n    name: `${person.name} ${person.lastName}`,\n    children: children // Include children for each person\n  };\n};\nconst getChildrenOfFather = (fatherId, allPeople) => {\n  const father = allPeople.filter(father => father.id === fatherId)[0];\n  return father && father.children ? father.children : [];\n};\nconst buildTree = (person, allPeople) => {\n  if (!person) return null;\n  const children = getChildrenOfFather(person.id, allPeople).map(child => buildTree(child, allPeople)).filter(Boolean);\n  return {\n    id: person.id,\n    name: translateName(person.name),\n    children: children.length > 0 ? children : undefined\n  };\n};\nconst getGenderbyID = async personID => {\n  const session = driver.session(); // Open a session\n\n  try {\n    // Fix the parameter name to match the query variable\n    const result = await session.run(`MATCH (p:Person) WHERE id(p) = $personId \n      RETURN p.gender AS gender`, {\n      personId: personID\n    } // Ensure the key matches the query's parameter\n    );\n    if (result.records.length > 0) {\n      const gender = result.records[0].get('gender');\n      return gender; // Return the gender value\n    } else {\n      console.log(`No person found with the ID ${personID}`);\n      return null; // Return null when no person is found\n    }\n  } catch (error) {\n    console.error('Error retrieving gender:', error);\n    return null; // Return null in case of an error\n  } finally {\n    await session.close(); // Always close the session after the query\n  }\n};\nconst FamilyTree = ({\n  searchQuery\n}) => {\n  _s();\n  const treeContainerRef = useRef(null);\n  const [familyTree, setFamilyTree] = useState(null);\n  const [husbandId, setHusbandId] = useState(null);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  const nodePositions = useRef({});\n  const handleWomanClick = async person => {\n    const gender = await getGenderbyID(person.id);\n    if (gender !== \"Female\") return;\n    try {\n      const result = await session.run(`\n        MATCH (w:Person)-[:WIFE_OF]-(h:Person)\n        WHERE id(w) = $womanId\n        RETURN id(h) as HusbandID\n        LIMIT 1\n      `, {\n        womanId: person.id\n      });\n      if (result.records.length > 0) {\n        const husband = result.records[0].get(\"HusbandID\").toNumber();\n        const coords = nodePositions.current[husband];\n        const container = treeContainerRef.current;\n        if (coords && container) {\n          const bounds = container.getBoundingClientRect();\n          setTranslate({\n            x: bounds.width / 2 - coords.x,\n            y: bounds.height / 2 - coords.y\n          });\n        }\n        setHusbandId(husband);\n      } else {\n        console.log(\"No husband found for\", person.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching husband:\", error);\n    } finally {\n      await session.close();\n    }\n  };\n  useEffect(() => {\n    const loadFamilyTree = async () => {\n      try {\n        const people = await fetchFamilyTree();\n        if (Array.isArray(people) && people.length > 0) {\n          const rootPerson = people.find(p => p.id === 17); // ROOT\n          const treeData = buildTree(rootPerson, people);\n          setFamilyTree(treeData);\n        } else {\n          console.warn(\"Empty or invalid people data\");\n        }\n      } catch (error) {\n        console.error(\"Error loading family tree:\", error);\n      }\n    };\n    loadFamilyTree();\n  }, []);\n  if (!familyTree) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"treeWrapper\",\n    ref: treeContainerRef,\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: familyTree,\n      orientation: \"vertical\",\n      pathFunc: \"step\",\n      translate: translate,\n      nodeSize: {\n        x: 100,\n        y: 100\n      } // Adjust node size if needed\n      ,\n      separation: {\n        siblings: 1,\n        nonSiblings: 2\n      } // Adjust separation between nodes\n      ,\n      renderCustomNodeElement: ({\n        nodeDatum,\n        hierarchyPointNode\n      }) => {\n        const isHusband = nodeDatum.id === husbandId;\n\n        // Record node position\n        nodePositions.current[nodeDatum.id] = {\n          x: hierarchyPointNode.x,\n          y: hierarchyPointNode.y\n        };\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          onClick: () => handleWomanClick(nodeDatum),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"title\", {\n            children: nodeDatum.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"-50\",\n            y: \"-20\",\n            width: \"100\",\n            height: \"40\",\n            fill: isHusband ? \"lightgreen\" : \"#a8e6cf \",\n            stroke: \"black\",\n            strokeWidth: \"2\",\n            rx: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"0\",\n            y: \"5\",\n            fontSize: \"24\",\n            textAnchor: \"middle\",\n            fill: \"black\",\n            children: nodeDatum.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(FamilyTree, \"JqUpuFmwjFD0McRAHt4CuXi5uLw=\");\n_c = FamilyTree;\nexport default FamilyTree;\nvar _c;\n$RefreshReg$(_c, \"FamilyTree\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Tree","jsxDEV","_jsxDEV","require","config","translations","console","log","process","env","REACT_APP_NEO4J_URI","REACT_APP_NEO4J_USER","REACT_APP_NEO4J_PASSWORD","neo4jURI","neo4jUser","neo4jPassword","error","driver","auth","basic","session","uniqueKeyCounter","translateName","name","renderFamilyTree","person","parentId","level","uniqueKey","lastName","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","marginLeft","map","child","id","fetchFamilyTree","response","fetch","ok","Error","data","json","message","formatFamilyTreeData","getChildrenOfFather","fatherId","allPeople","father","filter","buildTree","Boolean","undefined","getGenderbyID","personID","result","run","personId","records","gender","get","close","FamilyTree","searchQuery","_s","treeContainerRef","familyTree","setFamilyTree","husbandId","setHusbandId","translate","setTranslate","x","y","nodePositions","handleWomanClick","womanId","husband","toNumber","coords","current","container","bounds","getBoundingClientRect","width","height","loadFamilyTree","people","Array","isArray","rootPerson","find","p","treeData","warn","ref","orientation","pathFunc","nodeSize","separation","siblings","nonSiblings","renderCustomNodeElement","nodeDatum","hierarchyPointNode","isHusband","onClick","cursor","fill","stroke","strokeWidth","rx","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/FamilyTree.js"],"sourcesContent":["import React, { useEffect, useState , useRef } from 'react';\r\nimport Tree from 'react-d3-tree';\r\nimport './FamilyTree.css';\r\n// import neo4j from 'neo4j-driver';\r\nrequire('dotenv').config(); // Load .env file\r\n\r\nconst translations = require('./translation.json');\r\nconsole.log(\"Neo4j URI:\", process.env.REACT_APP_NEO4J_URI);\r\nconsole.log(\"Neo4j User:\", process.env.REACT_APP_NEO4J_USER);\r\nconsole.log(\"Neo4j Password:\", process.env.REACT_APP_NEO4J_PASSWORD);\r\n\r\n// Make sure Neo4j is using correct values\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nif (!neo4jURI || !neo4jUser || !neo4jPassword) {\r\n    console.error(\"Environment variables for Neo4j are missing!\");\r\n} else {\r\n    const driver = require('neo4j-driver').driver(\r\n        neo4jURI,\r\n        require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n    );\r\n}\r\n\r\nconst session = driver.session();\r\n\r\nlet uniqueKeyCounter = 0;\r\nexport const translateName = (name) => {\r\n  return translations[name] || name;\r\n};\r\n\r\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\r\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\r\n\r\n  return (\r\n    <div key={uniqueKey}>\r\n      <div>\r\n        <strong>{person.name} {person.lastName}</strong>\r\n      </div>\r\n      {person.children && person.children.length > 0 && (\r\n        <div style={{ marginLeft: '20px' }}>\r\n          {person.children.map((child) => renderFamilyTree(child, person.id, level + 1))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst fetchFamilyTree = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/family-tree');\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Server error');\r\n    }\r\n\r\n    const data = await response.json(); // Parse JSON if response is valid\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching family tree:', error.message);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst formatFamilyTreeData = (person) => {\r\n  const children = person.children && person.children.length > 0\r\n    ? person.children.map(formatFamilyTreeData) // Recursively format children\r\n    : [];\r\n\r\n  return {\r\n    name: `${person.name} ${person.lastName}`,\r\n    children: children // Include children for each person\r\n  };\r\n};\r\n\r\nconst getChildrenOfFather = (fatherId, allPeople) => {\r\n  const father = allPeople.filter(father => father.id === fatherId)[0];  \r\n  return father && father.children ? father.children : [];  \r\n};\r\n\r\nconst buildTree = (person, allPeople) => {\r\n  if (!person) return null;\r\n\r\n  const children = getChildrenOfFather(person.id, allPeople)\r\n    .map(child => buildTree(child, allPeople))\r\n    .filter(Boolean); \r\n\r\n    \r\n    return {\r\n      id: person.id,\r\n      name: translateName(person.name),\r\n      children: children.length > 0 ? children : undefined,\r\n    };\r\n};\r\n\r\nconst getGenderbyID = async (personID) => {\r\n  const session = driver.session(); // Open a session\r\n\r\n  try {\r\n    // Fix the parameter name to match the query variable\r\n    const result = await session.run(\r\n      `MATCH (p:Person) WHERE id(p) = $personId \r\n      RETURN p.gender AS gender`,\r\n      { personId: personID } // Ensure the key matches the query's parameter\r\n    );\r\n    \r\n    if (result.records.length > 0) {\r\n      const gender = result.records[0].get('gender');\r\n      return gender; // Return the gender value\r\n    } else {\r\n      console.log(`No person found with the ID ${personID}`);\r\n      return null; // Return null when no person is found\r\n    }\r\n  } catch (error) {\r\n    console.error('Error retrieving gender:', error);\r\n    return null; // Return null in case of an error\r\n  } finally {\r\n    await session.close(); // Always close the session after the query\r\n  }\r\n};\r\n\r\n\r\n\r\nconst FamilyTree = ({ searchQuery }) => {\r\n  const treeContainerRef = useRef(null);\r\n  const [familyTree, setFamilyTree] = useState(null);\r\n  const [husbandId, setHusbandId] = useState(null);\r\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\r\n  const nodePositions = useRef({});\r\n\r\n  const handleWomanClick = async (person) => {\r\n    const gender = await getGenderbyID(person.id);\r\n    if (gender !== \"Female\") return;\r\n\r\n    try {\r\n      const result = await session.run(\r\n        `\r\n        MATCH (w:Person)-[:WIFE_OF]-(h:Person)\r\n        WHERE id(w) = $womanId\r\n        RETURN id(h) as HusbandID\r\n        LIMIT 1\r\n      `,\r\n        { womanId: person.id }\r\n      );\r\n\r\n      if (result.records.length > 0) {\r\n        const husband = result.records[0].get(\"HusbandID\").toNumber();\r\n        const coords = nodePositions.current[husband];\r\n        const container = treeContainerRef.current;\r\n\r\n        if (coords && container) {\r\n          const bounds = container.getBoundingClientRect();\r\n          setTranslate({\r\n            x: bounds.width / 2 - coords.x,\r\n            y: bounds.height / 2 - coords.y,\r\n          });\r\n        }\r\n\r\n        setHusbandId(husband);\r\n      } else {\r\n        console.log(\"No husband found for\", person.name);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching husband:\", error);\r\n    } finally {\r\n      await session.close();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadFamilyTree = async () => {\r\n      try {\r\n        const people = await fetchFamilyTree();\r\n        if (Array.isArray(people) && people.length > 0) {\r\n          const rootPerson = people.find((p) => p.id === 17); // ROOT\r\n          const treeData = buildTree(rootPerson, people);\r\n          setFamilyTree(treeData);\r\n        } else {\r\n          console.warn(\"Empty or invalid people data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading family tree:\", error);\r\n      }\r\n    };\r\n\r\n    loadFamilyTree();\r\n  }, []);\r\n\r\n  if (!familyTree) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div\r\n      id=\"treeWrapper\"\r\n      ref={treeContainerRef}\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    >\r\n      <Tree\r\n        data={familyTree}\r\n        orientation=\"vertical\"\r\n        pathFunc=\"step\"\r\n        translate={translate}\r\n        nodeSize={{ x: 100, y: 100 }} // Adjust node size if needed\r\n        separation={{ siblings: 1, nonSiblings: 2 }} // Adjust separation between nodes\r\n        renderCustomNodeElement={({ nodeDatum, hierarchyPointNode }) => {\r\n          const isHusband = nodeDatum.id === husbandId;\r\n\r\n          // Record node position\r\n          nodePositions.current[nodeDatum.id] = {\r\n            x: hierarchyPointNode.x,\r\n            y: hierarchyPointNode.y,\r\n          };\r\n\r\n          return (\r\n            <g\r\n              onClick={() => handleWomanClick(nodeDatum)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <title>{nodeDatum.id}</title>\r\n              <rect\r\n                x=\"-50\"\r\n                y=\"-20\"\r\n                width=\"100\"\r\n                height=\"40\"\r\n                fill={isHusband ? \"lightgreen\" : \"#a8e6cf \"}\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n                rx=\"8\"\r\n              />\r\n              <text\r\n                x=\"0\"\r\n                y=\"5\"\r\n                fontSize=\"24\"\r\n                textAnchor=\"middle\"\r\n                fill=\"black\"\r\n              >\r\n                {nodeDatum.name}\r\n              </text>\r\n            </g>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FamilyTree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}