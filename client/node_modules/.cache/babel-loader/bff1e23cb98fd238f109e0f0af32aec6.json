{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Cache which maps users to their last known home database, along with the last time the entry was accessed.\n *\n * @private\n */\nvar HomeDatabaseCache = /** @class */function () {\n  function HomeDatabaseCache(maxSize) {\n    this.maxSize = maxSize;\n    this.pruneCount = Math.max(Math.round(0.01 * maxSize * Math.log(maxSize)), 1);\n    this.map = new Map();\n  }\n  /**\n   * Updates or adds an entry to the cache, and prunes the cache if above the maximum allowed size\n   *\n   * @param {string} user cache key for the user to set\n   * @param {string} database new home database to set for the user\n   */\n  HomeDatabaseCache.prototype.set = function (user, database) {\n    this.map.set(user, {\n      database: database,\n      lastUsed: Date.now()\n    });\n    this._pruneCache();\n  };\n  /**\n   * retrieves the last known home database for a user\n   *\n   * @param {string} user cache key for the user to get\n   */\n  HomeDatabaseCache.prototype.get = function (user) {\n    var value = this.map.get(user);\n    if (value !== undefined) {\n      value.lastUsed = Date.now();\n      return value.database;\n    }\n    return undefined;\n  };\n  /**\n   * removes the entry for a given user in the cache\n   *\n   * @param {string} user cache key for the user to remove\n   */\n  HomeDatabaseCache.prototype.delete = function (user) {\n    this.map.delete(user);\n  };\n  /**\n   * Removes a number of the oldest entries in the cache if the number of entries has exceeded the maximum size.\n   */\n  HomeDatabaseCache.prototype._pruneCache = function () {\n    if (this.map.size > this.maxSize) {\n      var sortedArray = Array.from(this.map.entries()).sort(function (a, b) {\n        return a[1].lastUsed - b[1].lastUsed;\n      });\n      for (var i = 0; i < this.pruneCount; i++) {\n        this.map.delete(sortedArray[i][0]);\n      }\n    }\n  };\n  return HomeDatabaseCache;\n}();\nexports.default = HomeDatabaseCache;","map":{"version":3,"names":["Object","defineProperty","exports","value","HomeDatabaseCache","maxSize","pruneCount","Math","max","round","log","map","Map","prototype","set","user","database","lastUsed","Date","now","_pruneCache","get","undefined","delete","size","sortedArray","Array","from","entries","sort","a","b","i","default"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver-core/lib/internal/homedb-cache.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Cache which maps users to their last known home database, along with the last time the entry was accessed.\n *\n * @private\n */\nvar HomeDatabaseCache = /** @class */ (function () {\n    function HomeDatabaseCache(maxSize) {\n        this.maxSize = maxSize;\n        this.pruneCount = Math.max(Math.round(0.01 * maxSize * Math.log(maxSize)), 1);\n        this.map = new Map();\n    }\n    /**\n     * Updates or adds an entry to the cache, and prunes the cache if above the maximum allowed size\n     *\n     * @param {string} user cache key for the user to set\n     * @param {string} database new home database to set for the user\n     */\n    HomeDatabaseCache.prototype.set = function (user, database) {\n        this.map.set(user, { database: database, lastUsed: Date.now() });\n        this._pruneCache();\n    };\n    /**\n     * retrieves the last known home database for a user\n     *\n     * @param {string} user cache key for the user to get\n     */\n    HomeDatabaseCache.prototype.get = function (user) {\n        var value = this.map.get(user);\n        if (value !== undefined) {\n            value.lastUsed = Date.now();\n            return value.database;\n        }\n        return undefined;\n    };\n    /**\n     * removes the entry for a given user in the cache\n     *\n     * @param {string} user cache key for the user to remove\n     */\n    HomeDatabaseCache.prototype.delete = function (user) {\n        this.map.delete(user);\n    };\n    /**\n     * Removes a number of the oldest entries in the cache if the number of entries has exceeded the maximum size.\n     */\n    HomeDatabaseCache.prototype._pruneCache = function () {\n        if (this.map.size > this.maxSize) {\n            var sortedArray = Array.from(this.map.entries()).sort(function (a, b) { return a[1].lastUsed - b[1].lastUsed; });\n            for (var i = 0; i < this.pruneCount; i++) {\n                this.map.delete(sortedArray[i][0]);\n            }\n        }\n    };\n    return HomeDatabaseCache;\n}());\nexports.default = HomeDatabaseCache;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,aAAe,YAAY;EAC/C,SAASA,iBAAiBA,CAACC,OAAO,EAAE;IAChC,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAAC,IAAI,GAAGJ,OAAO,GAAGE,IAAI,CAACG,GAAG,CAACL,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7E,IAAI,CAACM,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIR,iBAAiB,CAACS,SAAS,CAACC,GAAG,GAAG,UAAUC,IAAI,EAAEC,QAAQ,EAAE;IACxD,IAAI,CAACL,GAAG,CAACG,GAAG,CAACC,IAAI,EAAE;MAAEC,QAAQ,EAAEA,QAAQ;MAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CAAC;IAChE,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIhB,iBAAiB,CAACS,SAAS,CAACQ,GAAG,GAAG,UAAUN,IAAI,EAAE;IAC9C,IAAIZ,KAAK,GAAG,IAAI,CAACQ,GAAG,CAACU,GAAG,CAACN,IAAI,CAAC;IAC9B,IAAIZ,KAAK,KAAKmB,SAAS,EAAE;MACrBnB,KAAK,CAACc,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAC3B,OAAOhB,KAAK,CAACa,QAAQ;IACzB;IACA,OAAOM,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIlB,iBAAiB,CAACS,SAAS,CAACU,MAAM,GAAG,UAAUR,IAAI,EAAE;IACjD,IAAI,CAACJ,GAAG,CAACY,MAAM,CAACR,IAAI,CAAC;EACzB,CAAC;EACD;AACJ;AACA;EACIX,iBAAiB,CAACS,SAAS,CAACO,WAAW,GAAG,YAAY;IAClD,IAAI,IAAI,CAACT,GAAG,CAACa,IAAI,GAAG,IAAI,CAACnB,OAAO,EAAE;MAC9B,IAAIoB,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAChB,GAAG,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;QAAE,OAAOD,CAAC,CAAC,CAAC,CAAC,CAACb,QAAQ,GAAGc,CAAC,CAAC,CAAC,CAAC,CAACd,QAAQ;MAAE,CAAC,CAAC;MAChH,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC1B,UAAU,EAAE0B,CAAC,EAAE,EAAE;QACtC,IAAI,CAACrB,GAAG,CAACY,MAAM,CAACE,WAAW,CAACO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC;IACJ;EACJ,CAAC;EACD,OAAO5B,iBAAiB;AAC5B,CAAC,CAAC,CAAE;AACJF,OAAO,CAAC+B,OAAO,GAAG7B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script"}