{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\Copy 4\\\\client\\\\src\\\\components\\\\FamilyTree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Tree from 'react-d3-tree';\nimport './FamilyTree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nconst translations = require('./translation.json');\nconst compundNames = require('./compundNames.json');\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nconst driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\nconst session = driver.session();\nlet uniqueKeyCounter = 0;\nexport const translateName = name => {\n  return translations[name] || compundNames[name] || name;\n};\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [person.name, \" \", person.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), person.children && person.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: person.children.map(child => renderFamilyTree(child, person.id, level + 1))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, uniqueKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\nconst getFamilyTree = async (req, res) => {\n  const session = driver.session();\n  try {\n    const query = `\n      MATCH (root:Person)\n      WHERE id(root) = 17\n      CALL {\n        WITH root\n        MATCH (root)-[:FATHER_OF*]->(descendant)\n        RETURN collect(DISTINCT descendant) AS allDescendants\n      }\n      WITH root, allDescendants\n      UNWIND [root] + allDescendants AS person\n      OPTIONAL MATCH (person)-[:FATHER_OF]->(child)\n      WITH person, collect(child) AS children\n      RETURN {\n        id: id(person),\n        name: person.name,\n        lastName: person.lastName,\n        children: [child IN children | {\n          id: id(child),\n          name: child.name,\n          lastName: child.lastName\n        }]\n      } AS treeNode\n    `;\n    const result = await session.run(query);\n    const familyTree = result.records.map(record => {\n      const node = record.get('treeNode');\n      return {\n        id: Number(node.id),\n        name: node.name,\n        lastName: node.lastName,\n        children: node.children.map(child => ({\n          id: Number(child.id),\n          name: child.name,\n          lastName: child.lastName\n        }))\n      };\n    });\n    res.json(familyTree); // Send the family tree data to the frontend\n  } catch (error) {\n    console.error('Error fetching family tree:', error);\n    res.status(500).send('Server error');\n  } finally {\n    session.close(); // Close the session to avoid resource leaks\n  }\n};\nconst fetchFamilyTree = async session => {\n  try {\n    // Neo4j query to fetch the family tree\n    const query = `\n      MATCH (root:Person)\n      WHERE id(root) = 17\n      CALL {\n        WITH root\n        MATCH (root)-[:FATHER_OF*]->(descendant)\n        RETURN collect(DISTINCT descendant) AS allDescendants\n      }\n      WITH root, allDescendants\n      UNWIND [root] + allDescendants AS person\n      OPTIONAL MATCH (person)-[:FATHER_OF]->(child)\n      WITH person, collect(child) AS children\n      RETURN {\n        id: id(person),\n        name: person.name,\n        lastName: person.lastName,\n        children: [child IN children | {\n          id: id(child),\n          name: child.name,\n          lastName: child.lastName\n        }]\n      } AS treeNode\n    `;\n    const result = await session.run(query);\n    const familyTree = result.records.map(record => {\n      const node = record.get('treeNode');\n      return {\n        id: Number(node.id),\n        name: node.name,\n        lastName: node.lastName,\n        children: node.children.map(child => ({\n          id: Number(child.id),\n          name: child.name,\n          lastName: child.lastName\n        }))\n      };\n    });\n    return familyTree; // Return the formatted tree data as JSON\n  } catch (error) {\n    console.error('Error fetching family tree:', error);\n    return []; // Return an empty array in case of error\n  } finally {\n    session.close(); // Close the Neo4j session\n  }\n};\nconst formatFamilyTreeData = person => {\n  const children = person.children && person.children.length > 0 ? person.children.map(formatFamilyTreeData) // Recursively format children\n  : [];\n  return {\n    name: `${person.name} ${person.lastName}`,\n    children: children // Include children for each person\n  };\n};\nconst getChildrenOfFather = (fatherId, allPeople) => {\n  const father = allPeople.filter(father => father.id === fatherId)[0];\n  return father && father.children ? father.children : [];\n};\nconst buildTree = (person, allPeople) => {\n  if (!person) return null;\n  const children = getChildrenOfFather(person.id, allPeople).map(child => buildTree(child, allPeople)).filter(Boolean);\n  return {\n    id: person.id,\n    name: translateName(person.name),\n    children: children.length > 0 ? children : undefined\n  };\n};\nconst getGenderbyID = async personID => {\n  const session = driver.session(); // Open a session\n\n  try {\n    // Fix the parameter name to match the query variable\n    const result = await session.run(`MATCH (p:Person) WHERE id(p) = $personId \n      RETURN p.gender AS gender`, {\n      personId: personID\n    } // Ensure the key matches the query's parameter\n    );\n    if (result.records.length > 0) {\n      const gender = result.records[0].get('gender');\n      return gender; // Return the gender value\n    } else {\n      console.log(`No person found with the ID ${personID}`);\n      return null; // Return null when no person is found\n    }\n  } catch (error) {\n    console.error('Error retrieving gender:', error);\n    return null; // Return null in case of an error\n  } finally {\n    await session.close(); // Always close the session after the query\n  }\n};\nconst FamilyTree = ({\n  searchQuery\n}) => {\n  _s();\n  const treeContainerRef = useRef(null);\n  const [familyTree, setFamilyTree] = useState(null);\n  const [husbandId, setHusbandId] = useState(null);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showTree, setShowTree] = useState(false);\n  const nodePositions = useRef({});\n  const handleWomanClick = async person => {\n    const gender = await getGenderbyID(person.id);\n    if (gender !== \"Female\") return;\n    try {\n      const result = await session.run(`\n        MATCH (w:Person)-[:WIFE_OF]-(h:Person)\n        WHERE id(w) = $womanId\n        RETURN id(h) as HusbandID\n        LIMIT 1\n      `, {\n        womanId: person.id\n      });\n      if (result.records.length > 0) {\n        const husband = result.records[0].get(\"HusbandID\").toNumber();\n        const coords = nodePositions.current[husband];\n        const container = treeContainerRef.current;\n        if (coords && container) {\n          const bounds = container.getBoundingClientRect();\n          setTranslate({\n            x: bounds.width / 2 - coords.x,\n            y: bounds.height / 2 - coords.y\n          });\n        }\n        setHusbandId(husband);\n      } else {\n        console.log(\"No husband found for\", person.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching husband:\", error);\n    } finally {\n      await session.close();\n    }\n  };\n  const handlePersonTreeDisplay = async () => {\n    const inputID = document.getElementById('rootID').value;\n    const ID = parseInt(inputID, 10);\n    if (isNaN(ID)) {\n      alert(\"❗ الرجاء إدخال رقم صحيح للشخص.\");\n      return;\n    }\n    loadFamilyTree(ID);\n  };\n  const handleRootTreeClick = async () => {\n    loadFamilyTree(17);\n  };\n  const loadFamilyTree = async rootID => {\n    console.log(\"TEST\");\n    try {\n      const people = await fetchFamilyTree();\n      if (Array.isArray(people) && people.length > 0) {\n        const rootPerson = people.find(p => p.id === rootID); // ROOT\n        const treeData = buildTree(rootPerson, people);\n        console.log(treeData);\n        setFamilyTree(treeData);\n        setShowTree(true); // show tree after loading\n      } else {\n        console.warn(\"Empty or invalid people data\");\n      }\n    } catch (error) {\n      console.error(\"Error loading family tree:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"treePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0634\\u062C\\u0631\\u0629 \\u0639\\u0627\\u0626\\u0644\\u0629 \\u0642\\u0635\\u0631 \\u0623\\u0648\\u0644\\u0627\\u062F \\u0628\\u0648\\u0628\\u0643\\u0631\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0641\\u064A \\u0647\\u0630\\u0647 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u064A\\u0645\\u0643\\u0646\\u0643 \\u062A\\u0635\\u0641\\u062D \\u0634\\u062C\\u0631\\u0629 \\u0639\\u0631\\u0634 \\u0642\\u0635\\u0631 \\u0623\\u0648\\u0644\\u0627\\u062F \\u0628\\u0648\\u0628\\u0643\\u0631 \\u0643\\u0627\\u0645\\u0644\\u0629 \\u060C \\u0645\\u0646\\u0630 \\u0627\\u0644\\u062C\\u062F \\u0627\\u0644\\u0623\\u0648\\u0644 \\u0628\\u0648\\u0628\\u0643\\u0631 \\u0627\\u0644\\u0649 \\u062D\\u064A\\u0646 \\u0627\\u0644\\u062C\\u064A\\u0644 \\u0627\\u0644\\u062D\\u0627\\u0644\\u064A.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterChoice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-left\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"filterChoiceForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-root\",\n              onClick: handleRootTreeClick,\n              children: \"\\u0634\\u062C\\u0631\\u0629 \\u0627\\u0644\\u0639\\u0627\\u0626\\u0644\\u0629 \\u0645\\u0646\\u0630 \\u0627\\u0644\\u062C\\u062F \\u0627\\u0644\\u0623\\u0648\\u0644\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"rootID\",\n            type: \"number\",\n            placeholder: \"\\u0623\\u062F\\u062E\\u0644 \\u0631\\u0642\\u0645 \\u0627\\u0644\\u0634\\u062E\\u0635\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-person\",\n            type: \"button\",\n            onClick: handlePersonTreeDisplay,\n            children: \"\\u0634\\u062C\\u0631\\u0629 \\u0627\\u0644\\u0639\\u0627\\u0626\\u0644\\u0629 \\u0627\\u0628\\u062A\\u062F\\u0627\\u0621\\u0627 \\u0645\\u0646 \\u0634\\u062E\\u0635 \\u0645\\u0639\\u064A\\u0646:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"personSearch\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"personsearchName\",\n          type: \"text\",\n          placeholder: \"\\u0627\\u0628\\u062D\\u062B \\u0639\\u0646 \\u0634\\u062E\\u0635 \\u0641\\u064A \\u0627\\u0644\\u0634\\u062C\\u0631\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), showTree && familyTree && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"treeWrapper\",\n      ref: treeContainerRef,\n      style: {\n        width: \"100vw\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: familyTree,\n        orientation: \"vertical\",\n        pathFunc: \"step\",\n        translate: translate,\n        nodeSize: {\n          x: 100,\n          y: 100\n        } // Adjust node size if needed\n        ,\n        separation: {\n          siblings: 1.1,\n          nonSiblings: 1.5\n        } // Adjust separation between nodes\n        ,\n        renderCustomNodeElement: ({\n          nodeDatum,\n          hierarchyPointNode\n        }) => {\n          const isHusband = nodeDatum.id === husbandId;\n\n          // Record node position\n          nodePositions.current[nodeDatum.id] = {\n            x: hierarchyPointNode.x,\n            y: hierarchyPointNode.y\n          };\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            onClick: () => handleWomanClick(nodeDatum),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"title\", {\n              children: nodeDatum.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"-50\",\n              y: \"-20\",\n              width: \"100\",\n              height: \"40\",\n              fill: isHusband ? \"#66bb6a\" : \"#4fc3f7\",\n              stroke: \"black\",\n              strokeWidth: \"2\",\n              rx: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"0\",\n              y: \"5\",\n              style: {\n                fontSize: \"22\",\n                fontFamily: 'Cairo',\n                dominantBaseline: 'middle',\n                letterSpacing: '1px',\n                strokeWidth: '0px',\n                textAnchor: \"middle\",\n                fill: \"white\"\n              },\n              children: nodeDatum.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerTips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s(FamilyTree, \"sjMT/Q2QV/fCrUt+S3RzT6rCefE=\");\n_c = FamilyTree;\nexport default FamilyTree;\nvar _c;\n$RefreshReg$(_c, \"FamilyTree\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Tree","jsxDEV","_jsxDEV","require","config","translations","compundNames","neo4jURI","process","env","REACT_APP_NEO4J_URI","neo4jUser","REACT_APP_NEO4J_USER","neo4jPassword","REACT_APP_NEO4J_PASSWORD","driver","auth","basic","session","uniqueKeyCounter","translateName","name","renderFamilyTree","person","parentId","level","uniqueKey","lastName","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","marginLeft","map","child","id","getFamilyTree","req","res","query","result","run","familyTree","records","record","node","get","Number","json","error","console","status","send","close","fetchFamilyTree","formatFamilyTreeData","getChildrenOfFather","fatherId","allPeople","father","filter","buildTree","Boolean","undefined","getGenderbyID","personID","personId","gender","log","FamilyTree","searchQuery","_s","treeContainerRef","setFamilyTree","husbandId","setHusbandId","translate","setTranslate","x","y","showTree","setShowTree","nodePositions","handleWomanClick","womanId","husband","toNumber","coords","current","container","bounds","getBoundingClientRect","width","height","handlePersonTreeDisplay","inputID","document","getElementById","value","ID","parseInt","isNaN","alert","loadFamilyTree","handleRootTreeClick","rootID","people","Array","isArray","rootPerson","find","p","treeData","warn","className","type","onClick","placeholder","ref","data","orientation","pathFunc","nodeSize","separation","siblings","nonSiblings","renderCustomNodeElement","nodeDatum","hierarchyPointNode","isHusband","cursor","fill","stroke","strokeWidth","rx","fontSize","fontFamily","dominantBaseline","letterSpacing","textAnchor","_c","$RefreshReg$"],"sources":["D:/Study/Projects/Copy 4/client/src/components/FamilyTree.js"],"sourcesContent":["import React, { useEffect, useState , useRef } from 'react';\r\nimport Tree from 'react-d3-tree';\r\nimport './FamilyTree.css';\r\nrequire('dotenv').config();\r\n\r\nconst translations = require('./translation.json');\r\nconst compundNames = require('./compundNames.json');\r\n\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nconst driver = require('neo4j-driver').driver(\r\n    neo4jURI,\r\n    require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n);\r\n\r\nconst session = driver.session();\r\n\r\nlet uniqueKeyCounter = 0;\r\nexport const translateName = (name) => {\r\n  return translations[name] || compundNames[name] || name;\r\n};\r\n\r\nconst renderFamilyTree = (person, parentId = null, level = 0) => {\r\n  const uniqueKey = `${person.name}-${person.lastName}-${parentId}-${level}-${uniqueKeyCounter++}`;\r\n\r\n  return (\r\n    <div key={uniqueKey}>\r\n      <div>\r\n        <strong>{person.name} {person.lastName}</strong>\r\n      </div>\r\n      {person.children && person.children.length > 0 && (\r\n        <div style={{ marginLeft: '20px' }}>\r\n          {person.children.map((child) => renderFamilyTree(child, person.id, level + 1))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst getFamilyTree = async (req, res) => {\r\n  const session = driver.session();\r\n  try {\r\n    const query = `\r\n      MATCH (root:Person)\r\n      WHERE id(root) = 17\r\n      CALL {\r\n        WITH root\r\n        MATCH (root)-[:FATHER_OF*]->(descendant)\r\n        RETURN collect(DISTINCT descendant) AS allDescendants\r\n      }\r\n      WITH root, allDescendants\r\n      UNWIND [root] + allDescendants AS person\r\n      OPTIONAL MATCH (person)-[:FATHER_OF]->(child)\r\n      WITH person, collect(child) AS children\r\n      RETURN {\r\n        id: id(person),\r\n        name: person.name,\r\n        lastName: person.lastName,\r\n        children: [child IN children | {\r\n          id: id(child),\r\n          name: child.name,\r\n          lastName: child.lastName\r\n        }]\r\n      } AS treeNode\r\n    `;\r\n\r\n    const result = await session.run(query);\r\n    const familyTree = result.records.map(record => {\r\n        const node = record.get('treeNode');\r\n        return {\r\n          id: Number(node.id),\r\n          name: node.name,\r\n          lastName: node.lastName,\r\n          children: node.children.map(child => ({\r\n            id: Number(child.id),\r\n            name: child.name,\r\n            lastName: child.lastName\r\n          }))\r\n        };\r\n      });\r\n      \r\n\r\n    res.json(familyTree);  // Send the family tree data to the frontend\r\n  } catch (error) {\r\n    console.error('Error fetching family tree:', error);\r\n    res.status(500).send('Server error');\r\n  } finally {\r\n    session.close(); // Close the session to avoid resource leaks\r\n  }\r\n};\r\n\r\nconst fetchFamilyTree = async (session) => {\r\n  try {\r\n    // Neo4j query to fetch the family tree\r\n    const query = `\r\n      MATCH (root:Person)\r\n      WHERE id(root) = 17\r\n      CALL {\r\n        WITH root\r\n        MATCH (root)-[:FATHER_OF*]->(descendant)\r\n        RETURN collect(DISTINCT descendant) AS allDescendants\r\n      }\r\n      WITH root, allDescendants\r\n      UNWIND [root] + allDescendants AS person\r\n      OPTIONAL MATCH (person)-[:FATHER_OF]->(child)\r\n      WITH person, collect(child) AS children\r\n      RETURN {\r\n        id: id(person),\r\n        name: person.name,\r\n        lastName: person.lastName,\r\n        children: [child IN children | {\r\n          id: id(child),\r\n          name: child.name,\r\n          lastName: child.lastName\r\n        }]\r\n      } AS treeNode\r\n    `;\r\n\r\n    const result = await session.run(query);\r\n\r\n    const familyTree = result.records.map(record => {\r\n      const node = record.get('treeNode');\r\n      return {\r\n        id: Number(node.id),\r\n        name: node.name,\r\n        lastName: node.lastName,\r\n        children: node.children.map(child => ({\r\n          id: Number(child.id),\r\n          name: child.name,\r\n          lastName: child.lastName\r\n        }))\r\n      };\r\n    });\r\n\r\n    return familyTree; // Return the formatted tree data as JSON\r\n  } catch (error) {\r\n    console.error('Error fetching family tree:', error);\r\n    return []; // Return an empty array in case of error\r\n  } finally {\r\n    session.close(); // Close the Neo4j session\r\n  }\r\n};\r\n\r\nconst formatFamilyTreeData = (person) => {\r\n  const children = person.children && person.children.length > 0\r\n    ? person.children.map(formatFamilyTreeData) // Recursively format children\r\n    : [];\r\n\r\n  return {\r\n    name: `${person.name} ${person.lastName}`,\r\n    children: children // Include children for each person\r\n  };\r\n};\r\n\r\nconst getChildrenOfFather = (fatherId, allPeople) => {\r\n  const father = allPeople.filter(father => father.id === fatherId)[0];  \r\n  return father && father.children ? father.children : [];  \r\n};\r\n\r\nconst buildTree = (person, allPeople) => {\r\n  if (!person) return null;\r\n\r\n  const children = getChildrenOfFather(person.id, allPeople)\r\n    .map(child => buildTree(child, allPeople))\r\n    .filter(Boolean); \r\n\r\n    \r\n    return {\r\n      id: person.id,\r\n      name: translateName(person.name),\r\n      children: children.length > 0 ? children : undefined,\r\n    };\r\n};\r\n\r\nconst getGenderbyID = async (personID) => {\r\n  const session = driver.session(); // Open a session\r\n\r\n  try {\r\n    // Fix the parameter name to match the query variable\r\n    const result = await session.run(\r\n      `MATCH (p:Person) WHERE id(p) = $personId \r\n      RETURN p.gender AS gender`,\r\n      { personId: personID } // Ensure the key matches the query's parameter\r\n    );\r\n    \r\n    if (result.records.length > 0) {\r\n      const gender = result.records[0].get('gender');\r\n      return gender; // Return the gender value\r\n    } else {\r\n      console.log(`No person found with the ID ${personID}`);\r\n      return null; // Return null when no person is found\r\n    }\r\n  } catch (error) {\r\n    console.error('Error retrieving gender:', error);\r\n    return null; // Return null in case of an error\r\n  } finally {\r\n    await session.close(); // Always close the session after the query\r\n  }\r\n};\r\n\r\nconst FamilyTree = ({ searchQuery }) => {\r\n  const treeContainerRef = useRef(null);\r\n  const [familyTree, setFamilyTree] = useState(null);\r\n  const [husbandId, setHusbandId] = useState(null);\r\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\r\n  const [showTree, setShowTree] = useState(false);\r\n  const nodePositions = useRef({});\r\n\r\n  const handleWomanClick = async (person) => {\r\n    const gender = await getGenderbyID(person.id);\r\n    if (gender !== \"Female\") return;\r\n\r\n    try {\r\n      const result = await session.run(\r\n        `\r\n        MATCH (w:Person)-[:WIFE_OF]-(h:Person)\r\n        WHERE id(w) = $womanId\r\n        RETURN id(h) as HusbandID\r\n        LIMIT 1\r\n      `,\r\n        { womanId: person.id }\r\n      );\r\n\r\n      if (result.records.length > 0) {\r\n        const husband = result.records[0].get(\"HusbandID\").toNumber();\r\n        const coords = nodePositions.current[husband];\r\n        const container = treeContainerRef.current;\r\n\r\n        if (coords && container) {\r\n          const bounds = container.getBoundingClientRect();\r\n          setTranslate({\r\n            x: bounds.width / 2 - coords.x,\r\n            y: bounds.height / 2 - coords.y,\r\n          });\r\n        }\r\n\r\n        setHusbandId(husband);\r\n      } else {\r\n        console.log(\"No husband found for\", person.name);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching husband:\", error);\r\n    } finally {\r\n      await session.close();\r\n    }\r\n  };\r\n  const handlePersonTreeDisplay = async () => {\r\n    const inputID = document.getElementById('rootID').value;\r\n    const ID = parseInt(inputID, 10);\r\n\r\n    if (isNaN(ID)) {\r\n      alert(\"❗ الرجاء إدخال رقم صحيح للشخص.\");\r\n      return;\r\n    }\r\n    loadFamilyTree(ID);\r\n  }\r\n  const handleRootTreeClick = async () => {\r\n    loadFamilyTree(17);\r\n  };\r\n  const loadFamilyTree = async (rootID) => {\r\n    console.log(\"TEST\");\r\n    try {\r\n      const people = await fetchFamilyTree();\r\n      if (Array.isArray(people) && people.length > 0) {\r\n        const rootPerson = people.find((p) => p.id === rootID); // ROOT\r\n        const treeData = buildTree(rootPerson, people);\r\n        console.log(treeData);\r\n        setFamilyTree(treeData);\r\n        setShowTree(true); // show tree after loading\r\n      } else {\r\n        console.warn(\"Empty or invalid people data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading family tree:\", error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"treePage\">\r\n      <header>\r\n        <h2>شجرة عائلة قصر أولاد بوبكر</h2>\r\n        <div className=\"description\">\r\n          <p>\r\n            في هذه الصفحة يمكنك تصفح شجرة عرش قصر أولاد بوبكر كاملة ، منذ الجد الأول بوبكر الى حين الجيل الحالي.\r\n          </p>\r\n        </div>\r\n        <div className=\"filterChoice\">\r\n          <div className=\"filter-left\">\r\n            <form className=\"filterChoiceForm\">\r\n              <button type=\"button\" className=\"btn-root\" onClick={handleRootTreeClick}>شجرة العائلة منذ الجد الأول</button>\r\n              <br />\r\n            </form>\r\n          </div>\r\n          <div className=\"filter-right\">\r\n            \r\n            <input id=\"rootID\" type=\"number\" placeholder=\"أدخل رقم الشخص\" />\r\n            <button className=\"btn-person\" type='button' onClick={handlePersonTreeDisplay}>شجرة العائلة ابتداءا من شخص معين:</button>\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"personSearch\">\r\n          <input id=\"personsearchName\" type=\"text\" placeholder=\"ابحث عن شخص في الشجرة\" />\r\n        </div>\r\n      </header>\r\n\r\n      \r\n      {showTree && familyTree && (<div\r\n      id=\"treeWrapper\"\r\n      ref={treeContainerRef}\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    >\r\n      <Tree\r\n        data={familyTree}\r\n        orientation=\"vertical\"\r\n        pathFunc=\"step\"\r\n        translate={translate}\r\n        nodeSize={{ x: 100, y: 100 }} // Adjust node size if needed\r\n        separation={{ siblings: 1.1, nonSiblings: 1.5 }} // Adjust separation between nodes\r\n        renderCustomNodeElement={({ nodeDatum, hierarchyPointNode }) => {\r\n          const isHusband = nodeDatum.id === husbandId;\r\n\r\n          // Record node position\r\n          nodePositions.current[nodeDatum.id] = {\r\n            x: hierarchyPointNode.x,\r\n            y: hierarchyPointNode.y,\r\n          };\r\n\r\n          return (\r\n            <g\r\n              onClick={() => handleWomanClick(nodeDatum)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <title>{nodeDatum.id}</title>\r\n              <rect\r\n                x=\"-50\"\r\n                y=\"-20\"\r\n                width=\"100\"\r\n                height=\"40\"\r\n                \r\n                fill={isHusband ? \"#66bb6a\" : \"#4fc3f7\"}\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n                rx=\"8\"\r\n              />\r\n              <text\r\n                x=\"0\"\r\n                y=\"5\"\r\n                style={{\r\n                  \r\n                  fontSize:\"22\",\r\n                  fontFamily:'Cairo',\r\n                  dominantBaseline: 'middle',\r\n                  letterSpacing: '1px',\r\n                  strokeWidth: '0px',\r\n                  textAnchor:\"middle\",\r\n                  fill:\"white\"\r\n                }}\r\n                \r\n              >\r\n                {nodeDatum.name}\r\n              </text>\r\n            </g>\r\n          );\r\n        }}\r\n      />\r\n      </div>\r\n    )}\r\n      <div className='footerTips'>\r\n\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default FamilyTree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}