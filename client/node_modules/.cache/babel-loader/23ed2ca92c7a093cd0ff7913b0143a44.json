{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\nvar channel_1 = require(\"../channel\");\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\nvar load_balancing_1 = require(\"../load-balancing\");\nvar connection_1 = require(\"../connection\");\nvar lang_1 = require(\"../lang\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE,\n  SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks,\n  _a = neo4j_driver_core_1.internal.constants,\n  READ = _a.ACCESS_MODE_READ,\n  WRITE = _a.ACCESS_MODE_WRITE,\n  BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3,\n  BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0,\n  BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4,\n  BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\nvar PROCEDURE_NOT_FOUND_CODE = 'Neo.ClientError.Procedure.ProcedureNotFound';\nvar DATABASE_NOT_FOUND_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar INVALID_BOOKMARK_CODE = 'Neo.ClientError.Transaction.InvalidBookmark';\nvar INVALID_BOOKMARK_MIXTURE_CODE = 'Neo.ClientError.Transaction.InvalidBookmarkMixture';\nvar AUTHORIZATION_EXPIRED_CODE = 'Neo.ClientError.Security.AuthorizationExpired';\nvar INVALID_ARGUMENT_ERROR = 'Neo.ClientError.Statement.ArgumentError';\nvar INVALID_REQUEST_ERROR = 'Neo.ClientError.Request.Invalid';\nvar STATEMENT_TYPE_ERROR = 'Neo.ClientError.Statement.TypeError';\nvar NOT_AVAILABLE = 'N/A';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\nvar RoutingConnectionProvider = /** @class */function (_super) {\n  __extends(RoutingConnectionProvider, _super);\n  function RoutingConnectionProvider(_a) {\n    var id = _a.id,\n      address = _a.address,\n      routingContext = _a.routingContext,\n      hostNameResolver = _a.hostNameResolver,\n      config = _a.config,\n      log = _a.log,\n      userAgent = _a.userAgent,\n      boltAgent = _a.boltAgent,\n      authTokenManager = _a.authTokenManager,\n      routingTablePurgeDelay = _a.routingTablePurgeDelay,\n      newPool = _a.newPool;\n    var _this = _super.call(this, {\n      id: id,\n      config: config,\n      log: log,\n      userAgent: userAgent,\n      boltAgent: boltAgent,\n      authTokenManager: authTokenManager,\n      newPool: newPool\n    }, function (address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = connection_1.createChannelConnection;\n              _b = [address, this._config, this._createConnectionErrorHandler(), this._log];\n              return [4 /*yield*/, this._clientCertificateHolder.getClientCertificate()];\n            case 1:\n              return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent(), this._routingContext, this._channelSsrCallback.bind(this)]))];\n          }\n        });\n      });\n    }) || this;\n    _this._routingContext = __assign(__assign({}, routingContext), {\n      address: address.toString()\n    });\n    _this._seedRouter = address;\n    _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n    _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n    _this._hostNameResolver = hostNameResolver;\n    _this._dnsResolver = new channel_1.HostNameResolver();\n    _this._log = log;\n    _this._useSeedRouter = true;\n    _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay) : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n    _this._refreshRoutingTable = lang_1.functional.reuseOngoingRequest(_this._refreshRoutingTable, _this);\n    _this._withSSR = 0;\n    _this._withoutSSR = 0;\n    return _this;\n  }\n  RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n    // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n    // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n    return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n  };\n  RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n    this._log.warn(\"Routing driver \".concat(this._id, \" will forget \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n    this.forget(address, database || DEFAULT_DB_NAME);\n    return error;\n  };\n  RoutingConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\n    this._log.warn(\"Routing driver \".concat(this._id, \" will close connections to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n    return _super.prototype._handleSecurityError.call(this, error, address, connection, database);\n  };\n  RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n    this._log.warn(\"Routing driver \".concat(this._id, \" will forget writer \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n    this.forgetWriter(address, database || DEFAULT_DB_NAME);\n    return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED, error);\n  };\n  /**\n   * See {@link ConnectionProvider} for more information about this method and\n   * its arguments.\n   */\n  RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      accessMode = _b.accessMode,\n      database = _b.database,\n      bookmarks = _b.bookmarks,\n      impersonatedUser = _b.impersonatedUser,\n      onDatabaseNameResolved = _b.onDatabaseNameResolved,\n      auth = _b.auth,\n      homeDb = _b.homeDb;\n    return __awaiter(this, void 0, void 0, function () {\n      var context, databaseSpecificErrorHandler, conn, currentRoutingTable, routingTable;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            context = {\n              database: database || DEFAULT_DB_NAME\n            };\n            databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) {\n              return _this._handleUnavailability(error, address, context.database);\n            }, function (error, address) {\n              return _this._handleWriteFailure(error, address, homeDb !== null && homeDb !== void 0 ? homeDb : context.database);\n            }, function (error, address, conn) {\n              return _this._handleSecurityError(error, address, conn, context.database);\n            });\n            if (!(this.SSREnabled() && homeDb !== undefined && database === '')) return [3 /*break*/, 2];\n            currentRoutingTable = this._routingTableRegistry.get(homeDb, function () {\n              return new rediscovery_1.RoutingTable({\n                database: homeDb\n              });\n            });\n            if (!(currentRoutingTable && !currentRoutingTable.isStaleFor(accessMode))) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.getConnectionFromRoutingTable(currentRoutingTable, auth, accessMode, databaseSpecificErrorHandler)];\n          case 1:\n            conn = _c.sent();\n            if (this.SSREnabled()) {\n              return [2 /*return*/, conn];\n            }\n            conn.release();\n            _c.label = 2;\n          case 2:\n            return [4 /*yield*/, this._freshRoutingTable({\n              accessMode: accessMode,\n              database: context.database,\n              bookmarks: bookmarks,\n              impersonatedUser: impersonatedUser,\n              auth: auth,\n              onDatabaseNameResolved: function (databaseName) {\n                context.database = context.database || databaseName;\n                if (onDatabaseNameResolved) {\n                  onDatabaseNameResolved(databaseName);\n                }\n              }\n            })];\n          case 3:\n            routingTable = _c.sent();\n            return [2 /*return*/, this.getConnectionFromRoutingTable(routingTable, auth, accessMode, databaseSpecificErrorHandler)];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.getConnectionFromRoutingTable = function (routingTable, auth, accessMode, databaseSpecificErrorHandler) {\n    return __awaiter(this, void 0, void 0, function () {\n      var name, address, connection, error_1, transformed;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // select a target server based on specified access mode\n            if (accessMode === READ) {\n              address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n              name = 'read';\n            } else if (accessMode === WRITE) {\n              address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n              name = 'write';\n            } else {\n              throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n            }\n            // we couldn't select a target server\n            if (!address) {\n              throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \".concat(name, \" server. Known routing table is: \").concat(routingTable), SESSION_EXPIRED);\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n            return [4 /*yield*/, this._connectionPool.acquire({\n              auth: auth\n            }, address)];\n          case 2:\n            connection = _a.sent();\n            if (!auth) return [3 /*break*/, 4];\n            return [4 /*yield*/, this._verifyStickyConnection({\n              auth: auth,\n              connection: connection,\n              address: address\n            })];\n          case 3:\n            _a.sent();\n            return [2 /*return*/, connection];\n          case 4:\n            return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n          case 5:\n            error_1 = _a.sent();\n            transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n            throw transformed;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n    return __awaiter(this, void 0, void 0, function () {\n      var addresses, lastError, i, connection, protocolVersion, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\n          case 1:\n            addresses = _a.sent();\n            i = 0;\n            _a.label = 2;\n          case 2:\n            if (!(i < addresses.length)) return [3 /*break*/, 8];\n            _a.label = 3;\n          case 3:\n            _a.trys.push([3, 6,, 7]);\n            return [4 /*yield*/, this._createChannelConnection(addresses[i])];\n          case 4:\n            connection = _a.sent();\n            protocolVersion = connection.protocol() ? connection.protocol().version : null;\n            return [4 /*yield*/, connection.close()];\n          case 5:\n            _a.sent();\n            if (protocolVersion) {\n              return [2 /*return*/, versionPredicate(protocolVersion)];\n            }\n            return [2 /*return*/, false];\n          case 6:\n            error_2 = _a.sent();\n            lastError = error_2;\n            return [3 /*break*/, 7];\n          case 7:\n            i++;\n            return [3 /*break*/, 2];\n          case 8:\n            if (lastError) {\n              throw lastError;\n            }\n            return [2 /*return*/, false];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V4_0;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V3;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V4_4;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsSessionAuth = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V5_1;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      _this._hasProtocolVersion(resolve).catch(reject);\n    });\n  };\n  RoutingConnectionProvider.prototype.verifyAuthentication = function (_a) {\n    var database = _a.database,\n      accessMode = _a.accessMode,\n      auth = _a.auth;\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_b) {\n        return [2 /*return*/, this._verifyAuthentication({\n          auth: auth,\n          getAddress: function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var context, routingTable, servers;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    context = {\n                      database: database || DEFAULT_DB_NAME\n                    };\n                    return [4 /*yield*/, this._freshRoutingTable({\n                      accessMode: accessMode,\n                      database: context.database,\n                      auth: auth,\n                      onDatabaseNameResolved: function (databaseName) {\n                        context.database = context.database || databaseName;\n                      }\n                    })];\n                  case 1:\n                    routingTable = _a.sent();\n                    servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                    if (servers.length === 0) {\n                      throw (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                    }\n                    return [2 /*return*/, servers[0]];\n                }\n              });\n            });\n          }\n        })];\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (_a) {\n    var database = _a.database,\n      accessMode = _a.accessMode;\n    return __awaiter(this, void 0, void 0, function () {\n      var context, routingTable, servers, error, servers_1, servers_1_1, address, serverInfo, e_1, e_2_1;\n      var e_2, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            context = {\n              database: database || DEFAULT_DB_NAME\n            };\n            return [4 /*yield*/, this._freshRoutingTable({\n              accessMode: accessMode,\n              database: context.database,\n              onDatabaseNameResolved: function (databaseName) {\n                context.database = context.database || databaseName;\n              }\n            })];\n          case 1:\n            routingTable = _c.sent();\n            servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n            error = (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 9, 10, 11]);\n            servers_1 = __values(servers), servers_1_1 = servers_1.next();\n            _c.label = 3;\n          case 3:\n            if (!!servers_1_1.done) return [3 /*break*/, 8];\n            address = servers_1_1.value;\n            _c.label = 4;\n          case 4:\n            _c.trys.push([4, 6,, 7]);\n            return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({\n              address: address\n            })];\n          case 5:\n            serverInfo = _c.sent();\n            return [2 /*return*/, serverInfo];\n          case 6:\n            e_1 = _c.sent();\n            error = e_1;\n            return [3 /*break*/, 7];\n          case 7:\n            servers_1_1 = servers_1.next();\n            return [3 /*break*/, 3];\n          case 8:\n            return [3 /*break*/, 11];\n          case 9:\n            e_2_1 = _c.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3 /*break*/, 11];\n          case 10:\n            try {\n              if (servers_1_1 && !servers_1_1.done && (_b = servers_1.return)) _b.call(servers_1);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n            return [7 /*endfinally*/];\n          case 11:\n            throw error;\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.forget = function (address, database) {\n    this._routingTableRegistry.apply(database, {\n      applyWhenExists: function (routingTable) {\n        return routingTable.forget(address);\n      }\n    });\n    // We're firing and forgetting this operation explicitly and listening for any\n    // errors to avoid unhandled promise rejection\n    this._connectionPool.purge(address).catch(function () {});\n  };\n  RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n    this._routingTableRegistry.apply(database, {\n      applyWhenExists: function (routingTable) {\n        return routingTable.forgetWriter(address);\n      }\n    });\n  };\n  RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      accessMode = _b.accessMode,\n      database = _b.database,\n      bookmarks = _b.bookmarks,\n      impersonatedUser = _b.impersonatedUser,\n      onDatabaseNameResolved = _b.onDatabaseNameResolved,\n      auth = _b.auth;\n    var currentRoutingTable = this._routingTableRegistry.get(database, function () {\n      return new rediscovery_1.RoutingTable({\n        database: database\n      });\n    });\n    if (!currentRoutingTable.isStaleFor(accessMode)) {\n      return currentRoutingTable;\n    }\n    this._log.info(\"Routing table is stale for database: \\\"\".concat(database, \"\\\" and access mode: \\\"\").concat(accessMode, \"\\\": \").concat(currentRoutingTable));\n    return this._refreshRoutingTable(currentRoutingTable, bookmarks, impersonatedUser, auth).then(function (newRoutingTable) {\n      onDatabaseNameResolved(newRoutingTable.database);\n      return newRoutingTable;\n    });\n  };\n  RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    var knownRouters = currentRoutingTable.routers;\n    if (this._useSeedRouter) {\n      return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n    }\n    return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var seenRouters, _a, newRoutingTable, error, _b, newRoutingTable2, error2;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            seenRouters = [];\n            return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n          case 1:\n            _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n            if (!newRoutingTable) return [3 /*break*/, 2];\n            this._useSeedRouter = false;\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n          case 3:\n            _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable2 = _b[0], error2 = _b[1];\n            newRoutingTable = newRoutingTable2;\n            error = error2 || error;\n            _c.label = 4;\n          case 4:\n            return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n          case 5:\n            return [2 /*return*/, _c.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, newRoutingTable, error;\n      var _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n          case 1:\n            _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n            if (!!newRoutingTable) return [3 /*break*/, 3];\n            return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n          case 2:\n            // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n            _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _b[0], error = _b[1];\n            _c.label = 3;\n          case 3:\n            return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n          case 4:\n            return [2 /*return*/, _c.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, newRoutingTable, error, lastRouterIndex;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n          case 1:\n            _a = __read.apply(void 0, [_b.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n            if (newRoutingTable) {\n              // one of the known routers returned a valid routing table - use it\n              return [2 /*return*/, [newRoutingTable, null]];\n            }\n            lastRouterIndex = knownRouters.length - 1;\n            RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n            return [2 /*return*/, [null, error]];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolvedAddresses, newAddresses;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\n            // filter out all addresses that we've already tried\n            ];\n          case 1:\n            resolvedAddresses = _a.sent();\n            newAddresses = resolvedAddresses.filter(function (address) {\n              return seenRouters.indexOf(address) < 0;\n            });\n            return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmarks, impersonatedUser, auth)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolvedAddresses, dnsResolvedAddresses;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\n          case 1:\n            resolvedAddresses = _a.sent();\n            return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) {\n              return _this._dnsResolver.resolve(address);\n            }))];\n          case 2:\n            dnsResolvedAddresses = _a.sent();\n            return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a, newRoutingTable, previousRouterIndex, _b, session, error, error_3;\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  return [4 /*yield*/, refreshedTablePromise];\n                case 1:\n                  _a = __read.apply(void 0, [_c.sent(), 1]), newRoutingTable = _a[0];\n                  if (newRoutingTable) {\n                    // valid routing table was fetched - just return it, try next router otherwise\n                    return [2 /*return*/, [newRoutingTable, null]];\n                  } else {\n                    previousRouterIndex = currentIndex - 1;\n                    RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n                  }\n                  return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmarks, impersonatedUser, auth)];\n                case 2:\n                  _b = __read.apply(void 0, [_c.sent(), 2]), session = _b[0], error = _b[1];\n                  if (!session) return [3 /*break*/, 8];\n                  _c.label = 3;\n                case 3:\n                  _c.trys.push([3, 5, 6, 7]);\n                  return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n                case 4:\n                  return [2 /*return*/, [_c.sent(), null]];\n                case 5:\n                  error_3 = _c.sent();\n                  return [2 /*return*/, this._handleRediscoveryError(error_3, currentRouter)];\n                case 6:\n                  session.close();\n                  return [7 /*endfinally*/];\n                case 7:\n                  return [3 /*break*/, 9];\n                case 8:\n                  // unable to acquire connection and create session towards the current router\n                  // return null to signal that the next router should be tried\n                  return [2 /*return*/, [null, error]];\n                case 9:\n                  return [2 /*return*/];\n              }\n            });\n          });\n        }, Promise.resolve([null, null]))];\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var connection, databaseSpecificErrorHandler, delegateConnection, connectionProvider, protocolVersion, error_4;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n            return [4 /*yield*/, this._connectionPool.acquire({\n              auth: auth\n            }, routerAddress)];\n          case 1:\n            connection = _a.sent();\n            if (!auth) return [3 /*break*/, 3];\n            return [4 /*yield*/, this._verifyStickyConnection({\n              auth: auth,\n              connection: connection,\n              address: routerAddress\n            })];\n          case 2:\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n              errorCode: SESSION_EXPIRED,\n              handleSecurityError: function (error, address, conn) {\n                return _this._handleSecurityError(error, address, conn);\n              }\n            });\n            delegateConnection = !connection._sticky ? new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler) : new connection_1.DelegateConnection(connection);\n            connectionProvider = new connection_provider_single_1.default(delegateConnection);\n            protocolVersion = connection.protocol().version;\n            if (protocolVersion < 4.0) {\n              return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                mode: WRITE,\n                bookmarks: Bookmarks.empty(),\n                connectionProvider: connectionProvider\n              }), null]];\n            }\n            return [2 /*return*/, [new neo4j_driver_core_1.Session({\n              mode: READ,\n              database: SYSTEM_DB_NAME,\n              bookmarks: bookmarks,\n              connectionProvider: connectionProvider,\n              impersonatedUser: impersonatedUser\n            }), null]];\n          case 4:\n            error_4 = _a.sent();\n            return [2 /*return*/, this._handleRediscoveryError(error_4, routerAddress)];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._handleRediscoveryError = function (error, routerAddress) {\n    if (_isFailFastError(error) || _isFailFastSecurityError(error)) {\n      throw error;\n    } else if (error.code === PROCEDURE_NOT_FOUND_CODE) {\n      // throw when getServers procedure not found because this is clearly a configuration issue\n      throw (0, neo4j_driver_core_1.newError)(\"Server at \".concat(routerAddress.asHostPort(), \" can't perform routing. Make sure you are connecting to a causal cluster\"), SERVICE_UNAVAILABLE, error);\n    }\n    this._log.warn(\"unable to fetch routing table because of an error \".concat(error));\n    return [null, error];\n  };\n  RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, error) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!newRoutingTable) {\n              // none of routing servers returned valid routing table, throw exception\n              throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \".concat(currentRoutingTable), SERVICE_UNAVAILABLE, error);\n            }\n            if (newRoutingTable.writers.length === 0) {\n              // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n              // does not always get routing table without writers because it talks exclusively to a minority partition\n              this._useSeedRouter = true;\n            }\n            return [4 /*yield*/, this._updateRoutingTable(newRoutingTable)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, newRoutingTable];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // close old connections to servers not present in the new routing table\n            return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\n          case 1:\n            // close old connections to servers not present in the new routing table\n            _a.sent();\n            this._routingTableRegistry.removeExpired();\n            this._routingTableRegistry.register(newRoutingTable);\n            this._log.info(\"Updated routing table \".concat(newRoutingTable));\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n    var address = routersArray[routerIndex];\n    if (routingTable && address) {\n      routingTable.forgetRouter(address);\n    }\n  };\n  RoutingConnectionProvider.prototype._channelSsrCallback = function (isEnabled, action) {\n    if (action === 'OPEN') {\n      if (isEnabled === true) {\n        this._withSSR = this._withSSR + 1;\n      } else {\n        this._withoutSSR = this._withoutSSR + 1;\n      }\n    } else if (action === 'CLOSE') {\n      if (isEnabled === true) {\n        this._withSSR = this._withSSR - 1;\n      } else {\n        this._withoutSSR = this._withoutSSR - 1;\n      }\n    } else {\n      throw (0, neo4j_driver_core_1.newError)(\"Channel SSR Callback invoked with action other than 'OPEN' or 'CLOSE'\");\n    }\n  };\n  RoutingConnectionProvider.prototype.SSREnabled = function () {\n    return this._withSSR > 0 && this._withoutSSR === 0;\n  };\n  return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default);\nexports.default = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\nvar RoutingTableRegistry = /** @class */function () {\n  /**\n   * Constructor\n   * @param {int} routingTablePurgeDelay The routing table purge delay\n   */\n  function RoutingTableRegistry(routingTablePurgeDelay) {\n    this._tables = new Map();\n    this._routingTablePurgeDelay = routingTablePurgeDelay;\n  }\n  /**\n   * Put a routing table in the registry\n   *\n   * @param {RoutingTable} table The routing table\n   * @returns {RoutingTableRegistry} this\n   */\n  RoutingTableRegistry.prototype.register = function (table) {\n    this._tables.set(table.database, table);\n    return this;\n  };\n  /**\n   * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n   * be applied for each element\n   *\n   * @param {string} database The database name\n   * @param {object} callbacks The actions\n   * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n   * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n   * @returns {RoutingTableRegistry} this\n   */\n  RoutingTableRegistry.prototype.apply = function (database, _a) {\n    var _b = _a === void 0 ? {} : _a,\n      applyWhenExists = _b.applyWhenExists,\n      _c = _b.applyWhenDontExists,\n      applyWhenDontExists = _c === void 0 ? function () {} : _c;\n    if (this._tables.has(database)) {\n      applyWhenExists(this._tables.get(database));\n    } else if (typeof database === 'string' || database === null) {\n      applyWhenDontExists();\n    } else {\n      this._forEach(applyWhenExists);\n    }\n    return this;\n  };\n  /**\n   * Retrieves a routing table from a given database name\n   *\n   * @param {string|impersonatedUser} impersonatedUser The impersonated User\n   * @param {string} database The database name\n   * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n   * @returns {RoutingTable} The routing table for the respective database\n   */\n  RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n    if (this._tables.has(database)) {\n      return this._tables.get(database);\n    }\n    return typeof defaultSupplier === 'function' ? defaultSupplier() : defaultSupplier;\n  };\n  /**\n   * Remove the routing table which is already expired\n   * @returns {RoutingTableRegistry} this\n   */\n  RoutingTableRegistry.prototype.removeExpired = function () {\n    var _this = this;\n    return this._removeIf(function (value) {\n      return value.isExpiredFor(_this._routingTablePurgeDelay);\n    });\n  };\n  RoutingTableRegistry.prototype._forEach = function (apply) {\n    var e_3, _a;\n    try {\n      for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          value = _d[1];\n        apply(value);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    return this;\n  };\n  RoutingTableRegistry.prototype._remove = function (key) {\n    this._tables.delete(key);\n    return this;\n  };\n  RoutingTableRegistry.prototype._removeIf = function (predicate) {\n    var e_4, _a;\n    try {\n      for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          key = _d[0],\n          value = _d[1];\n        if (predicate(value)) {\n          this._remove(key);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    return this;\n  };\n  return RoutingTableRegistry;\n}();\nfunction _isFailFastError(error) {\n  return [DATABASE_NOT_FOUND_CODE, INVALID_BOOKMARK_CODE, INVALID_BOOKMARK_MIXTURE_CODE, INVALID_ARGUMENT_ERROR, INVALID_REQUEST_ERROR, STATEMENT_TYPE_ERROR, NOT_AVAILABLE].includes(error.code);\n}\nfunction _isFailFastSecurityError(error) {\n  return error.code.startsWith('Neo.ClientError.Security.') && ![AUTHORIZATION_EXPIRED_CODE].includes(error.code);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__createBinding","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","op","pop","push","__values","__read","r","ar","error","__importDefault","exports","neo4j_driver_core_1","require","rediscovery_1","channel_1","connection_provider_single_1","connection_provider_pooled_1","load_balancing_1","connection_1","lang_1","SERVICE_UNAVAILABLE","SESSION_EXPIRED","Bookmarks","internal","bookmarks","_a","constants","READ","ACCESS_MODE_READ","WRITE","ACCESS_MODE_WRITE","BOLT_PROTOCOL_V3","BOLT_PROTOCOL_V4_0","BOLT_PROTOCOL_V4_4","BOLT_PROTOCOL_V5_1","PROCEDURE_NOT_FOUND_CODE","DATABASE_NOT_FOUND_CODE","INVALID_BOOKMARK_CODE","INVALID_BOOKMARK_MIXTURE_CODE","AUTHORIZATION_EXPIRED_CODE","INVALID_ARGUMENT_ERROR","INVALID_REQUEST_ERROR","STATEMENT_TYPE_ERROR","NOT_AVAILABLE","SYSTEM_DB_NAME","DEFAULT_DB_NAME","DEFAULT_ROUTING_TABLE_PURGE_DELAY","int","RoutingConnectionProvider","_super","id","address","routingContext","hostNameResolver","config","log","userAgent","boltAgent","authTokenManager","routingTablePurgeDelay","newPool","_this","_b","_c","createChannelConnection","_config","_createConnectionErrorHandler","_log","_clientCertificateHolder","getClientCertificate","concat","_routingContext","_channelSsrCallback","bind","toString","_seedRouter","_rediscovery","default","_loadBalancingStrategy","LeastConnectedLoadBalancingStrategy","_connectionPool","_hostNameResolver","_dnsResolver","HostNameResolver","_useSeedRouter","_routingTableRegistry","RoutingTableRegistry","_refreshRoutingTable","functional","reuseOngoingRequest","_withSSR","_withoutSSR","ConnectionErrorHandler","_handleUnavailability","database","warn","_id","code","message","forget","_handleSecurityError","connection","_handleWriteFailure","forgetWriter","newError","acquireConnection","accessMode","impersonatedUser","onDatabaseNameResolved","auth","homeDb","context","databaseSpecificErrorHandler","conn","currentRoutingTable","routingTable","SSREnabled","RoutingTable","isStaleFor","getConnectionFromRoutingTable","release","_freshRoutingTable","databaseName","name","error_1","transformed","selectReader","readers","selectWriter","writers","acquire","_verifyStickyConnection","DelegateConnection","handleAndTransformError","_hasProtocolVersion","versionPredicate","addresses","lastError","protocolVersion","error_2","_resolveSeedRouter","_createChannelConnection","protocol","version","close","supportsMultiDb","supportsTransactionConfig","supportsUserImpersonation","supportsSessionAuth","getNegotiatedProtocolVersion","catch","verifyAuthentication","_verifyAuthentication","getAddress","servers","verifyConnectivityAndGetServerInfo","servers_1","servers_1_1","serverInfo","e_1","e_2_1","e_2","_verifyConnectivityAndGetServerVersion","return","applyWhenExists","purge","info","newRoutingTable","knownRouters","routers","_fetchRoutingTableFromSeedRouterFallbackToKnownRouters","_fetchRoutingTableFromKnownRoutersFallbackToSeedRouter","seenRouters","newRoutingTable2","error2","_fetchRoutingTableUsingSeedRouter","_fetchRoutingTableUsingKnownRouters","_applyRoutingTableIfPossible","lastRouterIndex","_fetchRoutingTable","_forgetRouter","seedRouter","resolvedAddresses","newAddresses","filter","indexOf","dnsResolvedAddresses","all","map","routerAddresses","reduce","refreshedTablePromise","currentRouter","currentIndex","previousRouterIndex","session","error_3","_createSessionForRediscovery","lookupRoutingTableOnRouter","_handleRediscoveryError","routerAddress","delegateConnection","connectionProvider","error_4","errorCode","handleSecurityError","_sticky","Session","mode","empty","_isFailFastError","_isFailFastSecurityError","asHostPort","_updateRoutingTable","keepAll","allServers","removeExpired","register","routersArray","routerIndex","forgetRouter","isEnabled","action","_tables","Map","_routingTablePurgeDelay","table","set","applyWhenDontExists","has","_forEach","defaultSupplier","_removeIf","isExpiredFor","e_3","_d","e_3_1","_remove","key","delete","predicate","e_4","e_4_1","includes","startsWith"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\nvar channel_1 = require(\"../channel\");\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\nvar load_balancing_1 = require(\"../load-balancing\");\nvar connection_1 = require(\"../connection\");\nvar lang_1 = require(\"../lang\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, READ = _a.ACCESS_MODE_READ, WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\nvar PROCEDURE_NOT_FOUND_CODE = 'Neo.ClientError.Procedure.ProcedureNotFound';\nvar DATABASE_NOT_FOUND_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar INVALID_BOOKMARK_CODE = 'Neo.ClientError.Transaction.InvalidBookmark';\nvar INVALID_BOOKMARK_MIXTURE_CODE = 'Neo.ClientError.Transaction.InvalidBookmarkMixture';\nvar AUTHORIZATION_EXPIRED_CODE = 'Neo.ClientError.Security.AuthorizationExpired';\nvar INVALID_ARGUMENT_ERROR = 'Neo.ClientError.Statement.ArgumentError';\nvar INVALID_REQUEST_ERROR = 'Neo.ClientError.Request.Invalid';\nvar STATEMENT_TYPE_ERROR = 'Neo.ClientError.Statement.TypeError';\nvar NOT_AVAILABLE = 'N/A';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\nvar RoutingConnectionProvider = /** @class */ (function (_super) {\n    __extends(RoutingConnectionProvider, _super);\n    function RoutingConnectionProvider(_a) {\n        var id = _a.id, address = _a.address, routingContext = _a.routingContext, hostNameResolver = _a.hostNameResolver, config = _a.config, log = _a.log, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, routingTablePurgeDelay = _a.routingTablePurgeDelay, newPool = _a.newPool;\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, boltAgent: boltAgent, authTokenManager: authTokenManager, newPool: newPool }, function (address) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = connection_1.createChannelConnection;\n                        _b = [address,\n                            this._config,\n                            this._createConnectionErrorHandler(),\n                            this._log];\n                        return [4 /*yield*/, this._clientCertificateHolder.getClientCertificate()];\n                    case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent(), this._routingContext,\n                            this._channelSsrCallback.bind(this)]))];\n                }\n            });\n        }); }) || this;\n        _this._routingContext = __assign(__assign({}, routingContext), { address: address.toString() });\n        _this._seedRouter = address;\n        _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n        _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n        _this._hostNameResolver = hostNameResolver;\n        _this._dnsResolver = new channel_1.HostNameResolver();\n        _this._log = log;\n        _this._useSeedRouter = true;\n        _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay\n            ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay)\n            : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n        _this._refreshRoutingTable = lang_1.functional.reuseOngoingRequest(_this._refreshRoutingTable, _this);\n        _this._withSSR = 0;\n        _this._withoutSSR = 0;\n        return _this;\n    }\n    RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n        // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n        // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n        return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n    };\n    RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        this.forget(address, database || DEFAULT_DB_NAME);\n        return error;\n    };\n    RoutingConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will close connections to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        return _super.prototype._handleSecurityError.call(this, error, address, connection, database);\n    };\n    RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget writer \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        this.forgetWriter(address, database || DEFAULT_DB_NAME);\n        return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED, error);\n    };\n    /**\n     * See {@link ConnectionProvider} for more information about this method and\n     * its arguments.\n     */\n    RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth, homeDb = _b.homeDb;\n        return __awaiter(this, void 0, void 0, function () {\n            var context, databaseSpecificErrorHandler, conn, currentRoutingTable, routingTable;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) { return _this._handleUnavailability(error, address, context.database); }, function (error, address) { return _this._handleWriteFailure(error, address, homeDb !== null && homeDb !== void 0 ? homeDb : context.database); }, function (error, address, conn) { return _this._handleSecurityError(error, address, conn, context.database); });\n                        if (!(this.SSREnabled() && homeDb !== undefined && database === '')) return [3 /*break*/, 2];\n                        currentRoutingTable = this._routingTableRegistry.get(homeDb, function () { return new rediscovery_1.RoutingTable({ database: homeDb }); });\n                        if (!(currentRoutingTable && !currentRoutingTable.isStaleFor(accessMode))) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getConnectionFromRoutingTable(currentRoutingTable, auth, accessMode, databaseSpecificErrorHandler)];\n                    case 1:\n                        conn = _c.sent();\n                        if (this.SSREnabled()) {\n                            return [2 /*return*/, conn];\n                        }\n                        conn.release();\n                        _c.label = 2;\n                    case 2: return [4 /*yield*/, this._freshRoutingTable({\n                            accessMode: accessMode,\n                            database: context.database,\n                            bookmarks: bookmarks,\n                            impersonatedUser: impersonatedUser,\n                            auth: auth,\n                            onDatabaseNameResolved: function (databaseName) {\n                                context.database = context.database || databaseName;\n                                if (onDatabaseNameResolved) {\n                                    onDatabaseNameResolved(databaseName);\n                                }\n                            }\n                        })];\n                    case 3:\n                        routingTable = _c.sent();\n                        return [2 /*return*/, this.getConnectionFromRoutingTable(routingTable, auth, accessMode, databaseSpecificErrorHandler)];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.getConnectionFromRoutingTable = function (routingTable, auth, accessMode, databaseSpecificErrorHandler) {\n        return __awaiter(this, void 0, void 0, function () {\n            var name, address, connection, error_1, transformed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // select a target server based on specified access mode\n                        if (accessMode === READ) {\n                            address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n                            name = 'read';\n                        }\n                        else if (accessMode === WRITE) {\n                            address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n                            name = 'write';\n                        }\n                        else {\n                            throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n                        }\n                        // we couldn't select a target server\n                        if (!address) {\n                            throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \".concat(name, \" server. Known routing table is: \").concat(routingTable), SESSION_EXPIRED);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, address)];\n                    case 2:\n                        connection = _a.sent();\n                        if (!auth) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: address\n                            })];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/, connection];\n                    case 4: return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n                    case 5:\n                        error_1 = _a.sent();\n                        transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n                        throw transformed;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var addresses, lastError, i, connection, protocolVersion, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\n                    case 1:\n                        addresses = _a.sent();\n                        i = 0;\n                        _a.label = 2;\n                    case 2:\n                        if (!(i < addresses.length)) return [3 /*break*/, 8];\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 6, , 7]);\n                        return [4 /*yield*/, this._createChannelConnection(addresses[i])];\n                    case 4:\n                        connection = _a.sent();\n                        protocolVersion = connection.protocol()\n                            ? connection.protocol().version\n                            : null;\n                        return [4 /*yield*/, connection.close()];\n                    case 5:\n                        _a.sent();\n                        if (protocolVersion) {\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\n                        }\n                        return [2 /*return*/, false];\n                    case 6:\n                        error_2 = _a.sent();\n                        lastError = error_2;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        i++;\n                        return [3 /*break*/, 2];\n                    case 8:\n                        if (lastError) {\n                            throw lastError;\n                        }\n                        return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsSessionAuth = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V5_1; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._hasProtocolVersion(resolve)\n                .catch(reject);\n        });\n    };\n    RoutingConnectionProvider.prototype.verifyAuthentication = function (_a) {\n        var database = _a.database, accessMode = _a.accessMode, auth = _a.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                return [2 /*return*/, this._verifyAuthentication({\n                        auth: auth,\n                        getAddress: function () { return __awaiter(_this, void 0, void 0, function () {\n                            var context, routingTable, servers;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        context = { database: database || DEFAULT_DB_NAME };\n                                        return [4 /*yield*/, this._freshRoutingTable({\n                                                accessMode: accessMode,\n                                                database: context.database,\n                                                auth: auth,\n                                                onDatabaseNameResolved: function (databaseName) {\n                                                    context.database = context.database || databaseName;\n                                                }\n                                            })];\n                                    case 1:\n                                        routingTable = _a.sent();\n                                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                                        if (servers.length === 0) {\n                                            throw (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                                        }\n                                        return [2 /*return*/, servers[0]];\n                                }\n                            });\n                        }); }\n                    })];\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (_a) {\n        var database = _a.database, accessMode = _a.accessMode;\n        return __awaiter(this, void 0, void 0, function () {\n            var context, routingTable, servers, error, servers_1, servers_1_1, address, serverInfo, e_1, e_2_1;\n            var e_2, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        return [4 /*yield*/, this._freshRoutingTable({\n                                accessMode: accessMode,\n                                database: context.database,\n                                onDatabaseNameResolved: function (databaseName) {\n                                    context.database = context.database || databaseName;\n                                }\n                            })];\n                    case 1:\n                        routingTable = _c.sent();\n                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                        error = (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 9, 10, 11]);\n                        servers_1 = __values(servers), servers_1_1 = servers_1.next();\n                        _c.label = 3;\n                    case 3:\n                        if (!!servers_1_1.done) return [3 /*break*/, 8];\n                        address = servers_1_1.value;\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({ address: address })];\n                    case 5:\n                        serverInfo = _c.sent();\n                        return [2 /*return*/, serverInfo];\n                    case 6:\n                        e_1 = _c.sent();\n                        error = e_1;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        servers_1_1 = servers_1.next();\n                        return [3 /*break*/, 3];\n                    case 8: return [3 /*break*/, 11];\n                    case 9:\n                        e_2_1 = _c.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 11];\n                    case 10:\n                        try {\n                            if (servers_1_1 && !servers_1_1.done && (_b = servers_1.return)) _b.call(servers_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 11: throw error;\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.forget = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forget(address); }\n        });\n        // We're firing and forgetting this operation explicitly and listening for any\n        // errors to avoid unhandled promise rejection\n        this._connectionPool.purge(address).catch(function () { });\n    };\n    RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forgetWriter(address); }\n        });\n    };\n    RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\n        var currentRoutingTable = this._routingTableRegistry.get(database, function () { return new rediscovery_1.RoutingTable({ database: database }); });\n        if (!currentRoutingTable.isStaleFor(accessMode)) {\n            return currentRoutingTable;\n        }\n        this._log.info(\"Routing table is stale for database: \\\"\".concat(database, \"\\\" and access mode: \\\"\").concat(accessMode, \"\\\": \").concat(currentRoutingTable));\n        return this._refreshRoutingTable(currentRoutingTable, bookmarks, impersonatedUser, auth)\n            .then(function (newRoutingTable) {\n            onDatabaseNameResolved(newRoutingTable.database);\n            return newRoutingTable;\n        });\n    };\n    RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        var knownRouters = currentRoutingTable.routers;\n        if (this._useSeedRouter) {\n            return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n        }\n        return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seenRouters, _a, newRoutingTable, error, _b, newRoutingTable2, error2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        seenRouters = [];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (!newRoutingTable) return [3 /*break*/, 2];\n                        this._useSeedRouter = false;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 3:\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable2 = _b[0], error2 = _b[1];\n                        newRoutingTable = newRoutingTable2;\n                        error = error2 || error;\n                        _c.label = 4;\n                    case 4: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n                    case 5: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, newRoutingTable, error;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (!!newRoutingTable) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 2:\n                        // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _b[0], error = _b[1];\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, newRoutingTable, error, lastRouterIndex;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (newRoutingTable) {\n                            // one of the known routers returned a valid routing table - use it\n                            return [2 /*return*/, [newRoutingTable, null]];\n                        }\n                        lastRouterIndex = knownRouters.length - 1;\n                        RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n                        return [2 /*return*/, [null, error]];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, newAddresses;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\n                        // filter out all addresses that we've already tried\n                    ];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        newAddresses = resolvedAddresses.filter(function (address) { return seenRouters.indexOf(address) < 0; });\n                        return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmarks, impersonatedUser, auth)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, dnsResolvedAddresses;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) { return _this._dnsResolver.resolve(address); }))];\n                    case 2:\n                        dnsResolvedAddresses = _a.sent();\n                        return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, newRoutingTable, previousRouterIndex, _b, session, error, error_3;\n                        return __generator(this, function (_c) {\n                            switch (_c.label) {\n                                case 0: return [4 /*yield*/, refreshedTablePromise];\n                                case 1:\n                                    _a = __read.apply(void 0, [_c.sent(), 1]), newRoutingTable = _a[0];\n                                    if (newRoutingTable) {\n                                        // valid routing table was fetched - just return it, try next router otherwise\n                                        return [2 /*return*/, [newRoutingTable, null]];\n                                    }\n                                    else {\n                                        previousRouterIndex = currentIndex - 1;\n                                        RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n                                    }\n                                    return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmarks, impersonatedUser, auth)];\n                                case 2:\n                                    _b = __read.apply(void 0, [_c.sent(), 2]), session = _b[0], error = _b[1];\n                                    if (!session) return [3 /*break*/, 8];\n                                    _c.label = 3;\n                                case 3:\n                                    _c.trys.push([3, 5, 6, 7]);\n                                    return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n                                case 4: return [2 /*return*/, [_c.sent(), null]];\n                                case 5:\n                                    error_3 = _c.sent();\n                                    return [2 /*return*/, this._handleRediscoveryError(error_3, currentRouter)];\n                                case 6:\n                                    session.close();\n                                    return [7 /*endfinally*/];\n                                case 7: return [3 /*break*/, 9];\n                                case 8: \n                                // unable to acquire connection and create session towards the current router\n                                // return null to signal that the next router should be tried\n                                return [2 /*return*/, [null, error]];\n                                case 9: return [2 /*return*/];\n                            }\n                        });\n                    }); }, Promise.resolve([null, null]))];\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, databaseSpecificErrorHandler, delegateConnection, connectionProvider, protocolVersion, error_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 4, , 5]);\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, routerAddress)];\n                    case 1:\n                        connection = _a.sent();\n                        if (!auth) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: routerAddress\n                            })];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n                            errorCode: SESSION_EXPIRED,\n                            handleSecurityError: function (error, address, conn) { return _this._handleSecurityError(error, address, conn); }\n                        });\n                        delegateConnection = !connection._sticky\n                            ? new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)\n                            : new connection_1.DelegateConnection(connection);\n                        connectionProvider = new connection_provider_single_1.default(delegateConnection);\n                        protocolVersion = connection.protocol().version;\n                        if (protocolVersion < 4.0) {\n                            return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                                        mode: WRITE,\n                                        bookmarks: Bookmarks.empty(),\n                                        connectionProvider: connectionProvider\n                                    }), null]];\n                        }\n                        return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                                    mode: READ,\n                                    database: SYSTEM_DB_NAME,\n                                    bookmarks: bookmarks,\n                                    connectionProvider: connectionProvider,\n                                    impersonatedUser: impersonatedUser\n                                }), null]];\n                    case 4:\n                        error_4 = _a.sent();\n                        return [2 /*return*/, this._handleRediscoveryError(error_4, routerAddress)];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._handleRediscoveryError = function (error, routerAddress) {\n        if (_isFailFastError(error) || _isFailFastSecurityError(error)) {\n            throw error;\n        }\n        else if (error.code === PROCEDURE_NOT_FOUND_CODE) {\n            // throw when getServers procedure not found because this is clearly a configuration issue\n            throw (0, neo4j_driver_core_1.newError)(\"Server at \".concat(routerAddress.asHostPort(), \" can't perform routing. Make sure you are connecting to a causal cluster\"), SERVICE_UNAVAILABLE, error);\n        }\n        this._log.warn(\"unable to fetch routing table because of an error \".concat(error));\n        return [null, error];\n    };\n    RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, error) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!newRoutingTable) {\n                            // none of routing servers returned valid routing table, throw exception\n                            throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \".concat(currentRoutingTable), SERVICE_UNAVAILABLE, error);\n                        }\n                        if (newRoutingTable.writers.length === 0) {\n                            // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n                            // does not always get routing table without writers because it talks exclusively to a minority partition\n                            this._useSeedRouter = true;\n                        }\n                        return [4 /*yield*/, this._updateRoutingTable(newRoutingTable)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, newRoutingTable];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // close old connections to servers not present in the new routing table\n                    return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\n                    case 1:\n                        // close old connections to servers not present in the new routing table\n                        _a.sent();\n                        this._routingTableRegistry.removeExpired();\n                        this._routingTableRegistry.register(newRoutingTable);\n                        this._log.info(\"Updated routing table \".concat(newRoutingTable));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n        var address = routersArray[routerIndex];\n        if (routingTable && address) {\n            routingTable.forgetRouter(address);\n        }\n    };\n    RoutingConnectionProvider.prototype._channelSsrCallback = function (isEnabled, action) {\n        if (action === 'OPEN') {\n            if (isEnabled === true) {\n                this._withSSR = this._withSSR + 1;\n            }\n            else {\n                this._withoutSSR = this._withoutSSR + 1;\n            }\n        }\n        else if (action === 'CLOSE') {\n            if (isEnabled === true) {\n                this._withSSR = this._withSSR - 1;\n            }\n            else {\n                this._withoutSSR = this._withoutSSR - 1;\n            }\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)(\"Channel SSR Callback invoked with action other than 'OPEN' or 'CLOSE'\");\n        }\n    };\n    RoutingConnectionProvider.prototype.SSREnabled = function () {\n        return this._withSSR > 0 && this._withoutSSR === 0;\n    };\n    return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default));\nexports.default = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\nvar RoutingTableRegistry = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param {int} routingTablePurgeDelay The routing table purge delay\n     */\n    function RoutingTableRegistry(routingTablePurgeDelay) {\n        this._tables = new Map();\n        this._routingTablePurgeDelay = routingTablePurgeDelay;\n    }\n    /**\n     * Put a routing table in the registry\n     *\n     * @param {RoutingTable} table The routing table\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.register = function (table) {\n        this._tables.set(table.database, table);\n        return this;\n    };\n    /**\n     * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n     * be applied for each element\n     *\n     * @param {string} database The database name\n     * @param {object} callbacks The actions\n     * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n     * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.apply = function (database, _a) {\n        var _b = _a === void 0 ? {} : _a, applyWhenExists = _b.applyWhenExists, _c = _b.applyWhenDontExists, applyWhenDontExists = _c === void 0 ? function () { } : _c;\n        if (this._tables.has(database)) {\n            applyWhenExists(this._tables.get(database));\n        }\n        else if (typeof database === 'string' || database === null) {\n            applyWhenDontExists();\n        }\n        else {\n            this._forEach(applyWhenExists);\n        }\n        return this;\n    };\n    /**\n     * Retrieves a routing table from a given database name\n     *\n     * @param {string|impersonatedUser} impersonatedUser The impersonated User\n     * @param {string} database The database name\n     * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n     * @returns {RoutingTable} The routing table for the respective database\n     */\n    RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n        if (this._tables.has(database)) {\n            return this._tables.get(database);\n        }\n        return typeof defaultSupplier === 'function'\n            ? defaultSupplier()\n            : defaultSupplier;\n    };\n    /**\n     * Remove the routing table which is already expired\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.removeExpired = function () {\n        var _this = this;\n        return this._removeIf(function (value) {\n            return value.isExpiredFor(_this._routingTablePurgeDelay);\n        });\n    };\n    RoutingTableRegistry.prototype._forEach = function (apply) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), value = _d[1];\n                apply(value);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return this;\n    };\n    RoutingTableRegistry.prototype._remove = function (key) {\n        this._tables.delete(key);\n        return this;\n    };\n    RoutingTableRegistry.prototype._removeIf = function (predicate) {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (predicate(value)) {\n                    this._remove(key);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return this;\n    };\n    return RoutingTableRegistry;\n}());\nfunction _isFailFastError(error) {\n    return [\n        DATABASE_NOT_FOUND_CODE,\n        INVALID_BOOKMARK_CODE,\n        INVALID_BOOKMARK_MIXTURE_CODE,\n        INVALID_ARGUMENT_ERROR,\n        INVALID_REQUEST_ERROR,\n        STATEMENT_TYPE_ERROR,\n        NOT_AVAILABLE\n    ].includes(error.code);\n}\nfunction _isFailFastSecurityError(error) {\n    return error.code.startsWith('Neo.ClientError.Security.') &&\n        ![\n            AUTHORIZATION_EXPIRED_CODE\n        ].includes(error.code);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}