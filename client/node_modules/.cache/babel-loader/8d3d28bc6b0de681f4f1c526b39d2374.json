{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildNotificationsFromMetadata = exports.buildGqlStatusObjectFromMetadata = exports.polyfillNotification = exports.polyfillGqlStatusObject = exports.GqlStatusObject = exports.Notification = exports.notificationClassification = exports.notificationCategory = exports.notificationSeverityLevel = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar json = __importStar(require(\"./json\"));\nvar internal_1 = require(\"./internal\");\nvar gql_constants_1 = require(\"./gql-constants\");\nvar unknownGqlStatus = {\n  WARNING: {\n    gql_status: '01N42',\n    status_description: 'warn: unknown warning'\n  },\n  NO_DATA: {\n    gql_status: '02N42',\n    status_description: 'note: no data - unknown subcondition'\n  },\n  INFORMATION: {\n    gql_status: '03N42',\n    status_description: 'info: unknown notification'\n  },\n  ERROR: {\n    gql_status: '50N42',\n    status_description: 'error: general processing exception - unexpected error'\n  }\n};\n/**\n * @typedef {'WARNING' | 'INFORMATION' | 'UNKNOWN'} NotificationSeverityLevel\n */\n/**\n * Constants that represents the Severity level in the {@link Notification}\n */\nvar notificationSeverityLevel = {\n  WARNING: 'WARNING',\n  INFORMATION: 'INFORMATION',\n  UNKNOWN: 'UNKNOWN'\n};\nexports.notificationSeverityLevel = notificationSeverityLevel;\nObject.freeze(notificationSeverityLevel);\nvar severityLevels = Object.values(notificationSeverityLevel);\n/**\n * @typedef {'HINT' | 'UNRECOGNIZED' | 'UNSUPPORTED' |'PERFORMANCE' | 'TOPOLOGY' | 'SECURITY' | 'DEPRECATION' | 'GENERIC' | 'SCHEMA' | 'UNKNOWN' } NotificationCategory\n */\n/**\n * Constants that represents the Category in the {@link Notification}\n */\nvar notificationCategory = {\n  HINT: 'HINT',\n  UNRECOGNIZED: 'UNRECOGNIZED',\n  UNSUPPORTED: 'UNSUPPORTED',\n  PERFORMANCE: 'PERFORMANCE',\n  DEPRECATION: 'DEPRECATION',\n  TOPOLOGY: 'TOPOLOGY',\n  SECURITY: 'SECURITY',\n  GENERIC: 'GENERIC',\n  SCHEMA: 'SCHEMA',\n  UNKNOWN: 'UNKNOWN'\n};\nexports.notificationCategory = notificationCategory;\nObject.freeze(notificationCategory);\nvar categories = Object.values(notificationCategory);\n/**\n * @typedef {NotificationCategory} NotificationClassification\n * @experimental\n */\n/**\n * Constants that represents the Classification in the {@link GqlStatusObject}\n * @type {notificationCategory}\n * @experimental\n */\nvar notificationClassification = notificationCategory;\nexports.notificationClassification = notificationClassification;\n/**\n * Class for Cypher notifications\n * @access public\n */\nvar Notification = /** @class */function () {\n  /**\n   * Create a Notification instance\n   * @constructor\n   * @param {Object} notification - Object with notification data\n   */\n  function Notification(notification) {\n    /**\n     * The code\n     * @type {string}\n     * @public\n     */\n    this.code = notification.code;\n    /**\n     * The title\n     * @type {string}\n     * @public\n     */\n    this.title = notification.title;\n    /**\n     * The description\n     * @type {string}\n     * @public\n     */\n    this.description = notification.description;\n    /**\n     * The raw severity\n     *\n     * Use {@link Notification#rawSeverityLevel} for the raw value or {@link Notification#severityLevel} for an enumerated value.\n     *\n     * @type {string}\n     * @public\n     * @deprecated This property will be removed in 6.0.\n     */\n    this.severity = notification.severity;\n    /**\n     * The position which the notification had occur.\n     *\n     * @type {NotificationPosition}\n     * @public\n     */\n    this.position = _constructPosition(notification.position);\n    /**\n     * The severity level\n     *\n     * @type {NotificationSeverityLevel}\n     * @public\n     * @example\n     * const { summary } = await session.run(\"RETURN 1\")\n     *\n     * for (const notification of summary.notifications) {\n     *     switch(notification.severityLevel) {\n     *         case neo4j.notificationSeverityLevel.INFORMATION: // or simply 'INFORMATION'\n     *             console.info(`${notification.title} - ${notification.description}`)\n     *             break\n     *         case neo4j.notificationSeverityLevel.WARNING: // or simply 'WARNING'\n     *             console.warn(`${notification.title} - ${notification.description}`)\n     *             break\n     *         case neo4j.notificationSeverityLevel.UNKNOWN: // or simply 'UNKNOWN'\n     *         default:\n     *             // the raw info came from the server could be found at notification.rawSeverityLevel\n     *             console.log(`${notification.title} - ${notification.description}`)\n     *             break\n     *     }\n     * }\n     */\n    this.severityLevel = _asEnumerableSeverity(notification.severity);\n    /**\n     * The severity level returned by the server without any validation.\n     *\n     * @type {string}\n     * @public\n     */\n    this.rawSeverityLevel = notification.severity;\n    /**\n     * The category\n     *\n     * @type {NotificationCategory}\n     * @public\n     * @example\n     * const { summary } = await session.run(\"RETURN 1\")\n     *\n     * for (const notification of summary.notifications) {\n     *     switch(notification.category) {\n     *         case neo4j.notificationCategory.QUERY: // or simply 'QUERY'\n     *             console.info(`${notification.title} - ${notification.description}`)\n     *             break\n     *         case neo4j.notificationCategory.PERFORMANCE: // or simply 'PERFORMANCE'\n     *             console.warn(`${notification.title} - ${notification.description}`)\n     *             break\n     *         case neo4j.notificationCategory.UNKNOWN: // or simply 'UNKNOWN'\n     *         default:\n     *             // the raw info came from the server could be found at notification.rawCategory\n     *             console.log(`${notification.title} - ${notification.description}`)\n     *             break\n     *     }\n     * }\n     */\n    this.category = _asEnumerableClassification(notification.category);\n    /**\n     * The category returned by the server without any validation.\n     *\n     * @type {string|undefined}\n     * @public\n     */\n    this.rawCategory = notification.category;\n  }\n  return Notification;\n}();\nexports.Notification = Notification;\n/**\n * Representation for GqlStatusObject found when executing a query.\n * <p>\n * This object represents a status of query execution.\n * This status is a superset of {@link Notification}.\n *\n * @experimental\n * @public\n */\nvar GqlStatusObject = /** @class */function () {\n  /**\n   *\n   * @param rawGqlStatusObject\n   * @private\n   */\n  function GqlStatusObject(rawGqlStatusObject) {\n    var _a;\n    /**\n     * The GQLSTATUS\n     *\n     * @type {string}\n     * @public\n     */\n    this.gqlStatus = rawGqlStatusObject.gql_status;\n    /**\n     * The GQLSTATUS description\n     *\n     * @type {string}\n     * @public\n     */\n    this.statusDescription = rawGqlStatusObject.status_description;\n    /**\n     * The diagnostic record as it is.\n     *\n     * @type {object}\n     * @public\n     */\n    this.diagnosticRecord = (_a = rawGqlStatusObject.diagnostic_record) !== null && _a !== void 0 ? _a : {};\n    /**\n     * The position at which the notification had occurred.\n     *\n     * @type {NotificationPosition | undefined}\n     * @public\n     */\n    this.position = this.diagnosticRecord._position != null ? _constructPosition(this.diagnosticRecord._position) : undefined;\n    /**\n     * The severity\n     *\n     * @type {NotificationSeverityLevel}\n     * @public\n     * @example\n     * const { summary } = await session.run(\"RETURN 1\")\n     *\n     * for (const gqlStatusObject of summary.gqlStatusObjects) {\n     *     switch(gqlStatusObject.severity) {\n     *         case neo4j.notificationSeverityLevel.INFORMATION: // or simply 'INFORMATION'\n     *             console.info(gqlStatusObject.statusDescription)\n     *             break\n     *         case neo4j.notificationSeverityLevel.WARNING: // or simply 'WARNING'\n     *             console.warn(gqlStatusObject.statusDescription)\n     *             break\n     *         case neo4j.notificationSeverityLevel.UNKNOWN: // or simply 'UNKNOWN'\n     *         default:\n     *             // the raw info came from the server could be found at gqlStatusObject.rawSeverity\n     *             console.log(gqlStatusObject.statusDescription)\n     *             break\n     *     }\n     * }\n     */\n    this.severity = _asEnumerableSeverity(this.diagnosticRecord._severity);\n    /**\n     * The severity returned in the diagnostic record from the server without any validation.\n     *\n     * @type {string | undefined}\n     * @public\n     */\n    this.rawSeverity = this.diagnosticRecord._severity;\n    /**\n     * The classification\n     *\n     * @type {NotificationClassification}\n     * @public\n     * @example\n     * const { summary } = await session.run(\"RETURN 1\")\n     *\n     * for (const gqlStatusObject of summary.gqlStatusObjects) {\n     *     switch(gqlStatusObject.classification) {\n     *         case neo4j.notificationClassification.QUERY: // or simply 'QUERY'\n     *             console.info(gqlStatusObject.statusDescription)\n     *             break\n     *         case neo4j.notificationClassification.PERFORMANCE: // or simply 'PERFORMANCE'\n     *             console.warn(gqlStatusObject.statusDescription)\n     *             break\n     *         case neo4j.notificationClassification.UNKNOWN: // or simply 'UNKNOWN'\n     *         default:\n     *             // the raw info came from the server can be found at notification.rawCategory\n     *             console.log(gqlStatusObject.statusDescription)\n     *             break\n     *     }\n     * }\n     */\n    this.classification = _asEnumerableClassification(this.diagnosticRecord._classification);\n    /**\n     * The category returned by the server without any validation.\n     *\n     * @type {string|undefined}\n     * @public\n     */\n    this.rawClassification = this.diagnosticRecord._classification;\n    /**\n     * Indicates if this object represents a notification and it can be filtered using\n     * NotificationFilter.\n     *\n     * Only GqlStatusObject which is Notification has meaningful position, severity and\n     * classification.\n     *\n     * @type {boolean}\n     * @public\n     */\n    this.isNotification = rawGqlStatusObject.neo4j_code != null;\n    Object.freeze(this);\n  }\n  Object.defineProperty(GqlStatusObject.prototype, \"diagnosticRecordAsJsonString\", {\n    /**\n     * The json string representation of the diagnostic record.\n     * The goal of this method is provide a serialized object for human inspection.\n     *\n     * @type {string}\n     * @public\n     */\n    get: function () {\n      return json.stringify(this.diagnosticRecord, {\n        useCustomToString: true\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return GqlStatusObject;\n}();\nexports.GqlStatusObject = GqlStatusObject;\n/**\n *\n * @private\n * @param status\n * @returns {Notification|undefined}\n */\nfunction polyfillNotification(status) {\n  var _a, _b, _c;\n  // Non notification status should have neo4j_code\n  if (status.neo4j_code == null) {\n    return undefined;\n  }\n  return new Notification({\n    code: status.neo4j_code,\n    title: status.title,\n    description: status.description,\n    severity: (_a = status.diagnostic_record) === null || _a === void 0 ? void 0 : _a._severity,\n    category: (_b = status.diagnostic_record) === null || _b === void 0 ? void 0 : _b._classification,\n    position: (_c = status.diagnostic_record) === null || _c === void 0 ? void 0 : _c._position\n  });\n}\nexports.polyfillNotification = polyfillNotification;\n/**\n * @private\n * @param notification\n * @returns {GqlStatusObject}\n */\nfunction polyfillGqlStatusObject(notification) {\n  var _a;\n  var defaultStatus = notification.severity === notificationSeverityLevel.WARNING ? unknownGqlStatus.WARNING : unknownGqlStatus.INFORMATION;\n  var polyfilledRawObj = {\n    gql_status: defaultStatus.gql_status,\n    status_description: (_a = notification.description) !== null && _a !== void 0 ? _a : defaultStatus.status_description,\n    neo4j_code: notification.code,\n    title: notification.title,\n    diagnostic_record: __assign({}, gql_constants_1.rawPolyfilledDiagnosticRecord)\n  };\n  if (notification.severity != null) {\n    polyfilledRawObj.diagnostic_record._severity = notification.severity;\n  }\n  if (notification.category != null) {\n    polyfilledRawObj.diagnostic_record._classification = notification.category;\n  }\n  if (notification.position != null) {\n    polyfilledRawObj.diagnostic_record._position = notification.position;\n  }\n  return new GqlStatusObject(polyfilledRawObj);\n}\nexports.polyfillGqlStatusObject = polyfillGqlStatusObject;\n/**\n * This objects are used for polyfilling the first status on the status list\n *\n * @private\n */\nvar staticGqlStatusObjects = {\n  SUCCESS: new GqlStatusObject({\n    gql_status: '00000',\n    status_description: 'note: successful completion',\n    diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n  }),\n  NO_DATA: new GqlStatusObject({\n    gql_status: '02000',\n    status_description: 'note: no data',\n    diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n  }),\n  NO_DATA_UNKNOWN_SUBCONDITION: new GqlStatusObject(__assign(__assign({}, unknownGqlStatus.NO_DATA), {\n    diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n  })),\n  OMITTED_RESULT: new GqlStatusObject({\n    gql_status: '00001',\n    status_description: 'note: successful completion - omitted result',\n    diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n  })\n};\nObject.freeze(staticGqlStatusObjects);\n/**\n *\n * @private\n * @param metadata\n * @returns\n */\nfunction buildGqlStatusObjectFromMetadata(metadata) {\n  var _a, _b;\n  function getGqlStatusObjectFromStreamSummary(summary) {\n    if ((summary === null || summary === void 0 ? void 0 : summary.have_records_streamed) === true) {\n      return staticGqlStatusObjects.SUCCESS;\n    }\n    if ((summary === null || summary === void 0 ? void 0 : summary.has_keys) === false) {\n      return staticGqlStatusObjects.OMITTED_RESULT;\n    }\n    if ((summary === null || summary === void 0 ? void 0 : summary.pulled) === true) {\n      return staticGqlStatusObjects.NO_DATA;\n    }\n    return staticGqlStatusObjects.NO_DATA_UNKNOWN_SUBCONDITION;\n  }\n  if (metadata.statuses != null) {\n    return metadata.statuses.map(function (status) {\n      return new GqlStatusObject(status);\n    });\n  }\n  var clientGenerated = getGqlStatusObjectFromStreamSummary(metadata.stream_summary);\n  var polyfilledObjects = __spreadArray([clientGenerated], __read((_b = (_a = metadata.notifications) === null || _a === void 0 ? void 0 : _a.map(polyfillGqlStatusObject)) !== null && _b !== void 0 ? _b : []), false);\n  return polyfilledObjects.sort(function (a, b) {\n    return calculateWeight(a) - calculateWeight(b);\n  });\n}\nexports.buildGqlStatusObjectFromMetadata = buildGqlStatusObjectFromMetadata;\nvar gqlStatusWeightByClass = Object.freeze({\n  '02': 0,\n  '01': 1,\n  '00': 2\n});\n/**\n * GqlStatus weight\n *\n * @private\n */\nfunction calculateWeight(gqlStatusObject) {\n  var _a, _b;\n  var gqlClass = (_a = gqlStatusObject.gqlStatus) === null || _a === void 0 ? void 0 : _a.slice(0, 2);\n  // @ts-expect-error\n  return (_b = gqlStatusWeightByClass[gqlClass]) !== null && _b !== void 0 ? _b : 9999;\n}\n/**\n *\n * @private\n * @param metadata\n * @returns\n */\nfunction buildNotificationsFromMetadata(metadata) {\n  if (metadata.notifications != null) {\n    return metadata.notifications.map(function (n) {\n      return new Notification(n);\n    });\n  }\n  if (metadata.statuses != null) {\n    return metadata.statuses.map(polyfillNotification).filter(function (n) {\n      return n != null;\n    });\n  }\n  return [];\n}\nexports.buildNotificationsFromMetadata = buildNotificationsFromMetadata;\n/**\n *\n * @private\n * @param pos\n * @returns {NotificationPosition}\n */\nfunction _constructPosition(pos) {\n  if (pos == null) {\n    return {};\n  }\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  return {\n    offset: internal_1.util.toNumber(pos.offset),\n    line: internal_1.util.toNumber(pos.line),\n    column: internal_1.util.toNumber(pos.column)\n  };\n  /* eslint-enable @typescript-eslint/no-non-null-assertion */\n}\nfunction _asEnumerableSeverity(severity) {\n  return severityLevels.includes(severity) ? severity : notificationSeverityLevel.UNKNOWN;\n}\nfunction _asEnumerableClassification(classification) {\n  return categories.includes(classification) ? classification : notificationClassification.UNKNOWN;\n}\nexports.default = Notification;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__read","Symbol","iterator","r","ar","e","next","done","push","error","__spreadArray","to","from","pack","l","Array","slice","concat","exports","buildNotificationsFromMetadata","buildGqlStatusObjectFromMetadata","polyfillNotification","polyfillGqlStatusObject","GqlStatusObject","Notification","notificationClassification","notificationCategory","notificationSeverityLevel","json","require","internal_1","gql_constants_1","unknownGqlStatus","WARNING","gql_status","status_description","NO_DATA","INFORMATION","ERROR","UNKNOWN","freeze","severityLevels","values","HINT","UNRECOGNIZED","UNSUPPORTED","PERFORMANCE","DEPRECATION","TOPOLOGY","SECURITY","GENERIC","SCHEMA","categories","notification","code","title","description","severity","position","_constructPosition","severityLevel","_asEnumerableSeverity","rawSeverityLevel","category","_asEnumerableClassification","rawCategory","rawGqlStatusObject","_a","gqlStatus","statusDescription","diagnosticRecord","diagnostic_record","_position","_severity","rawSeverity","classification","_classification","rawClassification","isNotification","neo4j_code","stringify","useCustomToString","status","_b","_c","defaultStatus","polyfilledRawObj","rawPolyfilledDiagnosticRecord","staticGqlStatusObjects","SUCCESS","NO_DATA_UNKNOWN_SUBCONDITION","OMITTED_RESULT","metadata","getGqlStatusObjectFromStreamSummary","summary","have_records_streamed","has_keys","pulled","statuses","map","clientGenerated","stream_summary","polyfilledObjects","notifications","sort","a","b","calculateWeight","gqlStatusWeightByClass","gqlStatusObject","gqlClass","filter","pos","offset","util","toNumber","line","column","includes","default"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver-core/lib/notification.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNotificationsFromMetadata = exports.buildGqlStatusObjectFromMetadata = exports.polyfillNotification = exports.polyfillGqlStatusObject = exports.GqlStatusObject = exports.Notification = exports.notificationClassification = exports.notificationCategory = exports.notificationSeverityLevel = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar json = __importStar(require(\"./json\"));\nvar internal_1 = require(\"./internal\");\nvar gql_constants_1 = require(\"./gql-constants\");\nvar unknownGqlStatus = {\n    WARNING: {\n        gql_status: '01N42',\n        status_description: 'warn: unknown warning'\n    },\n    NO_DATA: {\n        gql_status: '02N42',\n        status_description: 'note: no data - unknown subcondition'\n    },\n    INFORMATION: {\n        gql_status: '03N42',\n        status_description: 'info: unknown notification'\n    },\n    ERROR: {\n        gql_status: '50N42',\n        status_description: 'error: general processing exception - unexpected error'\n    }\n};\n/**\n * @typedef {'WARNING' | 'INFORMATION' | 'UNKNOWN'} NotificationSeverityLevel\n */\n/**\n * Constants that represents the Severity level in the {@link Notification}\n */\nvar notificationSeverityLevel = {\n    WARNING: 'WARNING',\n    INFORMATION: 'INFORMATION',\n    UNKNOWN: 'UNKNOWN'\n};\nexports.notificationSeverityLevel = notificationSeverityLevel;\nObject.freeze(notificationSeverityLevel);\nvar severityLevels = Object.values(notificationSeverityLevel);\n/**\n * @typedef {'HINT' | 'UNRECOGNIZED' | 'UNSUPPORTED' |'PERFORMANCE' | 'TOPOLOGY' | 'SECURITY' | 'DEPRECATION' | 'GENERIC' | 'SCHEMA' | 'UNKNOWN' } NotificationCategory\n */\n/**\n * Constants that represents the Category in the {@link Notification}\n */\nvar notificationCategory = {\n    HINT: 'HINT',\n    UNRECOGNIZED: 'UNRECOGNIZED',\n    UNSUPPORTED: 'UNSUPPORTED',\n    PERFORMANCE: 'PERFORMANCE',\n    DEPRECATION: 'DEPRECATION',\n    TOPOLOGY: 'TOPOLOGY',\n    SECURITY: 'SECURITY',\n    GENERIC: 'GENERIC',\n    SCHEMA: 'SCHEMA',\n    UNKNOWN: 'UNKNOWN'\n};\nexports.notificationCategory = notificationCategory;\nObject.freeze(notificationCategory);\nvar categories = Object.values(notificationCategory);\n/**\n * @typedef {NotificationCategory} NotificationClassification\n * @experimental\n */\n/**\n * Constants that represents the Classification in the {@link GqlStatusObject}\n * @type {notificationCategory}\n * @experimental\n */\nvar notificationClassification = notificationCategory;\nexports.notificationClassification = notificationClassification;\n/**\n * Class for Cypher notifications\n * @access public\n */\nvar Notification = /** @class */ (function () {\n    /**\n     * Create a Notification instance\n     * @constructor\n     * @param {Object} notification - Object with notification data\n     */\n    function Notification(notification) {\n        /**\n         * The code\n         * @type {string}\n         * @public\n         */\n        this.code = notification.code;\n        /**\n         * The title\n         * @type {string}\n         * @public\n         */\n        this.title = notification.title;\n        /**\n         * The description\n         * @type {string}\n         * @public\n         */\n        this.description = notification.description;\n        /**\n         * The raw severity\n         *\n         * Use {@link Notification#rawSeverityLevel} for the raw value or {@link Notification#severityLevel} for an enumerated value.\n         *\n         * @type {string}\n         * @public\n         * @deprecated This property will be removed in 6.0.\n         */\n        this.severity = notification.severity;\n        /**\n         * The position which the notification had occur.\n         *\n         * @type {NotificationPosition}\n         * @public\n         */\n        this.position = _constructPosition(notification.position);\n        /**\n         * The severity level\n         *\n         * @type {NotificationSeverityLevel}\n         * @public\n         * @example\n         * const { summary } = await session.run(\"RETURN 1\")\n         *\n         * for (const notification of summary.notifications) {\n         *     switch(notification.severityLevel) {\n         *         case neo4j.notificationSeverityLevel.INFORMATION: // or simply 'INFORMATION'\n         *             console.info(`${notification.title} - ${notification.description}`)\n         *             break\n         *         case neo4j.notificationSeverityLevel.WARNING: // or simply 'WARNING'\n         *             console.warn(`${notification.title} - ${notification.description}`)\n         *             break\n         *         case neo4j.notificationSeverityLevel.UNKNOWN: // or simply 'UNKNOWN'\n         *         default:\n         *             // the raw info came from the server could be found at notification.rawSeverityLevel\n         *             console.log(`${notification.title} - ${notification.description}`)\n         *             break\n         *     }\n         * }\n         */\n        this.severityLevel = _asEnumerableSeverity(notification.severity);\n        /**\n         * The severity level returned by the server without any validation.\n         *\n         * @type {string}\n         * @public\n         */\n        this.rawSeverityLevel = notification.severity;\n        /**\n         * The category\n         *\n         * @type {NotificationCategory}\n         * @public\n         * @example\n         * const { summary } = await session.run(\"RETURN 1\")\n         *\n         * for (const notification of summary.notifications) {\n         *     switch(notification.category) {\n         *         case neo4j.notificationCategory.QUERY: // or simply 'QUERY'\n         *             console.info(`${notification.title} - ${notification.description}`)\n         *             break\n         *         case neo4j.notificationCategory.PERFORMANCE: // or simply 'PERFORMANCE'\n         *             console.warn(`${notification.title} - ${notification.description}`)\n         *             break\n         *         case neo4j.notificationCategory.UNKNOWN: // or simply 'UNKNOWN'\n         *         default:\n         *             // the raw info came from the server could be found at notification.rawCategory\n         *             console.log(`${notification.title} - ${notification.description}`)\n         *             break\n         *     }\n         * }\n         */\n        this.category = _asEnumerableClassification(notification.category);\n        /**\n         * The category returned by the server without any validation.\n         *\n         * @type {string|undefined}\n         * @public\n         */\n        this.rawCategory = notification.category;\n    }\n    return Notification;\n}());\nexports.Notification = Notification;\n/**\n * Representation for GqlStatusObject found when executing a query.\n * <p>\n * This object represents a status of query execution.\n * This status is a superset of {@link Notification}.\n *\n * @experimental\n * @public\n */\nvar GqlStatusObject = /** @class */ (function () {\n    /**\n     *\n     * @param rawGqlStatusObject\n     * @private\n     */\n    function GqlStatusObject(rawGqlStatusObject) {\n        var _a;\n        /**\n         * The GQLSTATUS\n         *\n         * @type {string}\n         * @public\n         */\n        this.gqlStatus = rawGqlStatusObject.gql_status;\n        /**\n         * The GQLSTATUS description\n         *\n         * @type {string}\n         * @public\n         */\n        this.statusDescription = rawGqlStatusObject.status_description;\n        /**\n         * The diagnostic record as it is.\n         *\n         * @type {object}\n         * @public\n         */\n        this.diagnosticRecord = (_a = rawGqlStatusObject.diagnostic_record) !== null && _a !== void 0 ? _a : {};\n        /**\n         * The position at which the notification had occurred.\n         *\n         * @type {NotificationPosition | undefined}\n         * @public\n         */\n        this.position = this.diagnosticRecord._position != null ? _constructPosition(this.diagnosticRecord._position) : undefined;\n        /**\n         * The severity\n         *\n         * @type {NotificationSeverityLevel}\n         * @public\n         * @example\n         * const { summary } = await session.run(\"RETURN 1\")\n         *\n         * for (const gqlStatusObject of summary.gqlStatusObjects) {\n         *     switch(gqlStatusObject.severity) {\n         *         case neo4j.notificationSeverityLevel.INFORMATION: // or simply 'INFORMATION'\n         *             console.info(gqlStatusObject.statusDescription)\n         *             break\n         *         case neo4j.notificationSeverityLevel.WARNING: // or simply 'WARNING'\n         *             console.warn(gqlStatusObject.statusDescription)\n         *             break\n         *         case neo4j.notificationSeverityLevel.UNKNOWN: // or simply 'UNKNOWN'\n         *         default:\n         *             // the raw info came from the server could be found at gqlStatusObject.rawSeverity\n         *             console.log(gqlStatusObject.statusDescription)\n         *             break\n         *     }\n         * }\n         */\n        this.severity = _asEnumerableSeverity(this.diagnosticRecord._severity);\n        /**\n         * The severity returned in the diagnostic record from the server without any validation.\n         *\n         * @type {string | undefined}\n         * @public\n         */\n        this.rawSeverity = this.diagnosticRecord._severity;\n        /**\n         * The classification\n         *\n         * @type {NotificationClassification}\n         * @public\n         * @example\n         * const { summary } = await session.run(\"RETURN 1\")\n         *\n         * for (const gqlStatusObject of summary.gqlStatusObjects) {\n         *     switch(gqlStatusObject.classification) {\n         *         case neo4j.notificationClassification.QUERY: // or simply 'QUERY'\n         *             console.info(gqlStatusObject.statusDescription)\n         *             break\n         *         case neo4j.notificationClassification.PERFORMANCE: // or simply 'PERFORMANCE'\n         *             console.warn(gqlStatusObject.statusDescription)\n         *             break\n         *         case neo4j.notificationClassification.UNKNOWN: // or simply 'UNKNOWN'\n         *         default:\n         *             // the raw info came from the server can be found at notification.rawCategory\n         *             console.log(gqlStatusObject.statusDescription)\n         *             break\n         *     }\n         * }\n         */\n        this.classification = _asEnumerableClassification(this.diagnosticRecord._classification);\n        /**\n         * The category returned by the server without any validation.\n         *\n         * @type {string|undefined}\n         * @public\n         */\n        this.rawClassification = this.diagnosticRecord._classification;\n        /**\n         * Indicates if this object represents a notification and it can be filtered using\n         * NotificationFilter.\n         *\n         * Only GqlStatusObject which is Notification has meaningful position, severity and\n         * classification.\n         *\n         * @type {boolean}\n         * @public\n         */\n        this.isNotification = rawGqlStatusObject.neo4j_code != null;\n        Object.freeze(this);\n    }\n    Object.defineProperty(GqlStatusObject.prototype, \"diagnosticRecordAsJsonString\", {\n        /**\n         * The json string representation of the diagnostic record.\n         * The goal of this method is provide a serialized object for human inspection.\n         *\n         * @type {string}\n         * @public\n         */\n        get: function () {\n            return json.stringify(this.diagnosticRecord, { useCustomToString: true });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return GqlStatusObject;\n}());\nexports.GqlStatusObject = GqlStatusObject;\n/**\n *\n * @private\n * @param status\n * @returns {Notification|undefined}\n */\nfunction polyfillNotification(status) {\n    var _a, _b, _c;\n    // Non notification status should have neo4j_code\n    if (status.neo4j_code == null) {\n        return undefined;\n    }\n    return new Notification({\n        code: status.neo4j_code,\n        title: status.title,\n        description: status.description,\n        severity: (_a = status.diagnostic_record) === null || _a === void 0 ? void 0 : _a._severity,\n        category: (_b = status.diagnostic_record) === null || _b === void 0 ? void 0 : _b._classification,\n        position: (_c = status.diagnostic_record) === null || _c === void 0 ? void 0 : _c._position\n    });\n}\nexports.polyfillNotification = polyfillNotification;\n/**\n * @private\n * @param notification\n * @returns {GqlStatusObject}\n */\nfunction polyfillGqlStatusObject(notification) {\n    var _a;\n    var defaultStatus = notification.severity === notificationSeverityLevel.WARNING ? unknownGqlStatus.WARNING : unknownGqlStatus.INFORMATION;\n    var polyfilledRawObj = {\n        gql_status: defaultStatus.gql_status,\n        status_description: (_a = notification.description) !== null && _a !== void 0 ? _a : defaultStatus.status_description,\n        neo4j_code: notification.code,\n        title: notification.title,\n        diagnostic_record: __assign({}, gql_constants_1.rawPolyfilledDiagnosticRecord)\n    };\n    if (notification.severity != null) {\n        polyfilledRawObj.diagnostic_record._severity = notification.severity;\n    }\n    if (notification.category != null) {\n        polyfilledRawObj.diagnostic_record._classification = notification.category;\n    }\n    if (notification.position != null) {\n        polyfilledRawObj.diagnostic_record._position = notification.position;\n    }\n    return new GqlStatusObject(polyfilledRawObj);\n}\nexports.polyfillGqlStatusObject = polyfillGqlStatusObject;\n/**\n * This objects are used for polyfilling the first status on the status list\n *\n * @private\n */\nvar staticGqlStatusObjects = {\n    SUCCESS: new GqlStatusObject({\n        gql_status: '00000',\n        status_description: 'note: successful completion',\n        diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n    }),\n    NO_DATA: new GqlStatusObject({\n        gql_status: '02000',\n        status_description: 'note: no data',\n        diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n    }),\n    NO_DATA_UNKNOWN_SUBCONDITION: new GqlStatusObject(__assign(__assign({}, unknownGqlStatus.NO_DATA), { diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord })),\n    OMITTED_RESULT: new GqlStatusObject({\n        gql_status: '00001',\n        status_description: 'note: successful completion - omitted result',\n        diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\n    })\n};\nObject.freeze(staticGqlStatusObjects);\n/**\n *\n * @private\n * @param metadata\n * @returns\n */\nfunction buildGqlStatusObjectFromMetadata(metadata) {\n    var _a, _b;\n    function getGqlStatusObjectFromStreamSummary(summary) {\n        if ((summary === null || summary === void 0 ? void 0 : summary.have_records_streamed) === true) {\n            return staticGqlStatusObjects.SUCCESS;\n        }\n        if ((summary === null || summary === void 0 ? void 0 : summary.has_keys) === false) {\n            return staticGqlStatusObjects.OMITTED_RESULT;\n        }\n        if ((summary === null || summary === void 0 ? void 0 : summary.pulled) === true) {\n            return staticGqlStatusObjects.NO_DATA;\n        }\n        return staticGqlStatusObjects.NO_DATA_UNKNOWN_SUBCONDITION;\n    }\n    if (metadata.statuses != null) {\n        return metadata.statuses.map(function (status) { return new GqlStatusObject(status); });\n    }\n    var clientGenerated = getGqlStatusObjectFromStreamSummary(metadata.stream_summary);\n    var polyfilledObjects = __spreadArray([clientGenerated], __read(((_b = (_a = metadata.notifications) === null || _a === void 0 ? void 0 : _a.map(polyfillGqlStatusObject)) !== null && _b !== void 0 ? _b : [])), false);\n    return polyfilledObjects.sort(function (a, b) { return calculateWeight(a) - calculateWeight(b); });\n}\nexports.buildGqlStatusObjectFromMetadata = buildGqlStatusObjectFromMetadata;\nvar gqlStatusWeightByClass = Object.freeze({\n    '02': 0,\n    '01': 1,\n    '00': 2\n});\n/**\n * GqlStatus weight\n *\n * @private\n */\nfunction calculateWeight(gqlStatusObject) {\n    var _a, _b;\n    var gqlClass = (_a = gqlStatusObject.gqlStatus) === null || _a === void 0 ? void 0 : _a.slice(0, 2);\n    // @ts-expect-error\n    return (_b = gqlStatusWeightByClass[gqlClass]) !== null && _b !== void 0 ? _b : 9999;\n}\n/**\n *\n * @private\n * @param metadata\n * @returns\n */\nfunction buildNotificationsFromMetadata(metadata) {\n    if (metadata.notifications != null) {\n        return metadata.notifications.map(function (n) { return new Notification(n); });\n    }\n    if (metadata.statuses != null) {\n        return metadata.statuses.map(polyfillNotification).filter(function (n) { return n != null; });\n    }\n    return [];\n}\nexports.buildNotificationsFromMetadata = buildNotificationsFromMetadata;\n/**\n *\n * @private\n * @param pos\n * @returns {NotificationPosition}\n */\nfunction _constructPosition(pos) {\n    if (pos == null) {\n        return {};\n    }\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    return {\n        offset: internal_1.util.toNumber(pos.offset),\n        line: internal_1.util.toNumber(pos.line),\n        column: internal_1.util.toNumber(pos.column)\n    };\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n}\nfunction _asEnumerableSeverity(severity) {\n    return severityLevels.includes(severity)\n        ? severity\n        : notificationSeverityLevel.UNKNOWN;\n}\nfunction _asEnumerableClassification(classification) {\n    return categories.includes(classification)\n        ? classification\n        : notificationClassification.UNKNOWN;\n}\nexports.default = Notification;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMb,MAAM,CAACc,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5B,IAAIG,IAAI,GAAGpB,MAAM,CAACqB,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;EAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACM,UAAU,GAAGF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,YAAY,CAAC,EAAE;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAI;MAAEC,GAAG,EAAE,SAAAA,CAAA,EAAW;QAAE,OAAOV,CAAC,CAACC,CAAC,CAAC;MAAE;IAAE,CAAC;EAC/D;EACAjB,MAAM,CAAC2B,cAAc,CAACZ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;AACtC,CAAC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIW,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAM5B,MAAM,CAACc,MAAM,GAAI,UAASC,CAAC,EAAEc,CAAC,EAAE;EAC3F7B,MAAM,CAAC2B,cAAc,CAACZ,CAAC,EAAE,SAAS,EAAE;IAAEU,UAAU,EAAE,IAAI;IAAEK,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAASd,CAAC,EAAEc,CAAC,EAAE;EAChBd,CAAC,CAAC,SAAS,CAAC,GAAGc,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAU,EAAE,OAAOU,GAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIf,CAAC,IAAIe,GAAG,EAAE,IAAIf,CAAC,KAAK,SAAS,IAAIjB,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACqB,GAAG,EAAEf,CAAC,CAAC,EAAEJ,eAAe,CAACoB,MAAM,EAAED,GAAG,EAAEf,CAAC,CAAC;EACxIW,kBAAkB,CAACK,MAAM,EAAED,GAAG,CAAC;EAC/B,OAAOC,MAAM;AACjB,CAAC;AACD,IAAIC,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUnB,CAAC,EAAEV,CAAC,EAAE;EAClD,IAAIW,CAAC,GAAG,OAAOmB,MAAM,KAAK,UAAU,IAAIpB,CAAC,CAACoB,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACpB,CAAC,EAAE,OAAOD,CAAC;EAChB,IAAIX,CAAC,GAAGY,CAAC,CAACL,IAAI,CAACI,CAAC,CAAC;IAAEsB,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAAClC,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACgC,CAAC,GAAGjC,CAAC,CAACoC,IAAI,CAAC,CAAC,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACP,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOa,KAAK,EAAE;IAAEJ,CAAC,GAAG;MAAEI,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIN,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKzB,CAAC,GAAGZ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEY,CAAC,CAACL,IAAI,CAACP,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAImC,CAAC,EAAE,MAAMA,CAAC,CAACI,KAAK;IAAE;EACpC;EACA,OAAOL,EAAE;AACb,CAAC;AACD,IAAIM,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIzC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAE4C,CAAC,GAAGF,IAAI,CAACvC,MAAM,EAAE+B,EAAE,EAAElC,CAAC,GAAG4C,CAAC,EAAE5C,CAAC,EAAE,EAAE;IACjF,IAAIkC,EAAE,IAAI,EAAElC,CAAC,IAAI0C,IAAI,CAAC,EAAE;MACpB,IAAI,CAACR,EAAE,EAAEA,EAAE,GAAGW,KAAK,CAACxC,SAAS,CAACyC,KAAK,CAACvC,IAAI,CAACmC,IAAI,EAAE,CAAC,EAAE1C,CAAC,CAAC;MACpDkC,EAAE,CAAClC,CAAC,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,CAAC;IACnB;EACJ;EACA,OAAOyC,EAAE,CAACM,MAAM,CAACb,EAAE,IAAIW,KAAK,CAACxC,SAAS,CAACyC,KAAK,CAACvC,IAAI,CAACmC,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD9C,MAAM,CAAC2B,cAAc,CAACyB,OAAO,EAAE,YAAY,EAAE;EAAEtB,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DsB,OAAO,CAACC,8BAA8B,GAAGD,OAAO,CAACE,gCAAgC,GAAGF,OAAO,CAACG,oBAAoB,GAAGH,OAAO,CAACI,uBAAuB,GAAGJ,OAAO,CAACK,eAAe,GAAGL,OAAO,CAACM,YAAY,GAAGN,OAAO,CAACO,0BAA0B,GAAGP,OAAO,CAACQ,oBAAoB,GAAGR,OAAO,CAACS,yBAAyB,GAAG,KAAK,CAAC;AACpT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAG/B,YAAY,CAACgC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1C,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIE,eAAe,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAChD,IAAIG,gBAAgB,GAAG;EACnBC,OAAO,EAAE;IACLC,UAAU,EAAE,OAAO;IACnBC,kBAAkB,EAAE;EACxB,CAAC;EACDC,OAAO,EAAE;IACLF,UAAU,EAAE,OAAO;IACnBC,kBAAkB,EAAE;EACxB,CAAC;EACDE,WAAW,EAAE;IACTH,UAAU,EAAE,OAAO;IACnBC,kBAAkB,EAAE;EACxB,CAAC;EACDG,KAAK,EAAE;IACHJ,UAAU,EAAE,OAAO;IACnBC,kBAAkB,EAAE;EACxB;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIR,yBAAyB,GAAG;EAC5BM,OAAO,EAAE,SAAS;EAClBI,WAAW,EAAE,aAAa;EAC1BE,OAAO,EAAE;AACb,CAAC;AACDrB,OAAO,CAACS,yBAAyB,GAAGA,yBAAyB;AAC7D7D,MAAM,CAAC0E,MAAM,CAACb,yBAAyB,CAAC;AACxC,IAAIc,cAAc,GAAG3E,MAAM,CAAC4E,MAAM,CAACf,yBAAyB,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,oBAAoB,GAAG;EACvBiB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,cAAc;EAC5BC,WAAW,EAAE,aAAa;EAC1BC,WAAW,EAAE,aAAa;EAC1BC,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBZ,OAAO,EAAE;AACb,CAAC;AACDrB,OAAO,CAACQ,oBAAoB,GAAGA,oBAAoB;AACnD5D,MAAM,CAAC0E,MAAM,CAACd,oBAAoB,CAAC;AACnC,IAAI0B,UAAU,GAAGtF,MAAM,CAAC4E,MAAM,CAAChB,oBAAoB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,0BAA0B,GAAGC,oBAAoB;AACrDR,OAAO,CAACO,0BAA0B,GAAGA,0BAA0B;AAC/D;AACA;AACA;AACA;AACA,IAAID,YAAY,GAAG,aAAe,YAAY;EAC1C;AACJ;AACA;AACA;AACA;EACI,SAASA,YAAYA,CAAC6B,YAAY,EAAE;IAChC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAGD,YAAY,CAACC,IAAI;IAC7B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,KAAK,GAAGF,YAAY,CAACE,KAAK;IAC/B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,WAAW,GAAGH,YAAY,CAACG,WAAW;IAC3C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAGJ,YAAY,CAACI,QAAQ;IACrC;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAGC,kBAAkB,CAACN,YAAY,CAACK,QAAQ,CAAC;IACzD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACE,aAAa,GAAGC,qBAAqB,CAACR,YAAY,CAACI,QAAQ,CAAC;IACjE;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACK,gBAAgB,GAAGT,YAAY,CAACI,QAAQ;IAC7C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACM,QAAQ,GAAGC,2BAA2B,CAACX,YAAY,CAACU,QAAQ,CAAC;IAClE;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACE,WAAW,GAAGZ,YAAY,CAACU,QAAQ;EAC5C;EACA,OAAOvC,YAAY;AACvB,CAAC,CAAC,CAAE;AACJN,OAAO,CAACM,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,eAAe,GAAG,aAAe,YAAY;EAC7C;AACJ;AACA;AACA;AACA;EACI,SAASA,eAAeA,CAAC2C,kBAAkB,EAAE;IACzC,IAAIC,EAAE;IACN;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAGF,kBAAkB,CAAChC,UAAU;IAC9C;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACmC,iBAAiB,GAAGH,kBAAkB,CAAC/B,kBAAkB;IAC9D;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACmC,gBAAgB,GAAG,CAACH,EAAE,GAAGD,kBAAkB,CAACK,iBAAiB,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;IACvG;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACY,gBAAgB,CAACE,SAAS,IAAI,IAAI,GAAGb,kBAAkB,CAAC,IAAI,CAACW,gBAAgB,CAACE,SAAS,CAAC,GAAGvF,SAAS;IACzH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACwE,QAAQ,GAAGI,qBAAqB,CAAC,IAAI,CAACS,gBAAgB,CAACG,SAAS,CAAC;IACtE;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,gBAAgB,CAACG,SAAS;IAClD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"script"}