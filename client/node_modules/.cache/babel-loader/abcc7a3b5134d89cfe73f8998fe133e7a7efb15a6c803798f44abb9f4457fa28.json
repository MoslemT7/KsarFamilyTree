{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChannelConnection = void 0;\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar connection_1 = __importDefault(require(\"./connection\"));\nvar bolt_1 = __importDefault(require(\"../bolt\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @param {clientCertificate} clientCertificate - configured client certificate\n * @param ssrCallback - callback function used to update the counts of ssr enabled and disabled connections\n * @param createChannel - function taking a channelConfig object and creating a channel with it\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, clientCertificate, serversideRouting, ssrCallback, createChannel) {\n  if (serversideRouting === void 0) {\n    serversideRouting = null;\n  }\n  if (createChannel === void 0) {\n    createChannel = function (channelConfig) {\n      return new channel_1.Channel(channelConfig);\n    };\n  }\n  var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode(), clientCertificate);\n  var channel = createChannel(channelConfig);\n  return bolt_1.default.handshake(channel, log).then(function (_a) {\n    var version = _a.protocolVersion,\n      consumeRemainingBuffer = _a.consumeRemainingBuffer;\n    var chunker = new channel_1.Chunker(channel);\n    var dechunker = new channel_1.Dechunker();\n    var createProtocol = function (conn) {\n      return bolt_1.default.create({\n        version: version,\n        channel: channel,\n        chunker: chunker,\n        dechunker: dechunker,\n        disableLosslessIntegers: config.disableLosslessIntegers,\n        useBigInt: config.useBigInt,\n        serversideRouting: serversideRouting,\n        server: conn.server,\n        log: conn.logger,\n        observer: {\n          onObserversCountChange: conn._handleOngoingRequestsNumberChange.bind(conn),\n          onError: conn._handleFatalError.bind(conn),\n          onFailure: conn._resetOnFailure.bind(conn),\n          onProtocolError: conn._handleProtocolError.bind(conn),\n          onErrorApplyTransformation: function (error) {\n            return conn.handleAndTransformError(error, conn._address);\n          }\n        }\n      });\n    };\n    var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, config.notificationFilter, createProtocol, config.telemetryDisabled, ssrCallback);\n    // forward all pending bytes to the dechunker\n    consumeRemainingBuffer(function (buffer) {\n      return dechunker.write(buffer);\n    });\n    return connection;\n  }).catch(function (reason) {\n    return channel.close().then(function () {\n      throw reason;\n    });\n  });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */function (_super) {\n  __extends(ChannelConnection, _super);\n  /**\n   * @constructor\n   * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n   * @param {ConnectionErrorHandler} errorHandler the error handler.\n   * @param {ServerAddress} address - the server address to connect to.\n   * @param {Logger} log - the configured logger.\n   * @param {boolean} disableLosslessIntegers - if this connection should convert all received integers to native JS numbers.\n   * @param {Chunker} chunker - the chunker\n   * @param protocolSupplier - Bolt protocol supplier\n   * @param {boolean} telemetryDisabled - wether telemetry has been disabled in driver config.\n   * @param ssrCallback - callback function used to update the counts of ssr enabled and disabled connections.\n   */\n  function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker,\n  // to be removed,\n  notificationFilter, protocolSupplier, telemetryDisabled, ssrCallback) {\n    if (disableLosslessIntegers === void 0) {\n      disableLosslessIntegers = false;\n    }\n    if (serversideRouting === void 0) {\n      serversideRouting = null;\n    }\n    if (ssrCallback === void 0) {\n      ssrCallback = function (_) {};\n    }\n    var _this = _super.call(this, errorHandler) || this;\n    _this._authToken = null;\n    _this._idle = false;\n    _this._reseting = false;\n    _this._resetObservers = [];\n    _this._id = idGenerator++;\n    _this._address = address;\n    _this._server = {\n      address: address.asHostPort()\n    };\n    _this._creationTimestamp = Date.now();\n    _this._disableLosslessIntegers = disableLosslessIntegers;\n    _this._ch = channel;\n    _this._chunker = chunker;\n    _this._log = createConnectionLogger(_this, log);\n    _this._serversideRouting = serversideRouting;\n    _this._notificationFilter = notificationFilter;\n    _this._telemetryDisabledDriverConfig = telemetryDisabled === true;\n    _this._telemetryDisabledConnection = true;\n    _this._ssrCallback = ssrCallback;\n    // connection from the database, returned in response for HELLO message and might not be available\n    _this._dbConnectionId = null;\n    // bolt protocol is initially not initialized\n    /**\n     * @private\n     * @type {BoltProtocol}\n     */\n    _this._protocol = protocolSupplier(_this);\n    // Set to true on fatal errors, to get this out of connection pool.\n    _this._isBroken = false;\n    if (_this._log.isDebugEnabled()) {\n      _this._log.debug(\"created towards \".concat(address));\n    }\n    return _this;\n  }\n  ChannelConnection.prototype.beginTransaction = function (config) {\n    this._sendTelemetryIfEnabled(config);\n    return this._protocol.beginTransaction(config);\n  };\n  ChannelConnection.prototype.run = function (query, parameters, config) {\n    this._sendTelemetryIfEnabled(config);\n    return this._protocol.run(query, parameters, config);\n  };\n  ChannelConnection.prototype._sendTelemetryIfEnabled = function (config) {\n    if (this._telemetryDisabledConnection || this._telemetryDisabledDriverConfig || config == null || config.apiTelemetryConfig == null) {\n      return;\n    }\n    this._protocol.telemetry({\n      api: config.apiTelemetryConfig.api\n    }, {\n      onCompleted: config.apiTelemetryConfig.onTelemetrySuccess,\n      onError: config.beforeError\n    });\n  };\n  ChannelConnection.prototype.commitTransaction = function (config) {\n    return this._protocol.commitTransaction(config);\n  };\n  ChannelConnection.prototype.rollbackTransaction = function (config) {\n    return this._protocol.rollbackTransaction(config);\n  };\n  ChannelConnection.prototype.getProtocolVersion = function () {\n    return this._protocol.version;\n  };\n  Object.defineProperty(ChannelConnection.prototype, \"authToken\", {\n    get: function () {\n      return this._authToken;\n    },\n    set: function (value) {\n      this._authToken = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"supportsReAuth\", {\n    get: function () {\n      return this._protocol.supportsReAuth;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"id\", {\n    get: function () {\n      return this._id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n    get: function () {\n      return this._dbConnectionId;\n    },\n    set: function (value) {\n      this._dbConnectionId = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"idleTimestamp\", {\n    get: function () {\n      return this._idleTimestamp;\n    },\n    set: function (value) {\n      this._idleTimestamp = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"creationTimestamp\", {\n    get: function () {\n      return this._creationTimestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Send initialization message.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {Object} boltAgent the bolt agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @param {boolean} waitReAuth whether ot not the connection will wait for re-authentication to happen\n   * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n   */\n  ChannelConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._protocol.initialized && !this._protocol.supportsReAuth) {\n              throw (0, neo4j_driver_core_1.newError)('Connection does not support re-auth');\n            }\n            this._authToken = authToken;\n            if (!!this._protocol.initialized) return [3 /*break*/, 2];\n            return [4 /*yield*/, this._initialize(userAgent, boltAgent, authToken)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            if (!waitReAuth) return [3 /*break*/, 4];\n            return [4 /*yield*/, new Promise(function (resolve, reject) {\n              _this._protocol.logoff({\n                onError: reject\n              });\n              _this._protocol.logon({\n                authToken: authToken,\n                onError: reject,\n                onComplete: function () {\n                  return resolve(_this);\n                },\n                flush: true\n              });\n            })];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n          case 4:\n            this._protocol.logoff();\n            this._protocol.logon({\n              authToken: authToken,\n              flush: true\n            });\n            return [2 /*return*/, this];\n        }\n      });\n    });\n  };\n  /**\n   * Perform protocol-specific initialization which includes authentication.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {string} boltAgent the bolt agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n   */\n  ChannelConnection.prototype._initialize = function (userAgent, boltAgent, authToken) {\n    var _this = this;\n    var self = this;\n    return new Promise(function (resolve, reject) {\n      _this._protocol.initialize({\n        userAgent: userAgent,\n        boltAgent: boltAgent,\n        authToken: authToken,\n        notificationFilter: _this._notificationFilter,\n        onError: function (err) {\n          return reject(err);\n        },\n        onComplete: function (metadata) {\n          var _a;\n          if (metadata) {\n            // read server version from the response metadata, if it is available\n            var serverVersion = metadata.server;\n            if (!_this.version || serverVersion) {\n              _this.version = serverVersion;\n            }\n            // read database connection id from the response metadata, if it is available\n            var dbConnectionId = metadata.connection_id;\n            if (!_this.databaseId) {\n              _this.databaseId = dbConnectionId;\n            }\n            if (metadata.hints) {\n              var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n              if (receiveTimeoutRaw !== null && receiveTimeoutRaw !== undefined) {\n                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n                if (Number.isInteger(receiveTimeoutInSeconds) && receiveTimeoutInSeconds > 0) {\n                  _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                } else {\n                  _this._log.info(\"Server located at \".concat(_this._address, \" supplied an invalid connection receive timeout value (\").concat(receiveTimeoutInSeconds, \"). \") + 'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                }\n              }\n              var telemetryEnabledHint = metadata.hints['telemetry.enabled'];\n              if (telemetryEnabledHint === true) {\n                _this._telemetryDisabledConnection = false;\n              }\n              _this.SSREnabledHint = metadata.hints['ssr.enabled'];\n            }\n            _this._ssrCallback((_a = _this.SSREnabledHint) !== null && _a !== void 0 ? _a : false, 'OPEN');\n          }\n          resolve(self);\n        }\n      });\n    });\n  };\n  /**\n   * Get the Bolt protocol for the connection.\n   * @return {BoltProtocol} the protocol.\n   */\n  ChannelConnection.prototype.protocol = function () {\n    return this._protocol;\n  };\n  Object.defineProperty(ChannelConnection.prototype, \"address\", {\n    get: function () {\n      return this._address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"version\", {\n    /**\n     * Get the version of the connected server.\n     * Available only after initialization\n     *\n     * @returns {ServerVersion} version\n     */\n    get: function () {\n      return this._server.version;\n    },\n    set: function (value) {\n      this._server.version = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"server\", {\n    get: function () {\n      return this._server;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n    get: function () {\n      return this._log;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * \"Fatal\" means the connection is dead. Only call this if something\n   * happens that cannot be recovered from. This will lead to all subscribers\n   * failing, and the connection getting ejected from the session pool.\n   *\n   * @param error an error object, forwarded to all current and future subscribers\n   */\n  ChannelConnection.prototype._handleFatalError = function (error) {\n    this._isBroken = true;\n    this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n    if (this._log.isErrorEnabled()) {\n      this._log.error(\"experienced a fatal error caused by \".concat(this._error, \" (\").concat(neo4j_driver_core_1.json.stringify(this._error), \")\"));\n    }\n    this._protocol.notifyFatalError(this._error);\n  };\n  /**\n   * This method is used by the {@link PooledConnectionProvider}\n   *\n   * @param {any} observer\n   */\n  ChannelConnection.prototype._setIdle = function (observer) {\n    this._idle = true;\n    this._ch.stopReceiveTimeout();\n    this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n  };\n  /**\n   * This method is used by the {@link PooledConnectionProvider}\n   */\n  ChannelConnection.prototype._unsetIdle = function () {\n    this._idle = false;\n    this._updateCurrentObserver();\n  };\n  /**\n   * This method still here because of the connection-channel.tests.js\n   *\n   * @param {any} observer\n   */\n  ChannelConnection.prototype._queueObserver = function (observer) {\n    return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n  };\n  ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n    return !this._idle && this._protocol.hasOngoingObservableRequests();\n  };\n  /**\n   * Send a RESET-message to the database. Message is immediately flushed to the network.\n   * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n   */\n  ChannelConnection.prototype.resetAndFlush = function () {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      _this._reset({\n        onError: function (error) {\n          if (_this._isBroken) {\n            // handling a fatal error, no need to raise a protocol violation\n            reject(error);\n          } else {\n            var neo4jError = _this._handleProtocolError(\"Received FAILURE as a response for RESET: \".concat(error));\n            reject(neo4jError);\n          }\n        },\n        onComplete: function () {\n          resolve();\n        }\n      });\n    });\n  };\n  ChannelConnection.prototype._resetOnFailure = function () {\n    var _this = this;\n    if (!this.isOpen()) {\n      return;\n    }\n    this._reset({\n      onError: function () {\n        _this._protocol.resetFailure();\n      },\n      onComplete: function () {\n        _this._protocol.resetFailure();\n      }\n    });\n  };\n  ChannelConnection.prototype._reset = function (observer) {\n    var _this = this;\n    if (this._reseting) {\n      if (!this._protocol.isLastMessageReset()) {\n        this._protocol.reset({\n          onError: function (error) {\n            observer.onError(error);\n          },\n          onComplete: function () {\n            observer.onComplete();\n          }\n        });\n      } else {\n        this._resetObservers.push(observer);\n      }\n      return;\n    }\n    this._resetObservers.push(observer);\n    this._reseting = true;\n    var notifyFinish = function (notify) {\n      _this._reseting = false;\n      var observers = _this._resetObservers;\n      _this._resetObservers = [];\n      observers.forEach(notify);\n    };\n    this._protocol.reset({\n      onError: function (error) {\n        notifyFinish(function (obs) {\n          return obs.onError(error);\n        });\n      },\n      onComplete: function () {\n        notifyFinish(function (obs) {\n          return obs.onComplete();\n        });\n      }\n    });\n  };\n  /*\n   * Pop next pending observer form the list of observers and make it current observer.\n   * @protected\n   */\n  ChannelConnection.prototype._updateCurrentObserver = function () {\n    this._protocol.updateCurrentObserver();\n  };\n  /** Check if this connection is in working condition */\n  ChannelConnection.prototype.isOpen = function () {\n    return !this._isBroken && this._ch._open;\n  };\n  /**\n   * Starts and stops the receive timeout timer.\n   * @param {number} requestsNumber Ongoing requests number\n   */\n  ChannelConnection.prototype._handleOngoingRequestsNumberChange = function (requestsNumber) {\n    if (this._idle) {\n      return;\n    }\n    if (requestsNumber === 0) {\n      this._ch.stopReceiveTimeout();\n    } else {\n      this._ch.startReceiveTimeout();\n    }\n  };\n  /**\n   * Call close on the channel.\n   * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n   */\n  ChannelConnection.prototype.close = function () {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this._ssrCallback((_a = this.SSREnabledHint) !== null && _a !== void 0 ? _a : false, 'CLOSE');\n            if (this._log.isDebugEnabled()) {\n              this._log.debug('closing');\n            }\n            if (this._protocol && this.isOpen()) {\n              // protocol has been initialized and this connection is healthy\n              // notify the database about the upcoming close of the connection\n              this._protocol.prepareToClose();\n            }\n            return [4 /*yield*/, this._ch.close()];\n          case 1:\n            _b.sent();\n            if (this._log.isDebugEnabled()) {\n              this._log.debug('closed');\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  ChannelConnection.prototype.toString = function () {\n    return \"Connection [\".concat(this.id, \"][\").concat(this.databaseId || '', \"]\");\n  };\n  ChannelConnection.prototype._handleProtocolError = function (message) {\n    this._protocol.resetFailure();\n    this._updateCurrentObserver();\n    var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n    this._handleFatalError(error);\n    return error;\n  };\n  return ChannelConnection;\n}(connection_1.default);\nexports.default = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\nfunction createConnectionLogger(connection, logger) {\n  return new Logger(logger._level, function (level, message) {\n    return logger._loggerFunction(level, \"\".concat(connection, \" \").concat(message));\n  });\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","__importDefault","mod","__esModule","defineProperty","exports","createChannelConnection","channel_1","require","neo4j_driver_core_1","connection_1","bolt_1","PROTOCOL_ERROR","error","Logger","internal","logger","idGenerator","address","config","errorHandler","log","clientCertificate","serversideRouting","ssrCallback","createChannel","channelConfig","Channel","ChannelConfig","errorCode","channel","default","handshake","_a","version","protocolVersion","consumeRemainingBuffer","chunker","Chunker","dechunker","Dechunker","createProtocol","conn","disableLosslessIntegers","useBigInt","server","observer","onObserversCountChange","_handleOngoingRequestsNumberChange","bind","onError","_handleFatalError","onFailure","_resetOnFailure","onProtocolError","_handleProtocolError","onErrorApplyTransformation","handleAndTransformError","_address","connection","ChannelConnection","notificationFilter","telemetryDisabled","buffer","write","catch","reason","close","_super","protocolSupplier","_this","_authToken","_idle","_reseting","_resetObservers","_id","_server","asHostPort","_creationTimestamp","Date","now","_disableLosslessIntegers","_ch","_chunker","_log","createConnectionLogger","_serversideRouting","_notificationFilter","_telemetryDisabledDriverConfig","_telemetryDisabledConnection","_ssrCallback","_dbConnectionId","_protocol","_isBroken","isDebugEnabled","debug","concat","beginTransaction","_sendTelemetryIfEnabled","run","query","parameters","apiTelemetryConfig","telemetry","api","onCompleted","onTelemetrySuccess","beforeError","commitTransaction","rollbackTransaction","getProtocolVersion","get","set","enumerable","configurable","supportsReAuth","_idleTimestamp","connect","userAgent","boltAgent","authToken","waitReAuth","initialized","newError","_initialize","logoff","logon","onComplete","flush","self","initialize","err","metadata","serverVersion","dbConnectionId","connection_id","databaseId","hints","receiveTimeoutRaw","undefined","receiveTimeoutInSeconds","toNumber","Number","isInteger","setupReceiveTimeout","info","telemetryEnabledHint","SSREnabledHint","protocol","_error","currentFailure","isErrorEnabled","json","stringify","notifyFatalError","_setIdle","stopReceiveTimeout","queueObserverIfProtocolIsNotBroken","_unsetIdle","_updateCurrentObserver","_queueObserver","hasOngoingObservableRequests","resetAndFlush","_reset","neo4jError","isOpen","resetFailure","isLastMessageReset","reset","notifyFinish","notify","observers","forEach","obs","updateCurrentObserver","_open","requestsNumber","startReceiveTimeout","_b","prepareToClose","toString","id","message","_level","level","_loggerFunction"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChannelConnection = void 0;\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar connection_1 = __importDefault(require(\"./connection\"));\nvar bolt_1 = __importDefault(require(\"../bolt\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @param {clientCertificate} clientCertificate - configured client certificate\n * @param ssrCallback - callback function used to update the counts of ssr enabled and disabled connections\n * @param createChannel - function taking a channelConfig object and creating a channel with it\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, clientCertificate, serversideRouting, ssrCallback, createChannel) {\n    if (serversideRouting === void 0) { serversideRouting = null; }\n    if (createChannel === void 0) { createChannel = function (channelConfig) { return new channel_1.Channel(channelConfig); }; }\n    var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode(), clientCertificate);\n    var channel = createChannel(channelConfig);\n    return bolt_1.default.handshake(channel, log)\n        .then(function (_a) {\n        var version = _a.protocolVersion, consumeRemainingBuffer = _a.consumeRemainingBuffer;\n        var chunker = new channel_1.Chunker(channel);\n        var dechunker = new channel_1.Dechunker();\n        var createProtocol = function (conn) {\n            return bolt_1.default.create({\n                version: version,\n                channel: channel,\n                chunker: chunker,\n                dechunker: dechunker,\n                disableLosslessIntegers: config.disableLosslessIntegers,\n                useBigInt: config.useBigInt,\n                serversideRouting: serversideRouting,\n                server: conn.server,\n                log: conn.logger,\n                observer: {\n                    onObserversCountChange: conn._handleOngoingRequestsNumberChange.bind(conn),\n                    onError: conn._handleFatalError.bind(conn),\n                    onFailure: conn._resetOnFailure.bind(conn),\n                    onProtocolError: conn._handleProtocolError.bind(conn),\n                    onErrorApplyTransformation: function (error) {\n                        return conn.handleAndTransformError(error, conn._address);\n                    }\n                }\n            });\n        };\n        var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, config.notificationFilter, createProtocol, config.telemetryDisabled, ssrCallback);\n        // forward all pending bytes to the dechunker\n        consumeRemainingBuffer(function (buffer) { return dechunker.write(buffer); });\n        return connection;\n    })\n        .catch(function (reason) {\n        return channel.close().then(function () {\n            throw reason;\n        });\n    });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */ (function (_super) {\n    __extends(ChannelConnection, _super);\n    /**\n     * @constructor\n     * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n     * @param {ConnectionErrorHandler} errorHandler the error handler.\n     * @param {ServerAddress} address - the server address to connect to.\n     * @param {Logger} log - the configured logger.\n     * @param {boolean} disableLosslessIntegers - if this connection should convert all received integers to native JS numbers.\n     * @param {Chunker} chunker - the chunker\n     * @param protocolSupplier - Bolt protocol supplier\n     * @param {boolean} telemetryDisabled - wether telemetry has been disabled in driver config.\n     * @param ssrCallback - callback function used to update the counts of ssr enabled and disabled connections.\n     */\n    function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n    notificationFilter, protocolSupplier, telemetryDisabled, ssrCallback) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (serversideRouting === void 0) { serversideRouting = null; }\n        if (ssrCallback === void 0) { ssrCallback = function (_) { }; }\n        var _this = _super.call(this, errorHandler) || this;\n        _this._authToken = null;\n        _this._idle = false;\n        _this._reseting = false;\n        _this._resetObservers = [];\n        _this._id = idGenerator++;\n        _this._address = address;\n        _this._server = { address: address.asHostPort() };\n        _this._creationTimestamp = Date.now();\n        _this._disableLosslessIntegers = disableLosslessIntegers;\n        _this._ch = channel;\n        _this._chunker = chunker;\n        _this._log = createConnectionLogger(_this, log);\n        _this._serversideRouting = serversideRouting;\n        _this._notificationFilter = notificationFilter;\n        _this._telemetryDisabledDriverConfig = telemetryDisabled === true;\n        _this._telemetryDisabledConnection = true;\n        _this._ssrCallback = ssrCallback;\n        // connection from the database, returned in response for HELLO message and might not be available\n        _this._dbConnectionId = null;\n        // bolt protocol is initially not initialized\n        /**\n         * @private\n         * @type {BoltProtocol}\n         */\n        _this._protocol = protocolSupplier(_this);\n        // Set to true on fatal errors, to get this out of connection pool.\n        _this._isBroken = false;\n        if (_this._log.isDebugEnabled()) {\n            _this._log.debug(\"created towards \".concat(address));\n        }\n        return _this;\n    }\n    ChannelConnection.prototype.beginTransaction = function (config) {\n        this._sendTelemetryIfEnabled(config);\n        return this._protocol.beginTransaction(config);\n    };\n    ChannelConnection.prototype.run = function (query, parameters, config) {\n        this._sendTelemetryIfEnabled(config);\n        return this._protocol.run(query, parameters, config);\n    };\n    ChannelConnection.prototype._sendTelemetryIfEnabled = function (config) {\n        if (this._telemetryDisabledConnection ||\n            this._telemetryDisabledDriverConfig ||\n            config == null ||\n            config.apiTelemetryConfig == null) {\n            return;\n        }\n        this._protocol.telemetry({\n            api: config.apiTelemetryConfig.api\n        }, {\n            onCompleted: config.apiTelemetryConfig.onTelemetrySuccess,\n            onError: config.beforeError\n        });\n    };\n    ChannelConnection.prototype.commitTransaction = function (config) {\n        return this._protocol.commitTransaction(config);\n    };\n    ChannelConnection.prototype.rollbackTransaction = function (config) {\n        return this._protocol.rollbackTransaction(config);\n    };\n    ChannelConnection.prototype.getProtocolVersion = function () {\n        return this._protocol.version;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"authToken\", {\n        get: function () {\n            return this._authToken;\n        },\n        set: function (value) {\n            this._authToken = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"supportsReAuth\", {\n        get: function () {\n            return this._protocol.supportsReAuth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n        get: function () {\n            return this._dbConnectionId;\n        },\n        set: function (value) {\n            this._dbConnectionId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"idleTimestamp\", {\n        get: function () {\n            return this._idleTimestamp;\n        },\n        set: function (value) {\n            this._idleTimestamp = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"creationTimestamp\", {\n        get: function () {\n            return this._creationTimestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send initialization message.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @param {boolean} waitReAuth whether ot not the connection will wait for re-authentication to happen\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._protocol.initialized && !this._protocol.supportsReAuth) {\n                            throw (0, neo4j_driver_core_1.newError)('Connection does not support re-auth');\n                        }\n                        this._authToken = authToken;\n                        if (!!this._protocol.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._initialize(userAgent, boltAgent, authToken)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        if (!waitReAuth) return [3 /*break*/, 4];\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                _this._protocol.logoff({\n                                    onError: reject\n                                });\n                                _this._protocol.logon({\n                                    authToken: authToken,\n                                    onError: reject,\n                                    onComplete: function () { return resolve(_this); },\n                                    flush: true\n                                });\n                            })];\n                    case 3: return [2 /*return*/, _a.sent()];\n                    case 4:\n                        this._protocol.logoff();\n                        this._protocol.logon({ authToken: authToken, flush: true });\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Perform protocol-specific initialization which includes authentication.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {string} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype._initialize = function (userAgent, boltAgent, authToken) {\n        var _this = this;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.initialize({\n                userAgent: userAgent,\n                boltAgent: boltAgent,\n                authToken: authToken,\n                notificationFilter: _this._notificationFilter,\n                onError: function (err) { return reject(err); },\n                onComplete: function (metadata) {\n                    var _a;\n                    if (metadata) {\n                        // read server version from the response metadata, if it is available\n                        var serverVersion = metadata.server;\n                        if (!_this.version || serverVersion) {\n                            _this.version = serverVersion;\n                        }\n                        // read database connection id from the response metadata, if it is available\n                        var dbConnectionId = metadata.connection_id;\n                        if (!_this.databaseId) {\n                            _this.databaseId = dbConnectionId;\n                        }\n                        if (metadata.hints) {\n                            var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n                            if (receiveTimeoutRaw !== null &&\n                                receiveTimeoutRaw !== undefined) {\n                                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n                                if (Number.isInteger(receiveTimeoutInSeconds) &&\n                                    receiveTimeoutInSeconds > 0) {\n                                    _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                                }\n                                else {\n                                    _this._log.info(\"Server located at \".concat(_this._address, \" supplied an invalid connection receive timeout value (\").concat(receiveTimeoutInSeconds, \"). \") +\n                                        'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                                }\n                            }\n                            var telemetryEnabledHint = metadata.hints['telemetry.enabled'];\n                            if (telemetryEnabledHint === true) {\n                                _this._telemetryDisabledConnection = false;\n                            }\n                            _this.SSREnabledHint = metadata.hints['ssr.enabled'];\n                        }\n                        _this._ssrCallback((_a = _this.SSREnabledHint) !== null && _a !== void 0 ? _a : false, 'OPEN');\n                    }\n                    resolve(self);\n                }\n            });\n        });\n    };\n    /**\n     * Get the Bolt protocol for the connection.\n     * @return {BoltProtocol} the protocol.\n     */\n    ChannelConnection.prototype.protocol = function () {\n        return this._protocol;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"address\", {\n        get: function () {\n            return this._address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"version\", {\n        /**\n         * Get the version of the connected server.\n         * Available only after initialization\n         *\n         * @returns {ServerVersion} version\n         */\n        get: function () {\n            return this._server.version;\n        },\n        set: function (value) {\n            this._server.version = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"server\", {\n        get: function () {\n            return this._server;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n        get: function () {\n            return this._log;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * \"Fatal\" means the connection is dead. Only call this if something\n     * happens that cannot be recovered from. This will lead to all subscribers\n     * failing, and the connection getting ejected from the session pool.\n     *\n     * @param error an error object, forwarded to all current and future subscribers\n     */\n    ChannelConnection.prototype._handleFatalError = function (error) {\n        this._isBroken = true;\n        this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n        if (this._log.isErrorEnabled()) {\n            this._log.error(\"experienced a fatal error caused by \".concat(this._error, \" (\").concat(neo4j_driver_core_1.json.stringify(this._error), \")\"));\n        }\n        this._protocol.notifyFatalError(this._error);\n    };\n    /**\n     * This method is used by the {@link PooledConnectionProvider}\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._setIdle = function (observer) {\n        this._idle = true;\n        this._ch.stopReceiveTimeout();\n        this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    /**\n     * This method is used by the {@link PooledConnectionProvider}\n     */\n    ChannelConnection.prototype._unsetIdle = function () {\n        this._idle = false;\n        this._updateCurrentObserver();\n    };\n    /**\n     * This method still here because of the connection-channel.tests.js\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._queueObserver = function (observer) {\n        return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n        return !this._idle && this._protocol.hasOngoingObservableRequests();\n    };\n    /**\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n     */\n    ChannelConnection.prototype.resetAndFlush = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._reset({\n                onError: function (error) {\n                    if (_this._isBroken) {\n                        // handling a fatal error, no need to raise a protocol violation\n                        reject(error);\n                    }\n                    else {\n                        var neo4jError = _this._handleProtocolError(\"Received FAILURE as a response for RESET: \".concat(error));\n                        reject(neo4jError);\n                    }\n                },\n                onComplete: function () {\n                    resolve();\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype._resetOnFailure = function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            return;\n        }\n        this._reset({\n            onError: function () {\n                _this._protocol.resetFailure();\n            },\n            onComplete: function () {\n                _this._protocol.resetFailure();\n            }\n        });\n    };\n    ChannelConnection.prototype._reset = function (observer) {\n        var _this = this;\n        if (this._reseting) {\n            if (!this._protocol.isLastMessageReset()) {\n                this._protocol.reset({\n                    onError: function (error) {\n                        observer.onError(error);\n                    },\n                    onComplete: function () {\n                        observer.onComplete();\n                    }\n                });\n            }\n            else {\n                this._resetObservers.push(observer);\n            }\n            return;\n        }\n        this._resetObservers.push(observer);\n        this._reseting = true;\n        var notifyFinish = function (notify) {\n            _this._reseting = false;\n            var observers = _this._resetObservers;\n            _this._resetObservers = [];\n            observers.forEach(notify);\n        };\n        this._protocol.reset({\n            onError: function (error) {\n                notifyFinish(function (obs) { return obs.onError(error); });\n            },\n            onComplete: function () {\n                notifyFinish(function (obs) { return obs.onComplete(); });\n            }\n        });\n    };\n    /*\n     * Pop next pending observer form the list of observers and make it current observer.\n     * @protected\n     */\n    ChannelConnection.prototype._updateCurrentObserver = function () {\n        this._protocol.updateCurrentObserver();\n    };\n    /** Check if this connection is in working condition */\n    ChannelConnection.prototype.isOpen = function () {\n        return !this._isBroken && this._ch._open;\n    };\n    /**\n     * Starts and stops the receive timeout timer.\n     * @param {number} requestsNumber Ongoing requests number\n     */\n    ChannelConnection.prototype._handleOngoingRequestsNumberChange = function (requestsNumber) {\n        if (this._idle) {\n            return;\n        }\n        if (requestsNumber === 0) {\n            this._ch.stopReceiveTimeout();\n        }\n        else {\n            this._ch.startReceiveTimeout();\n        }\n    };\n    /**\n     * Call close on the channel.\n     * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n     */\n    ChannelConnection.prototype.close = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this._ssrCallback((_a = this.SSREnabledHint) !== null && _a !== void 0 ? _a : false, 'CLOSE');\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closing');\n                        }\n                        if (this._protocol && this.isOpen()) {\n                            // protocol has been initialized and this connection is healthy\n                            // notify the database about the upcoming close of the connection\n                            this._protocol.prepareToClose();\n                        }\n                        return [4 /*yield*/, this._ch.close()];\n                    case 1:\n                        _b.sent();\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closed');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype.toString = function () {\n        return \"Connection [\".concat(this.id, \"][\").concat(this.databaseId || '', \"]\");\n    };\n    ChannelConnection.prototype._handleProtocolError = function (message) {\n        this._protocol.resetFailure();\n        this._updateCurrentObserver();\n        var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n        this._handleFatalError(error);\n        return error;\n    };\n    return ChannelConnection;\n}(connection_1.default));\nexports.default = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\nfunction createConnectionLogger(connection, logger) {\n    return new Logger(logger._level, function (level, message) {\n        return logger._loggerFunction(level, \"\".concat(connection, \" \").concat(message));\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}