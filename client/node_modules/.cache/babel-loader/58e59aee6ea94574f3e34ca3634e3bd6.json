{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar BOLT_MAGIC_PREAMBLE = 0x6060b017;\nvar AVAILABLE_BOLT_PROTOCOLS = ['5.8', '5.7', '5.6', '5.4', '5.3', '5.2', '5.1', '5.0', '4.4', '4.3', '4.2', '3.0']; // bolt protocols the client will accept, ordered by preference\nvar DESIRED_CAPABILITES = 0;\nfunction version(major, minor) {\n  return {\n    major: major,\n    minor: minor\n  };\n}\nfunction createHandshakeMessage(versions) {\n  if (versions.length > 4) {\n    throw (0, neo4j_driver_core_1.newError)('It should not have more than 4 versions of the protocol');\n  }\n  var handshakeBuffer = (0, channel_1.alloc)(5 * 4);\n  handshakeBuffer.writeInt32(BOLT_MAGIC_PREAMBLE);\n  versions.forEach(function (version) {\n    if (version instanceof Array) {\n      var _a = version[0],\n        major = _a.major,\n        minor = _a.minor;\n      var minMinor = version[1].minor;\n      var range = minor - minMinor;\n      handshakeBuffer.writeInt32(range << 16 | minor << 8 | major);\n    } else {\n      var major = version.major,\n        minor = version.minor;\n      handshakeBuffer.writeInt32(minor << 8 | major);\n    }\n  });\n  handshakeBuffer.reset();\n  return handshakeBuffer;\n}\nfunction parseNegotiatedResponse(buffer, log) {\n  var h = [buffer.readUInt8(), buffer.readUInt8(), buffer.readUInt8(), buffer.readUInt8()];\n  if (h[0] === 0x48 && h[1] === 0x54 && h[2] === 0x54 && h[3] === 0x50) {\n    log.error('Handshake failed since server responded with HTTP.');\n    throw (0, neo4j_driver_core_1.newError)('Server responded HTTP. Make sure you are not trying to connect to the http endpoint ' + '(HTTP defaults to port 7474 whereas BOLT defaults to port 7687)');\n  }\n  return Number(h[3] + '.' + h[2]);\n}\nfunction handshakeNegotiationV2(channel, buffer, log) {\n  var numVersions = buffer.readVarInt();\n  var versions = [];\n  for (var i = 0; i < numVersions; i++) {\n    var versionRange = [buffer.readUInt8(), buffer.readUInt8(), buffer.readUInt8(), buffer.readUInt8()];\n    versions = versions.concat(getVersions(versionRange));\n  }\n  var capabilityBitMask = buffer.readVarInt();\n  var capabilites = selectCapabilites(capabilityBitMask);\n  var major = 0;\n  var minor = 0;\n  versions.sort(function (a, b) {\n    if (Number(a.major) !== Number(b.major)) {\n      return Number(b.major) - Number(a.major);\n    } else {\n      return Number(b.minor) - Number(a.minor);\n    }\n  });\n  for (var i = 0; i < versions.length; i++) {\n    var version_1 = versions[i];\n    if (AVAILABLE_BOLT_PROTOCOLS.includes(version_1.major + '.' + version_1.minor)) {\n      major = version_1.major;\n      minor = version_1.minor;\n      break;\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    try {\n      var selectionBuffer = (0, channel_1.alloc)(5);\n      selectionBuffer.writeInt32(minor << 8 | major);\n      selectionBuffer.writeVarInt(capabilites);\n      channel.write(selectionBuffer);\n      resolve({\n        protocolVersion: Number(major + '.' + minor),\n        capabilites: capabilites,\n        consumeRemainingBuffer: function (consumer) {\n          if (buffer.hasRemaining()) {\n            consumer(buffer.readSlice(buffer.remaining()));\n          }\n        }\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * @return {BaseBuffer}\n * @private\n */\nfunction newHandshakeBuffer() {\n  return createHandshakeMessage([version(255, 1), [version(5, 8), version(5, 0)], [version(4, 4), version(4, 2)], version(3, 0)]);\n}\n/**\n * This callback is displayed as a global member.\n * @callback BufferConsumerCallback\n * @param {buffer} buffer the remaining buffer\n */\n/**\n * @typedef HandshakeResult\n * @property {number} protocolVersion The protocol version negotiated in the handshake\n * @property {number} capabilites A bitmask representing the capabilities negotiated in the handshake\n * @property {function(BufferConsumerCallback)} consumeRemainingBuffer A function to consume the remaining buffer if it exists\n */\n/**\n * Shake hands using the channel and return the protocol version\n *\n * @param {Channel} channel the channel use to shake hands\n * @param {Logger} log the log object\n * @returns {Promise<HandshakeResult>} Promise of protocol version and consumeRemainingBuffer\n */\nfunction handshake(channel, log) {\n  return initialHandshake(channel, log).then(function (result) {\n    if (result.protocolVersion === 255.1) {\n      return handshakeNegotiationV2(channel, result.buffer, log);\n    } else {\n      return result;\n    }\n  });\n}\nexports.default = handshake;\n/**\n * Shake hands using the channel and return the protocol version, or the improved handshake protocol if communicating with a newer server.\n *\n * @param {Channel} channel the channel use to shake hands\n * @param {Logger} log the log object\n * @returns {Promise<HandshakeResult>} Promise of protocol version and consumeRemainingBuffer\n */\nfunction initialHandshake(channel, log) {\n  var _this = this;\n  return new Promise(function (resolve, reject) {\n    var handshakeErrorHandler = function (error) {\n      reject(error);\n    };\n    channel.onerror = handshakeErrorHandler.bind(_this);\n    if (channel._error) {\n      handshakeErrorHandler(channel._error);\n    }\n    channel.onmessage = function (buffer) {\n      try {\n        // read the response buffer and initialize the protocol\n        var protocolVersion = parseNegotiatedResponse(buffer, log);\n        resolve({\n          protocolVersion: protocolVersion,\n          capabilites: 0,\n          buffer: buffer,\n          consumeRemainingBuffer: function (consumer) {\n            if (buffer.hasRemaining()) {\n              consumer(buffer.readSlice(buffer.remaining()));\n            }\n          }\n        });\n      } catch (e) {\n        reject(e);\n      }\n    };\n    channel.write(newHandshakeBuffer());\n  });\n}\nfunction getVersions(versionArray) {\n  var resultArr = [];\n  var major = versionArray[3];\n  var minor = versionArray[2];\n  for (var i = 0; i <= versionArray[1]; i++) {\n    resultArr.push({\n      major: major,\n      minor: minor - i\n    });\n  }\n  return resultArr;\n}\nfunction selectCapabilites(capabilityBitMask) {\n  return DESIRED_CAPABILITES; // capabilites are currently unused and will always be 0.\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","channel_1","require","neo4j_driver_core_1","BOLT_MAGIC_PREAMBLE","AVAILABLE_BOLT_PROTOCOLS","DESIRED_CAPABILITES","version","major","minor","createHandshakeMessage","versions","length","newError","handshakeBuffer","alloc","writeInt32","forEach","Array","_a","minMinor","range","reset","parseNegotiatedResponse","buffer","log","h","readUInt8","error","Number","handshakeNegotiationV2","channel","numVersions","readVarInt","i","versionRange","concat","getVersions","capabilityBitMask","capabilites","selectCapabilites","sort","a","b","version_1","includes","Promise","resolve","reject","selectionBuffer","writeVarInt","write","protocolVersion","consumeRemainingBuffer","consumer","hasRemaining","readSlice","remaining","e","newHandshakeBuffer","handshake","initialHandshake","then","result","default","_this","handshakeErrorHandler","onerror","bind","_error","onmessage","versionArray","resultArr","push"],"sources":["D:/Study/Projects/Copy 4/client/node_modules/neo4j-driver-bolt-connection/lib/bolt/handshake.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar BOLT_MAGIC_PREAMBLE = 0x6060b017;\nvar AVAILABLE_BOLT_PROTOCOLS = ['5.8', '5.7', '5.6', '5.4', '5.3', '5.2', '5.1', '5.0', '4.4', '4.3', '4.2', '3.0']; // bolt protocols the client will accept, ordered by preference\nvar DESIRED_CAPABILITES = 0;\nfunction version(major, minor) {\n    return {\n        major: major,\n        minor: minor\n    };\n}\nfunction createHandshakeMessage(versions) {\n    if (versions.length > 4) {\n        throw (0, neo4j_driver_core_1.newError)('It should not have more than 4 versions of the protocol');\n    }\n    var handshakeBuffer = (0, channel_1.alloc)(5 * 4);\n    handshakeBuffer.writeInt32(BOLT_MAGIC_PREAMBLE);\n    versions.forEach(function (version) {\n        if (version instanceof Array) {\n            var _a = version[0], major = _a.major, minor = _a.minor;\n            var minMinor = version[1].minor;\n            var range = minor - minMinor;\n            handshakeBuffer.writeInt32((range << 16) | (minor << 8) | major);\n        }\n        else {\n            var major = version.major, minor = version.minor;\n            handshakeBuffer.writeInt32((minor << 8) | major);\n        }\n    });\n    handshakeBuffer.reset();\n    return handshakeBuffer;\n}\nfunction parseNegotiatedResponse(buffer, log) {\n    var h = [\n        buffer.readUInt8(),\n        buffer.readUInt8(),\n        buffer.readUInt8(),\n        buffer.readUInt8()\n    ];\n    if (h[0] === 0x48 && h[1] === 0x54 && h[2] === 0x54 && h[3] === 0x50) {\n        log.error('Handshake failed since server responded with HTTP.');\n        throw (0, neo4j_driver_core_1.newError)('Server responded HTTP. Make sure you are not trying to connect to the http endpoint ' +\n            '(HTTP defaults to port 7474 whereas BOLT defaults to port 7687)');\n    }\n    return Number(h[3] + '.' + h[2]);\n}\nfunction handshakeNegotiationV2(channel, buffer, log) {\n    var numVersions = buffer.readVarInt();\n    var versions = [];\n    for (var i = 0; i < numVersions; i++) {\n        var versionRange = [\n            buffer.readUInt8(),\n            buffer.readUInt8(),\n            buffer.readUInt8(),\n            buffer.readUInt8()\n        ];\n        versions = versions.concat(getVersions(versionRange));\n    }\n    var capabilityBitMask = buffer.readVarInt();\n    var capabilites = selectCapabilites(capabilityBitMask);\n    var major = 0;\n    var minor = 0;\n    versions.sort(function (a, b) {\n        if (Number(a.major) !== Number(b.major)) {\n            return Number(b.major) - Number(a.major);\n        }\n        else {\n            return Number(b.minor) - Number(a.minor);\n        }\n    });\n    for (var i = 0; i < versions.length; i++) {\n        var version_1 = versions[i];\n        if (AVAILABLE_BOLT_PROTOCOLS.includes(version_1.major + '.' + version_1.minor)) {\n            major = version_1.major;\n            minor = version_1.minor;\n            break;\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        try {\n            var selectionBuffer = (0, channel_1.alloc)(5);\n            selectionBuffer.writeInt32((minor << 8) | major);\n            selectionBuffer.writeVarInt(capabilites);\n            channel.write(selectionBuffer);\n            resolve({\n                protocolVersion: Number(major + '.' + minor),\n                capabilites: capabilites,\n                consumeRemainingBuffer: function (consumer) {\n                    if (buffer.hasRemaining()) {\n                        consumer(buffer.readSlice(buffer.remaining()));\n                    }\n                }\n            });\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n/**\n * @return {BaseBuffer}\n * @private\n */\nfunction newHandshakeBuffer() {\n    return createHandshakeMessage([\n        version(255, 1),\n        [version(5, 8), version(5, 0)],\n        [version(4, 4), version(4, 2)],\n        version(3, 0)\n    ]);\n}\n/**\n * This callback is displayed as a global member.\n * @callback BufferConsumerCallback\n * @param {buffer} buffer the remaining buffer\n */\n/**\n * @typedef HandshakeResult\n * @property {number} protocolVersion The protocol version negotiated in the handshake\n * @property {number} capabilites A bitmask representing the capabilities negotiated in the handshake\n * @property {function(BufferConsumerCallback)} consumeRemainingBuffer A function to consume the remaining buffer if it exists\n */\n/**\n * Shake hands using the channel and return the protocol version\n *\n * @param {Channel} channel the channel use to shake hands\n * @param {Logger} log the log object\n * @returns {Promise<HandshakeResult>} Promise of protocol version and consumeRemainingBuffer\n */\nfunction handshake(channel, log) {\n    return initialHandshake(channel, log).then(function (result) {\n        if (result.protocolVersion === 255.1) {\n            return handshakeNegotiationV2(channel, result.buffer, log);\n        }\n        else {\n            return result;\n        }\n    });\n}\nexports.default = handshake;\n/**\n * Shake hands using the channel and return the protocol version, or the improved handshake protocol if communicating with a newer server.\n *\n * @param {Channel} channel the channel use to shake hands\n * @param {Logger} log the log object\n * @returns {Promise<HandshakeResult>} Promise of protocol version and consumeRemainingBuffer\n */\nfunction initialHandshake(channel, log) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n        var handshakeErrorHandler = function (error) {\n            reject(error);\n        };\n        channel.onerror = handshakeErrorHandler.bind(_this);\n        if (channel._error) {\n            handshakeErrorHandler(channel._error);\n        }\n        channel.onmessage = function (buffer) {\n            try {\n                // read the response buffer and initialize the protocol\n                var protocolVersion = parseNegotiatedResponse(buffer, log);\n                resolve({\n                    protocolVersion: protocolVersion,\n                    capabilites: 0,\n                    buffer: buffer,\n                    consumeRemainingBuffer: function (consumer) {\n                        if (buffer.hasRemaining()) {\n                            consumer(buffer.readSlice(buffer.remaining()));\n                        }\n                    }\n                });\n            }\n            catch (e) {\n                reject(e);\n            }\n        };\n        channel.write(newHandshakeBuffer());\n    });\n}\nfunction getVersions(versionArray) {\n    var resultArr = [];\n    var major = versionArray[3];\n    var minor = versionArray[2];\n    for (var i = 0; i <= versionArray[1]; i++) {\n        resultArr.push({ major: major, minor: minor - i });\n    }\n    return resultArr;\n}\nfunction selectCapabilites(capabilityBitMask) {\n    return DESIRED_CAPABILITES; // capabilites are currently unused and will always be 0.\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}