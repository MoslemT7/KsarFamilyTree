{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveCertificateProvider = exports.clientCertificateProviders = exports.RotatingClientCertificateProvider = exports.ClientCertificateProvider = void 0;\nvar json = __importStar(require(\"./json\"));\n/**\n * Represents KeyFile represented as file.\n *\n * @typedef {object} KeyFileObject\n * @property {string} path - The path of the file\n * @property {string|undefined} password - the password of the key. If none,\n * the password defined at {@link ClientCertificate} will be used.\n */\n/**\n * Holds the Client TLS certificate information.\n *\n * Browser instances of the driver should configure the certificate\n * in the system.\n *\n * Files defined in the {@link ClientCertificate#certfile}\n * and {@link ClientCertificate#keyfile} will read and loaded to\n * memory to fill the fields `cert` and `key` in security context.\n *\n * @interface\n * @see https://nodejs.org/api/tls.html#tlscreatesecurecontextoptions\n * @since 5.27\n */\nvar ClientCertificate = /** @class */function () {\n  function ClientCertificate() {\n    /**\n     * The path to client certificate file.\n     *\n     * @type {string|string[]}\n     */\n    this.certfile = '';\n    /**\n     * The path to the key file.\n     *\n     * @type {string|string[]|KeyFileObject|KeyFileObject[]}\n     */\n    this.keyfile = '';\n    /**\n     * The key's password.\n     *\n     * @type {string|undefined}\n     */\n    this.password = undefined;\n  }\n  return ClientCertificate;\n}();\nexports.default = ClientCertificate;\n/**\n * Provides a client certificate to the driver for mutual TLS.\n *\n * The driver will call {@link ClientCertificateProvider#hasUpdate} to check if the client wants to update the certificate.\n * If so, it will call {@link ClientCertificateProvider#getClientCertificate} to get the new certificate.\n *\n * The certificate is only used as a second factor for authentication authenticating the client.\n * The DMBS user still needs to authenticate with an authentication token.\n *\n * All implementations of this interface must be thread-safe and non-blocking for caller threads.\n * For instance, IO operations must not be done on the calling thread.\n *\n * Note that the work done in the methods of this interface count towards the connectionAcquisition.\n * Should fetching the certificate be particularly slow, it might be necessary to increase the timeout.\n *\n * @interface\n * @since 5.27\n */\nvar ClientCertificateProvider = /** @class */function () {\n  function ClientCertificateProvider() {}\n  /**\n   * Indicates whether the client wants the driver to update the certificate.\n   *\n   * @returns {Promise<boolean>|boolean} true if the client wants the driver to update the certificate\n   */\n  ClientCertificateProvider.prototype.hasUpdate = function () {\n    throw new Error('Not Implemented');\n  };\n  /**\n   * Returns the certificate to use for new connections.\n   *\n   * Will be called by the driver after {@link ClientCertificateProvider#hasUpdate} returned true\n   * or when the driver establishes the first connection.\n   *\n   * @returns {Promise<ClientCertificate>|ClientCertificate} the certificate to use for new connections\n   */\n  ClientCertificateProvider.prototype.getClientCertificate = function () {\n    throw new Error('Not Implemented');\n  };\n  return ClientCertificateProvider;\n}();\nexports.ClientCertificateProvider = ClientCertificateProvider;\n/**\n * Interface for  {@link ClientCertificateProvider} which provides update certificate function.\n * @interface\n * @since 5.27\n */\nvar RotatingClientCertificateProvider = /** @class */function (_super) {\n  __extends(RotatingClientCertificateProvider, _super);\n  function RotatingClientCertificateProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Updates the certificate stored in the provider.\n   *\n   * To be called by user-code when a new client certificate is available.\n   *\n   * @param {ClientCertificate} certificate - the new certificate\n   * @throws {TypeError} If initialCertificate is not a ClientCertificate.\n   */\n  RotatingClientCertificateProvider.prototype.updateCertificate = function (certificate) {\n    throw new Error('Not implemented');\n  };\n  return RotatingClientCertificateProvider;\n}(ClientCertificateProvider);\nexports.RotatingClientCertificateProvider = RotatingClientCertificateProvider;\n/**\n * Defines the object which holds the common {@link ClientCertificateProviders} used in the Driver\n *\n * @since 5.27\n */\nvar ClientCertificateProviders = /** @class */function () {\n  function ClientCertificateProviders() {}\n  /**\n   *\n   * @param {object} param0 - The params\n   * @param {ClientCertificate} param0.initialCertificate - The certificated used by the driver until {@link RotatingClientCertificateProvider#updateCertificate} get called.\n   *\n   * @returns {RotatingClientCertificateProvider} The rotating client certificate provider\n   * @throws {TypeError} If initialCertificate is not a ClientCertificate.\n   */\n  ClientCertificateProviders.prototype.rotating = function (_a) {\n    var initialCertificate = _a.initialCertificate;\n    if (initialCertificate == null || !isClientClientCertificate(initialCertificate)) {\n      throw new TypeError(\"initialCertificate should be ClientCertificate, but got \".concat(json.stringify(initialCertificate)));\n    }\n    var certificate = __assign({}, initialCertificate);\n    return new InternalRotatingClientCertificateProvider(certificate);\n  };\n  return ClientCertificateProviders;\n}();\n/**\n * Holds the common {@link ClientCertificateProviders} used in the Driver.\n *\n * @since 5.27\n */\nvar clientCertificateProviders = new ClientCertificateProviders();\nexports.clientCertificateProviders = clientCertificateProviders;\nObject.freeze(clientCertificateProviders);\n/**\n * Resolves ClientCertificate or ClientCertificateProvider to a ClientCertificateProvider\n *\n * Method validates the input.\n *\n * @private\n * @param input\n * @returns {ClientCertificateProvider?} A client certificate provider if provided a ClientCertificate or a ClientCertificateProvider\n * @throws {TypeError} If input is not a ClientCertificate, ClientCertificateProvider, undefined or null.\n */\nfunction resolveCertificateProvider(input) {\n  if (input == null) {\n    return undefined;\n  }\n  if (typeof input === 'object' && 'hasUpdate' in input && 'getClientCertificate' in input && typeof input.getClientCertificate === 'function' && typeof input.hasUpdate === 'function') {\n    return input;\n  }\n  if (isClientClientCertificate(input)) {\n    var certificate_1 = __assign({}, input);\n    return {\n      getClientCertificate: function () {\n        return certificate_1;\n      },\n      hasUpdate: function () {\n        return false;\n      }\n    };\n  }\n  throw new TypeError(\"clientCertificate should be configured with ClientCertificate or ClientCertificateProvider, but got \".concat(json.stringify(input)));\n}\nexports.resolveCertificateProvider = resolveCertificateProvider;\n/**\n * Verify if object is a client certificate\n * @private\n * @param maybeClientCertificate - Maybe the certificate\n * @returns {boolean} if maybeClientCertificate is a client certificate object\n */\nfunction isClientClientCertificate(maybeClientCertificate) {\n  return maybeClientCertificate != null && typeof maybeClientCertificate === 'object' && 'certfile' in maybeClientCertificate && isCertFile(maybeClientCertificate.certfile) && 'keyfile' in maybeClientCertificate && isKeyFile(maybeClientCertificate.keyfile) && isStringOrNotPresent('password', maybeClientCertificate);\n}\n/**\n * Check value is a cert file\n * @private\n * @param {any} value the value\n * @returns {boolean} is a cert file\n */\nfunction isCertFile(value) {\n  return isString(value) || isArrayOf(value, isString);\n}\n/**\n * Check if the value is a keyfile.\n *\n * @private\n * @param {any} maybeKeyFile might be a keyfile value\n * @returns {boolean} the value is a KeyFile\n */\nfunction isKeyFile(maybeKeyFile) {\n  function check(obj) {\n    return typeof obj === 'string' || obj != null && typeof obj === 'object' && 'path' in obj && typeof obj.path === 'string' && isStringOrNotPresent('password', obj);\n  }\n  return check(maybeKeyFile) || isArrayOf(maybeKeyFile, check);\n}\n/**\n * Verify if value is string\n *\n * @private\n * @param {any} value the value\n * @returns {boolean} is string\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Verifies if value is a array of type\n *\n * @private\n * @param {any} value the value\n * @param {function} isType the type checker\n * @returns {boolean} value is array of type\n */\nfunction isArrayOf(value, isType, allowEmpty) {\n  if (allowEmpty === void 0) {\n    allowEmpty = false;\n  }\n  return Array.isArray(value) && (allowEmpty || value.length > 0) && value.filter(isType).length === value.length;\n}\n/**\n * Verify if valueName is present in the object and is a string, or not present at all.\n *\n * @private\n * @param {string} valueName The value in the object\n * @param {object} obj The object\n * @returns {boolean} if the value is present in object as string or not present\n */\nfunction isStringOrNotPresent(valueName, obj) {\n  return !(valueName in obj) || obj[valueName] == null || typeof obj[valueName] === 'string';\n}\n/**\n * Internal implementation\n *\n * @private\n */\nvar InternalRotatingClientCertificateProvider = /** @class */function () {\n  function InternalRotatingClientCertificateProvider(_certificate, _updated) {\n    if (_updated === void 0) {\n      _updated = false;\n    }\n    this._certificate = _certificate;\n    this._updated = _updated;\n  }\n  /**\n   *\n   * @returns {boolean|Promise<boolean>}\n   */\n  InternalRotatingClientCertificateProvider.prototype.hasUpdate = function () {\n    try {\n      return this._updated;\n    } finally {\n      this._updated = false;\n    }\n  };\n  /**\n   *\n   * @returns {ClientCertificate|Promise<ClientCertificate>}\n   */\n  InternalRotatingClientCertificateProvider.prototype.getClientCertificate = function () {\n    return this._certificate;\n  };\n  /**\n   *\n   * @param certificate\n   * @returns {void}\n   */\n  InternalRotatingClientCertificateProvider.prototype.updateCertificate = function (certificate) {\n    if (!isClientClientCertificate(certificate)) {\n      throw new TypeError(\"certificate should be ClientCertificate, but got \".concat(json.stringify(certificate)));\n    }\n    this._certificate = __assign({}, certificate);\n    this._updated = true;\n  };\n  return InternalRotatingClientCertificateProvider;\n}();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__createBinding","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","exports","resolveCertificateProvider","clientCertificateProviders","RotatingClientCertificateProvider","ClientCertificateProvider","json","require","ClientCertificate","certfile","keyfile","password","default","hasUpdate","Error","getClientCertificate","_super","updateCertificate","certificate","ClientCertificateProviders","rotating","_a","initialCertificate","isClientClientCertificate","concat","stringify","InternalRotatingClientCertificateProvider","freeze","input","certificate_1","maybeClientCertificate","isCertFile","isKeyFile","isStringOrNotPresent","isString","isArrayOf","maybeKeyFile","check","obj","path","isType","allowEmpty","isArray","filter","valueName","_certificate","_updated"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-core/lib/client-certificate.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCertificateProvider = exports.clientCertificateProviders = exports.RotatingClientCertificateProvider = exports.ClientCertificateProvider = void 0;\nvar json = __importStar(require(\"./json\"));\n/**\n * Represents KeyFile represented as file.\n *\n * @typedef {object} KeyFileObject\n * @property {string} path - The path of the file\n * @property {string|undefined} password - the password of the key. If none,\n * the password defined at {@link ClientCertificate} will be used.\n */\n/**\n * Holds the Client TLS certificate information.\n *\n * Browser instances of the driver should configure the certificate\n * in the system.\n *\n * Files defined in the {@link ClientCertificate#certfile}\n * and {@link ClientCertificate#keyfile} will read and loaded to\n * memory to fill the fields `cert` and `key` in security context.\n *\n * @interface\n * @see https://nodejs.org/api/tls.html#tlscreatesecurecontextoptions\n * @since 5.27\n */\nvar ClientCertificate = /** @class */ (function () {\n    function ClientCertificate() {\n        /**\n         * The path to client certificate file.\n         *\n         * @type {string|string[]}\n         */\n        this.certfile = '';\n        /**\n         * The path to the key file.\n         *\n         * @type {string|string[]|KeyFileObject|KeyFileObject[]}\n         */\n        this.keyfile = '';\n        /**\n         * The key's password.\n         *\n         * @type {string|undefined}\n         */\n        this.password = undefined;\n    }\n    return ClientCertificate;\n}());\nexports.default = ClientCertificate;\n/**\n * Provides a client certificate to the driver for mutual TLS.\n *\n * The driver will call {@link ClientCertificateProvider#hasUpdate} to check if the client wants to update the certificate.\n * If so, it will call {@link ClientCertificateProvider#getClientCertificate} to get the new certificate.\n *\n * The certificate is only used as a second factor for authentication authenticating the client.\n * The DMBS user still needs to authenticate with an authentication token.\n *\n * All implementations of this interface must be thread-safe and non-blocking for caller threads.\n * For instance, IO operations must not be done on the calling thread.\n *\n * Note that the work done in the methods of this interface count towards the connectionAcquisition.\n * Should fetching the certificate be particularly slow, it might be necessary to increase the timeout.\n *\n * @interface\n * @since 5.27\n */\nvar ClientCertificateProvider = /** @class */ (function () {\n    function ClientCertificateProvider() {\n    }\n    /**\n     * Indicates whether the client wants the driver to update the certificate.\n     *\n     * @returns {Promise<boolean>|boolean} true if the client wants the driver to update the certificate\n     */\n    ClientCertificateProvider.prototype.hasUpdate = function () {\n        throw new Error('Not Implemented');\n    };\n    /**\n     * Returns the certificate to use for new connections.\n     *\n     * Will be called by the driver after {@link ClientCertificateProvider#hasUpdate} returned true\n     * or when the driver establishes the first connection.\n     *\n     * @returns {Promise<ClientCertificate>|ClientCertificate} the certificate to use for new connections\n     */\n    ClientCertificateProvider.prototype.getClientCertificate = function () {\n        throw new Error('Not Implemented');\n    };\n    return ClientCertificateProvider;\n}());\nexports.ClientCertificateProvider = ClientCertificateProvider;\n/**\n * Interface for  {@link ClientCertificateProvider} which provides update certificate function.\n * @interface\n * @since 5.27\n */\nvar RotatingClientCertificateProvider = /** @class */ (function (_super) {\n    __extends(RotatingClientCertificateProvider, _super);\n    function RotatingClientCertificateProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates the certificate stored in the provider.\n     *\n     * To be called by user-code when a new client certificate is available.\n     *\n     * @param {ClientCertificate} certificate - the new certificate\n     * @throws {TypeError} If initialCertificate is not a ClientCertificate.\n     */\n    RotatingClientCertificateProvider.prototype.updateCertificate = function (certificate) {\n        throw new Error('Not implemented');\n    };\n    return RotatingClientCertificateProvider;\n}(ClientCertificateProvider));\nexports.RotatingClientCertificateProvider = RotatingClientCertificateProvider;\n/**\n * Defines the object which holds the common {@link ClientCertificateProviders} used in the Driver\n *\n * @since 5.27\n */\nvar ClientCertificateProviders = /** @class */ (function () {\n    function ClientCertificateProviders() {\n    }\n    /**\n     *\n     * @param {object} param0 - The params\n     * @param {ClientCertificate} param0.initialCertificate - The certificated used by the driver until {@link RotatingClientCertificateProvider#updateCertificate} get called.\n     *\n     * @returns {RotatingClientCertificateProvider} The rotating client certificate provider\n     * @throws {TypeError} If initialCertificate is not a ClientCertificate.\n     */\n    ClientCertificateProviders.prototype.rotating = function (_a) {\n        var initialCertificate = _a.initialCertificate;\n        if (initialCertificate == null || !isClientClientCertificate(initialCertificate)) {\n            throw new TypeError(\"initialCertificate should be ClientCertificate, but got \".concat(json.stringify(initialCertificate)));\n        }\n        var certificate = __assign({}, initialCertificate);\n        return new InternalRotatingClientCertificateProvider(certificate);\n    };\n    return ClientCertificateProviders;\n}());\n/**\n * Holds the common {@link ClientCertificateProviders} used in the Driver.\n *\n * @since 5.27\n */\nvar clientCertificateProviders = new ClientCertificateProviders();\nexports.clientCertificateProviders = clientCertificateProviders;\nObject.freeze(clientCertificateProviders);\n/**\n * Resolves ClientCertificate or ClientCertificateProvider to a ClientCertificateProvider\n *\n * Method validates the input.\n *\n * @private\n * @param input\n * @returns {ClientCertificateProvider?} A client certificate provider if provided a ClientCertificate or a ClientCertificateProvider\n * @throws {TypeError} If input is not a ClientCertificate, ClientCertificateProvider, undefined or null.\n */\nfunction resolveCertificateProvider(input) {\n    if (input == null) {\n        return undefined;\n    }\n    if (typeof input === 'object' && 'hasUpdate' in input && 'getClientCertificate' in input &&\n        typeof input.getClientCertificate === 'function' && typeof input.hasUpdate === 'function') {\n        return input;\n    }\n    if (isClientClientCertificate(input)) {\n        var certificate_1 = __assign({}, input);\n        return {\n            getClientCertificate: function () { return certificate_1; },\n            hasUpdate: function () { return false; }\n        };\n    }\n    throw new TypeError(\"clientCertificate should be configured with ClientCertificate or ClientCertificateProvider, but got \".concat(json.stringify(input)));\n}\nexports.resolveCertificateProvider = resolveCertificateProvider;\n/**\n * Verify if object is a client certificate\n * @private\n * @param maybeClientCertificate - Maybe the certificate\n * @returns {boolean} if maybeClientCertificate is a client certificate object\n */\nfunction isClientClientCertificate(maybeClientCertificate) {\n    return maybeClientCertificate != null &&\n        typeof maybeClientCertificate === 'object' &&\n        'certfile' in maybeClientCertificate && isCertFile(maybeClientCertificate.certfile) &&\n        'keyfile' in maybeClientCertificate && isKeyFile(maybeClientCertificate.keyfile) &&\n        isStringOrNotPresent('password', maybeClientCertificate);\n}\n/**\n * Check value is a cert file\n * @private\n * @param {any} value the value\n * @returns {boolean} is a cert file\n */\nfunction isCertFile(value) {\n    return isString(value) || isArrayOf(value, isString);\n}\n/**\n * Check if the value is a keyfile.\n *\n * @private\n * @param {any} maybeKeyFile might be a keyfile value\n * @returns {boolean} the value is a KeyFile\n */\nfunction isKeyFile(maybeKeyFile) {\n    function check(obj) {\n        return typeof obj === 'string' ||\n            (obj != null &&\n                typeof obj === 'object' &&\n                'path' in obj && typeof obj.path === 'string' &&\n                isStringOrNotPresent('password', obj));\n    }\n    return check(maybeKeyFile) || isArrayOf(maybeKeyFile, check);\n}\n/**\n * Verify if value is string\n *\n * @private\n * @param {any} value the value\n * @returns {boolean} is string\n */\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * Verifies if value is a array of type\n *\n * @private\n * @param {any} value the value\n * @param {function} isType the type checker\n * @returns {boolean} value is array of type\n */\nfunction isArrayOf(value, isType, allowEmpty) {\n    if (allowEmpty === void 0) { allowEmpty = false; }\n    return Array.isArray(value) &&\n        (allowEmpty || value.length > 0) &&\n        value.filter(isType).length === value.length;\n}\n/**\n * Verify if valueName is present in the object and is a string, or not present at all.\n *\n * @private\n * @param {string} valueName The value in the object\n * @param {object} obj The object\n * @returns {boolean} if the value is present in object as string or not present\n */\nfunction isStringOrNotPresent(valueName, obj) {\n    return !(valueName in obj) || obj[valueName] == null || typeof obj[valueName] === 'string';\n}\n/**\n * Internal implementation\n *\n * @private\n */\nvar InternalRotatingClientCertificateProvider = /** @class */ (function () {\n    function InternalRotatingClientCertificateProvider(_certificate, _updated) {\n        if (_updated === void 0) { _updated = false; }\n        this._certificate = _certificate;\n        this._updated = _updated;\n    }\n    /**\n     *\n     * @returns {boolean|Promise<boolean>}\n     */\n    InternalRotatingClientCertificateProvider.prototype.hasUpdate = function () {\n        try {\n            return this._updated;\n        }\n        finally {\n            this._updated = false;\n        }\n    };\n    /**\n     *\n     * @returns {ClientCertificate|Promise<ClientCertificate>}\n     */\n    InternalRotatingClientCertificateProvider.prototype.getClientCertificate = function () {\n        return this._certificate;\n    };\n    /**\n     *\n     * @param certificate\n     * @returns {void}\n     */\n    InternalRotatingClientCertificateProvider.prototype.updateCertificate = function (certificate) {\n        if (!isClientClientCertificate(certificate)) {\n            throw new TypeError(\"certificate should be ClientCertificate, but got \".concat(json.stringify(certificate)));\n        }\n        this._certificate = __assign({}, certificate);\n        this._updated = true;\n    };\n    return InternalRotatingClientCertificateProvider;\n}());\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}