{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Common base with default implementation for most buffer methods.\n * Buffers are stateful - they track a current \"position\", this helps greatly\n * when reading and writing from them incrementally. You can also ignore the\n * stateful read/write methods.\n * readXXX and writeXXX-methods move the inner position of the buffer.\n * putXXX and getXXX-methods do not.\n * @access private\n */\nvar BaseBuffer = /** @class */function () {\n  /**\n   * Create a instance with the injected size.\n   * @constructor\n   * @param {Integer} size\n   */\n  function BaseBuffer(size) {\n    this.position = 0;\n    this.length = size;\n  }\n  BaseBuffer.prototype.getUInt8 = function (position) {\n    throw new Error('Not implemented');\n  };\n  BaseBuffer.prototype.getInt8 = function (position) {\n    throw new Error('Not implemented');\n  };\n  BaseBuffer.prototype.getFloat64 = function (position) {\n    throw new Error('Not implemented');\n  };\n  BaseBuffer.prototype.getVarInt = function (position) {\n    throw new Error('Not implemented');\n  };\n  BaseBuffer.prototype.putUInt8 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n  BaseBuffer.prototype.putInt8 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n  BaseBuffer.prototype.putFloat64 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n  /**\n   * @param p\n   */\n  BaseBuffer.prototype.getInt16 = function (p) {\n    return this.getInt8(p) << 8 | this.getUInt8(p + 1);\n  };\n  /**\n   * @param p\n   */\n  BaseBuffer.prototype.getUInt16 = function (p) {\n    return this.getUInt8(p) << 8 | this.getUInt8(p + 1);\n  };\n  /**\n   * @param p\n   */\n  BaseBuffer.prototype.getInt32 = function (p) {\n    return this.getInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n  };\n  /**\n   * @param p\n   */\n  BaseBuffer.prototype.getUInt32 = function (p) {\n    return this.getUInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n  };\n  /**\n   * @param p\n   */\n  BaseBuffer.prototype.getInt64 = function (p) {\n    return this.getInt8(p) << 56 | this.getUInt8(p + 1) << 48 | this.getUInt8(p + 2) << 40 | this.getUInt8(p + 3) << 32 | this.getUInt8(p + 4) << 24 | this.getUInt8(p + 5) << 16 | this.getUInt8(p + 6) << 8 | this.getUInt8(p + 7);\n  };\n  /**\n   * Get a slice of this buffer. This method does not copy any data,\n   * but simply provides a slice view of this buffer\n   * @param start\n   * @param length\n   */\n  BaseBuffer.prototype.getSlice = function (start, length) {\n    return new SliceBuffer(start, length, this);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n  BaseBuffer.prototype.putInt16 = function (p, val) {\n    this.putInt8(p, val >> 8);\n    this.putUInt8(p + 1, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n  BaseBuffer.prototype.putUInt16 = function (p, val) {\n    this.putUInt8(p, val >> 8 & 0xff);\n    this.putUInt8(p + 1, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n  BaseBuffer.prototype.putInt32 = function (p, val) {\n    this.putInt8(p, val >> 24);\n    this.putUInt8(p + 1, val >> 16 & 0xff);\n    this.putUInt8(p + 2, val >> 8 & 0xff);\n    this.putUInt8(p + 3, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n  BaseBuffer.prototype.putUInt32 = function (p, val) {\n    this.putUInt8(p, val >> 24 & 0xff);\n    this.putUInt8(p + 1, val >> 16 & 0xff);\n    this.putUInt8(p + 2, val >> 8 & 0xff);\n    this.putUInt8(p + 3, val & 0xff);\n  };\n  /**\n   * @param p\n   * @param val\n   */\n  BaseBuffer.prototype.putInt64 = function (p, val) {\n    this.putInt8(p, val >> 48);\n    this.putUInt8(p + 1, val >> 42 & 0xff);\n    this.putUInt8(p + 2, val >> 36 & 0xff);\n    this.putUInt8(p + 3, val >> 30 & 0xff);\n    this.putUInt8(p + 4, val >> 24 & 0xff);\n    this.putUInt8(p + 5, val >> 16 & 0xff);\n    this.putUInt8(p + 6, val >> 8 & 0xff);\n    this.putUInt8(p + 7, val & 0xff);\n  };\n  BaseBuffer.prototype.putVarInt = function (p, val) {\n    var length = 0;\n    while (val > 1) {\n      var int = val % 128;\n      if (val >= 128) {\n        int += 128;\n      }\n      val = val / 128;\n      this.putUInt8(p + length, int);\n      length += 1;\n    }\n    return length;\n  };\n  /**\n   * @param position\n   * @param other\n   */\n  BaseBuffer.prototype.putBytes = function (position, other) {\n    for (var i = 0, end = other.remaining(); i < end; i++) {\n      this.putUInt8(position + i, other.readUInt8());\n    }\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readUInt8 = function () {\n    return this.getUInt8(this._updatePos(1));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readInt8 = function () {\n    return this.getInt8(this._updatePos(1));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readUInt16 = function () {\n    return this.getUInt16(this._updatePos(2));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readUInt32 = function () {\n    return this.getUInt32(this._updatePos(4));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readInt16 = function () {\n    return this.getInt16(this._updatePos(2));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readInt32 = function () {\n    return this.getInt32(this._updatePos(4));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readInt64 = function () {\n    return this.getInt32(this._updatePos(8));\n  };\n  /**\n   * Read from state position.\n   */\n  BaseBuffer.prototype.readFloat64 = function () {\n    return this.getFloat64(this._updatePos(8));\n  };\n  /**\n   * Read from state position\n   */\n  BaseBuffer.prototype.readVarInt = function () {\n    var int = this.getVarInt(this.position);\n    this._updatePos(int.length);\n    return int.value;\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeUInt8 = function (val) {\n    this.putUInt8(this._updatePos(1), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeInt8 = function (val) {\n    this.putInt8(this._updatePos(1), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeInt16 = function (val) {\n    this.putInt16(this._updatePos(2), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeInt32 = function (val) {\n    this.putInt32(this._updatePos(4), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeUInt32 = function (val) {\n    this.putUInt32(this._updatePos(4), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeInt64 = function (val) {\n    this.putInt64(this._updatePos(8), val);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeFloat64 = function (val) {\n    this.putFloat64(this._updatePos(8), val);\n  };\n  BaseBuffer.prototype.writeVarInt = function (val) {\n    var length = this.putVarInt(this.position, val);\n    this._updatePos(length);\n  };\n  /**\n   * Write to state position.\n   * @param val\n   */\n  BaseBuffer.prototype.writeBytes = function (val) {\n    this.putBytes(this._updatePos(val.remaining()), val);\n  };\n  /**\n   * Get a slice of this buffer. This method does not copy any data,\n   * but simply provides a slice view of this buffer\n   * @param length\n   */\n  BaseBuffer.prototype.readSlice = function (length) {\n    return this.getSlice(this._updatePos(length), length);\n  };\n  BaseBuffer.prototype._updatePos = function (length) {\n    var p = this.position;\n    this.position += length;\n    return p;\n  };\n  /**\n   * Get remaining\n   */\n  BaseBuffer.prototype.remaining = function () {\n    return this.length - this.position;\n  };\n  /**\n   * Has remaining\n   */\n  BaseBuffer.prototype.hasRemaining = function () {\n    return this.remaining() > 0;\n  };\n  /**\n   * Reset position state\n   */\n  BaseBuffer.prototype.reset = function () {\n    this.position = 0;\n  };\n  /**\n   * Get string representation of buffer and it's state.\n   * @return {string} Buffer as a string\n   */\n  BaseBuffer.prototype.toString = function () {\n    return this.constructor.name + '( position=' + this.position + ' )\\n  ' + this.toHex();\n  };\n  /**\n   * Get string representation of buffer.\n   * @return {string} Buffer as a string\n   */\n  BaseBuffer.prototype.toHex = function () {\n    var out = '';\n    for (var i = 0; i < this.length; i++) {\n      var hexByte = this.getUInt8(i).toString(16);\n      if (hexByte.length === 1) {\n        hexByte = '0' + hexByte;\n      }\n      out += hexByte;\n      if (i !== this.length - 1) {\n        out += ' ';\n      }\n    }\n    return out;\n  };\n  return BaseBuffer;\n}();\nexports.default = BaseBuffer;\n/**\n * Represents a view as slice of another buffer.\n * @access private\n */\nvar SliceBuffer = /** @class */function (_super) {\n  __extends(SliceBuffer, _super);\n  function SliceBuffer(start, length, inner) {\n    var _this = _super.call(this, length) || this;\n    _this._start = start;\n    _this._inner = inner;\n    return _this;\n  }\n  SliceBuffer.prototype.putUInt8 = function (position, val) {\n    this._inner.putUInt8(this._start + position, val);\n  };\n  SliceBuffer.prototype.getUInt8 = function (position) {\n    return this._inner.getUInt8(this._start + position);\n  };\n  SliceBuffer.prototype.putInt8 = function (position, val) {\n    this._inner.putInt8(this._start + position, val);\n  };\n  SliceBuffer.prototype.putFloat64 = function (position, val) {\n    this._inner.putFloat64(this._start + position, val);\n  };\n  SliceBuffer.prototype.getInt8 = function (position) {\n    return this._inner.getInt8(this._start + position);\n  };\n  SliceBuffer.prototype.getFloat64 = function (position) {\n    return this._inner.getFloat64(this._start + position);\n  };\n  return SliceBuffer;\n}(BaseBuffer);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","BaseBuffer","size","position","length","getUInt8","Error","getInt8","getFloat64","getVarInt","putUInt8","val","putInt8","putFloat64","getInt16","getUInt16","getInt32","getUInt32","getInt64","getSlice","start","SliceBuffer","putInt16","putUInt16","putInt32","putUInt32","putInt64","putVarInt","int","putBytes","other","i","end","remaining","readUInt8","_updatePos","readInt8","readUInt16","readUInt32","readInt16","readInt32","readInt64","readFloat64","readVarInt","writeUInt8","writeInt8","writeInt16","writeInt32","writeUInt32","writeInt64","writeFloat64","writeVarInt","writeBytes","readSlice","hasRemaining","reset","toString","name","toHex","out","hexByte","default","_super","inner","_this","_start","_inner"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Common base with default implementation for most buffer methods.\n * Buffers are stateful - they track a current \"position\", this helps greatly\n * when reading and writing from them incrementally. You can also ignore the\n * stateful read/write methods.\n * readXXX and writeXXX-methods move the inner position of the buffer.\n * putXXX and getXXX-methods do not.\n * @access private\n */\nvar BaseBuffer = /** @class */ (function () {\n    /**\n     * Create a instance with the injected size.\n     * @constructor\n     * @param {Integer} size\n     */\n    function BaseBuffer(size) {\n        this.position = 0;\n        this.length = size;\n    }\n    BaseBuffer.prototype.getUInt8 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getInt8 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getFloat64 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getVarInt = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putUInt8 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putInt8 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putFloat64 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt16 = function (p) {\n        return (this.getInt8(p) << 8) | this.getUInt8(p + 1);\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getUInt16 = function (p) {\n        return (this.getUInt8(p) << 8) | this.getUInt8(p + 1);\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt32 = function (p) {\n        return ((this.getInt8(p) << 24) |\n            (this.getUInt8(p + 1) << 16) |\n            (this.getUInt8(p + 2) << 8) |\n            this.getUInt8(p + 3));\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getUInt32 = function (p) {\n        return ((this.getUInt8(p) << 24) |\n            (this.getUInt8(p + 1) << 16) |\n            (this.getUInt8(p + 2) << 8) |\n            this.getUInt8(p + 3));\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt64 = function (p) {\n        return ((this.getInt8(p) << 56) |\n            (this.getUInt8(p + 1) << 48) |\n            (this.getUInt8(p + 2) << 40) |\n            (this.getUInt8(p + 3) << 32) |\n            (this.getUInt8(p + 4) << 24) |\n            (this.getUInt8(p + 5) << 16) |\n            (this.getUInt8(p + 6) << 8) |\n            this.getUInt8(p + 7));\n    };\n    /**\n     * Get a slice of this buffer. This method does not copy any data,\n     * but simply provides a slice view of this buffer\n     * @param start\n     * @param length\n     */\n    BaseBuffer.prototype.getSlice = function (start, length) {\n        return new SliceBuffer(start, length, this);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt16 = function (p, val) {\n        this.putInt8(p, val >> 8);\n        this.putUInt8(p + 1, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putUInt16 = function (p, val) {\n        this.putUInt8(p, (val >> 8) & 0xff);\n        this.putUInt8(p + 1, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt32 = function (p, val) {\n        this.putInt8(p, val >> 24);\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\n        this.putUInt8(p + 3, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putUInt32 = function (p, val) {\n        this.putUInt8(p, (val >> 24) & 0xff);\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\n        this.putUInt8(p + 3, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt64 = function (p, val) {\n        this.putInt8(p, val >> 48);\n        this.putUInt8(p + 1, (val >> 42) & 0xff);\n        this.putUInt8(p + 2, (val >> 36) & 0xff);\n        this.putUInt8(p + 3, (val >> 30) & 0xff);\n        this.putUInt8(p + 4, (val >> 24) & 0xff);\n        this.putUInt8(p + 5, (val >> 16) & 0xff);\n        this.putUInt8(p + 6, (val >> 8) & 0xff);\n        this.putUInt8(p + 7, val & 0xff);\n    };\n    BaseBuffer.prototype.putVarInt = function (p, val) {\n        var length = 0;\n        while (val > 1) {\n            var int = val % 128;\n            if (val >= 128) {\n                int += 128;\n            }\n            val = val / 128;\n            this.putUInt8(p + length, int);\n            length += 1;\n        }\n        return length;\n    };\n    /**\n     * @param position\n     * @param other\n     */\n    BaseBuffer.prototype.putBytes = function (position, other) {\n        for (var i = 0, end = other.remaining(); i < end; i++) {\n            this.putUInt8(position + i, other.readUInt8());\n        }\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt8 = function () {\n        return this.getUInt8(this._updatePos(1));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt8 = function () {\n        return this.getInt8(this._updatePos(1));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt16 = function () {\n        return this.getUInt16(this._updatePos(2));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt32 = function () {\n        return this.getUInt32(this._updatePos(4));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt16 = function () {\n        return this.getInt16(this._updatePos(2));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt32 = function () {\n        return this.getInt32(this._updatePos(4));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt64 = function () {\n        return this.getInt32(this._updatePos(8));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readFloat64 = function () {\n        return this.getFloat64(this._updatePos(8));\n    };\n    /**\n     * Read from state position\n     */\n    BaseBuffer.prototype.readVarInt = function () {\n        var int = this.getVarInt(this.position);\n        this._updatePos(int.length);\n        return int.value;\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeUInt8 = function (val) {\n        this.putUInt8(this._updatePos(1), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt8 = function (val) {\n        this.putInt8(this._updatePos(1), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt16 = function (val) {\n        this.putInt16(this._updatePos(2), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt32 = function (val) {\n        this.putInt32(this._updatePos(4), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeUInt32 = function (val) {\n        this.putUInt32(this._updatePos(4), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt64 = function (val) {\n        this.putInt64(this._updatePos(8), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeFloat64 = function (val) {\n        this.putFloat64(this._updatePos(8), val);\n    };\n    BaseBuffer.prototype.writeVarInt = function (val) {\n        var length = this.putVarInt(this.position, val);\n        this._updatePos(length);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeBytes = function (val) {\n        this.putBytes(this._updatePos(val.remaining()), val);\n    };\n    /**\n     * Get a slice of this buffer. This method does not copy any data,\n     * but simply provides a slice view of this buffer\n     * @param length\n     */\n    BaseBuffer.prototype.readSlice = function (length) {\n        return this.getSlice(this._updatePos(length), length);\n    };\n    BaseBuffer.prototype._updatePos = function (length) {\n        var p = this.position;\n        this.position += length;\n        return p;\n    };\n    /**\n     * Get remaining\n     */\n    BaseBuffer.prototype.remaining = function () {\n        return this.length - this.position;\n    };\n    /**\n     * Has remaining\n     */\n    BaseBuffer.prototype.hasRemaining = function () {\n        return this.remaining() > 0;\n    };\n    /**\n     * Reset position state\n     */\n    BaseBuffer.prototype.reset = function () {\n        this.position = 0;\n    };\n    /**\n     * Get string representation of buffer and it's state.\n     * @return {string} Buffer as a string\n     */\n    BaseBuffer.prototype.toString = function () {\n        return (this.constructor.name +\n            '( position=' +\n            this.position +\n            ' )\\n  ' +\n            this.toHex());\n    };\n    /**\n     * Get string representation of buffer.\n     * @return {string} Buffer as a string\n     */\n    BaseBuffer.prototype.toHex = function () {\n        var out = '';\n        for (var i = 0; i < this.length; i++) {\n            var hexByte = this.getUInt8(i).toString(16);\n            if (hexByte.length === 1) {\n                hexByte = '0' + hexByte;\n            }\n            out += hexByte;\n            if (i !== this.length - 1) {\n                out += ' ';\n            }\n        }\n        return out;\n    };\n    return BaseBuffer;\n}());\nexports.default = BaseBuffer;\n/**\n * Represents a view as slice of another buffer.\n * @access private\n */\nvar SliceBuffer = /** @class */ (function (_super) {\n    __extends(SliceBuffer, _super);\n    function SliceBuffer(start, length, inner) {\n        var _this = _super.call(this, length) || this;\n        _this._start = start;\n        _this._inner = inner;\n        return _this;\n    }\n    SliceBuffer.prototype.putUInt8 = function (position, val) {\n        this._inner.putUInt8(this._start + position, val);\n    };\n    SliceBuffer.prototype.getUInt8 = function (position) {\n        return this._inner.getUInt8(this._start + position);\n    };\n    SliceBuffer.prototype.putInt8 = function (position, val) {\n        this._inner.putInt8(this._start + position, val);\n    };\n    SliceBuffer.prototype.putFloat64 = function (position, val) {\n        this._inner.putFloat64(this._start + position, val);\n    };\n    SliceBuffer.prototype.getInt8 = function (position) {\n        return this._inner.getInt8(this._start + position);\n    };\n    SliceBuffer.prototype.getFloat64 = function (position) {\n        return this._inner.getFloat64(this._start + position);\n    };\n    return SliceBuffer;\n}(BaseBuffer));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}