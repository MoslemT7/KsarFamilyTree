{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\El-Kasr Family Tree\\\\client\\\\src\\\\components\\\\RelationChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './RelationChecker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = require('./translation.json');\nrequire('dotenv').config();\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\nconst driver = require('neo4j-driver').driver(neo4jURI, require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword));\nconst session = driver.session();\nconst getPersonMatches = async (name, fatherName = \"\", grandfatherName = \"\", lastName) => {\n  let cypherQuery = ``;\n  const queryParamsObject = {};\n  if (personName) {\n    if (fatherName) {\n      if (grandfatherName) {\n        if (familyName) {\n          cypherQuery += `\n            MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\n            WHERE child.name = $personName AND \n                  father.name = $fatherName AND \n                  grandfather.name = $grandfatherName AND \n                  child.lastName = $familyName\n            RETURN child.name AS childName, father.name AS fatherName, grandfather.name AS grandfatherName, child.lastName AS familyName,  \n            child.YoB AS childYoB, child.gender AS childGender, id(child) AS childID,\n            child.isAlive AS lifeStatus, child.YoD AS YoD\n          `;\n          queryParamsObject.personName = name;\n          queryParamsObject.fatherName = fatherName;\n          queryParamsObject.grandfatherName = grandfatherName;\n          queryParamsObject.familyName = lastName;\n        } else {\n          cypherQuery += `\n            MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\n            WHERE child.name = $personName AND \n                  father.name = $fatherName AND \n                  grandfather.name = $grandfatherName\n            RETURN child.name AS childName, father.name AS fatherName, grandfather.name AS grandfatherName, \n            child.YoB AS childYoB, child.gender AS childGender, id(child) AS childID, child.isAlive AS lifeStatus, child.YoD AS YoD`;\n          queryParamsObject.personName = personName;\n          queryParamsObject.fatherName = fatherName;\n          queryParamsObject.grandfatherName = grandfatherName;\n        }\n      } else {\n        if (familyName) {\n          cypherQuery += `\n          MATCH (father:Person)-[:FATHER_OF]->(child:Person)\n          WHERE child.name = $personName AND \n                father.name = $fatherName AND\n                child.lastName = $familyName\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n          RETURN child.name AS childName, \n                father.name AS fatherName,\n                grandfather.name as grandfatherName,\n                child.lastName AS familyName,\n                child.YoB AS childYoB, \n                child.gender AS childGender, \n                id(child) AS childID,\n                child.isAlive AS lifeStatus, \n                child.YoD AS YoD\n          `;\n          queryParamsObject.personName = personName;\n          queryParamsObject.fatherName = fatherName;\n          queryParamsObject.familyName = familyName;\n        } else {\n          cypherQuery += `\n          MATCH (father:Person)-[:FATHER_OF]->(child:Person)\n          \n          WHERE child.name = $personName AND \n                father.name = $fatherName\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n          RETURN child.name AS childName, \n                  father.name AS fatherName, \n                  grandfather.name as grandfatherName,\n                  child.lastName AS familyName,\n                  child.YoB AS childYoB, \n                  child.gender AS childGender, \n                  id(child) AS childID, \n                  child.isAlive AS lifeStatus,\n                  child.YoD AS YoD\n          `;\n          queryParamsObject.personName = personName;\n          queryParamsObject.fatherName = fatherName;\n        }\n      }\n    } else {\n      if (familyName) {\n        cypherQuery += `\n        MATCH (child:Person)\n        WHERE child.name = $personName AND child.lastName = $familyName\n        OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\n        OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n        RETURN \n          child.name AS childName, \n          father.name AS fatherName,\n          grandfather.name AS grandfatherName,\n          child.lastName AS familyName,\n          child.YoB AS childYoB, \n          child.gender AS childGender, \n          id(child) AS childID,\n          child.isAlive AS lifeStatus,\n          child.YoD AS YoD\n      `;\n        queryParamsObject.personName = personName;\n        queryParamsObject.familyName = familyName;\n      } else {\n        cypherQuery += `\n          MATCH (child:Person)\n          WHERE child.name = $personName\n          OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\n          RETURN child.name AS childName, \n                child.YoB AS childYoB, \n                child.gender AS childGender,\n                father.name AS fatherName, \n                grandfather.name AS grandfatherName,\n                  child.lastName AS familyName,\n                id(child) AS childID,\n                child.isAlive AS lifeStatus,\n                child.YoD AS YoD\n\n        `;\n        queryParamsObject.personName = personName;\n      }\n    }\n  }\n  const params = {\n    name,\n    lastName,\n    fatherName,\n    grandfatherName\n  };\n  try {\n    const result = await session.run(query, params);\n    return result.records.map(record => ({\n      id: record.get('personID').toNumber(),\n      name: record.get('personName'),\n      father: record.get('fatherName') || \"Unknown\",\n      grandfather: record.get('grandfatherName') || \"Unknown\",\n      lastName: record.get('familyName')\n    }));\n  } catch (Error) {\n    console.error('Query Error:', Error);\n    setError('حدث خطأ أثناء البحث.');\n    setPersonDetails(null);\n  } finally {\n    await session.close();\n  }\n};\nfunction countBenAndBent(str) {\n  const matches = str.match(/\\b(ben|bent)\\b/gi);\n  return matches ? matches.length : 0;\n}\n\n// Function that split english translated name that may contain ben to full name only parts.\nfunction splitName(fullName) {\n  const parts = fullName.replace(/\\s+(ben|bent)\\s+/gi, ' ').trim().split(/\\s+/);\n  const bentCount = countBenAndBent(fullName);\n  if (parts.length === 2) {\n    if (bentCount === 0) {\n      return {\n        personName: parts[0],\n        fatherName: \"\",\n        grandfatherName: \"\",\n        familyName: parts[1]\n      };\n    } else if (bentCount === 1) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: \"\",\n        familyName: \"\"\n      };\n    }\n  } else if (parts.length === 3) {\n    if (bentCount === 1) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: \"\",\n        familyName: parts[2]\n      };\n    } else if (bentCount === 2) {\n      return {\n        personName: parts[0],\n        fatherName: parts[1],\n        grandfatherName: parts[2],\n        familyName: \"\"\n      };\n    }\n  } else if (parts.length === 4) {\n    return {\n      personName: parts[0],\n      fatherName: parts[1],\n      grandfatherName: parts[2],\n      familyName: parts[3]\n    };\n  }\n  // Default case if structure doesn't match\n  return {\n    personName: parts[0],\n    fatherName: \"\",\n    grandfatherName: \"\",\n    familyName: parts[1]\n  };\n}\nexport const translateName = (fullName, language = true) => {\n  const nameParts = fullName.split(' ');\n\n  // Build reverse translation map if needed\n  const reverseTranslations = Object.fromEntries(Object.entries(translations).map(([key, value]) => [value, key]));\n  const dict = language ? translations : reverseTranslations;\n  const translatedParts = nameParts.map(part => dict[part] || part);\n  return translatedParts.join(' ');\n};\nconst RelationPage = () => {\n  _s();\n  const [person1, setPerson1] = useState('');\n  const [person2, setPerson2] = useState('');\n  const [relationship, setRelationship] = useState('');\n  const [duplicates, setDuplicates] = useState({\n    person1: [],\n    person2: []\n  });\n  const [error, setError] = useState(null);\n  const [ancestorName, setAncestorName] = useState('');\n  const [ancestorLastName, setAncestorLastName] = useState('');\n  const FetchRelationship = async e => {\n    e.preventDefault();\n    const result = await getRelationship(person1, person2);\n    if (result.error === 'non-unique-name') {\n      setDuplicates(result.duplicates);\n      setRelationship(result.message); // optional message\n    } else {\n      setDuplicates({\n        person1: [],\n        person2: []\n      });\n      setRelationship(result);\n    }\n  };\n  const getRelationship = async (person1FullName, person2FullName) => {\n    const isArabic = text => /[\\u0600-\\u06FF]/.test(text);\n    let translatedName1, translatedName2;\n    if (isArabic(person1FullName)) {\n      translatedName1 = translateName(person1FullName, false);\n    } else {\n      translatedName1 = person1FullName;\n    }\n    if (isArabic(person2FullName)) {\n      translatedName2 = translateName(person2FullName, false);\n    } else {\n      translatedName2 = person2FullName;\n    }\n    const {\n      personName: person1Name,\n      fatherName: person1FatherName,\n      grandfatherName: person1GrandfatherName,\n      familyName: person1LastName\n    } = splitName(translatedName1);\n    console.log(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\n    const {\n      personName: person2Name,\n      fatherName: person2FatherName,\n      grandfatherName: person2GrandfatherName,\n      familyName: person2LastName\n    } = splitName(translatedName2);\n    const errorContainer = document.getElementById('error-container');\n    try {\n      const person1Matches = await getPersonMatches(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\n      if (person1Matches.length === 0) {\n        throw new Error(`لا يوجد أشخاص بإسم ${person1FullName} الرجاء التثبت في الإسم جيدا`);\n      }\n      const person2Matches = await getPersonMatches(person2Name, person2FatherName, person2GrandfatherName, person2LastName);\n      if (person2Matches.length === 0) {\n        throw new Error(`لا يوجد أشخاص بإسم ${person2FullName} الرجاء التثبت في الإسم جيدا`);\n      }\n      console.log(\"P1 matches : \", person1Matches);\n      console.log(\"P2 matches : \", person2Matches);\n      let person1ID, person2ID;\n      if (person1Matches.length > 1 || person2Matches.length > 1) {\n        return {\n          error: 'non-unique-name',\n          message: 'تم العثور على عدة أشخاص بنفس الاسم. الرجاء اختيار الصحيح.',\n          duplicates: {\n            person1: person1Matches.length > 1 ? person1Matches : [],\n            person2: person2Matches.length > 1 ? person2Matches : []\n          }\n        };\n      } else {\n        person1ID = person1Matches[0].id;\n        person2ID = person2Matches[0].id;\n      }\n      // Function that return the ancestors of a given person starting with the person itself and going up to the root.\n      const getAncestors = async (person1ID, person2ID) => {\n        const result = await session.run(`\n          MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..4]->(p1:Person)\n          WHERE id(p1) = $person1ID\n      \n          MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..4]->(p2:Person)\n          WHERE id(p2) = $person2ID\n            AND id(p1) <> id(p2)\n      \n          WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\n          ORDER BY (level1 + level2) ASC\n          LIMIT 1\n      \n          RETURN \n            common.name AS commonAncestorName,\n            common.lastName AS commonAncestorLastName,\n            id(common) AS commonAncestorID,\n            common.gender AS commonAncestorGender,\n            level1 AS generationsFromP1,\n            level2 AS generationsFromP2,\n            [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\n            [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\n        `, {\n          person1ID,\n          person2ID\n        });\n        if (result.records.length === 0) {\n          throw new Error('Person not found or no ancestors available.');\n        }\n        const record = result.records[0];\n        return {\n          id: record.get('commonAncestorID').toNumber(),\n          name: record.get('commonAncestorName'),\n          lastName: record.get('commonAncestorLastName'),\n          gender: record.get('commonAncestorGender'),\n          levelFromP1: record.get('generationsFromP1').toNumber(),\n          levelFromP2: record.get('generationsFromP2').toNumber(),\n          pathFromAncestorToP1: record.get('pathToP1'),\n          pathFromAncestorToP2: record.get('pathToP2')\n        };\n      };\n      let relationRecord = await getAncestors(person1ID, person2ID);\n      let ancestorID, ancestorName, ancestorLastName, ancestorGender;\n      let levelFromP1, levelFromP2, pathFromAncestorToP1, pathFromAncestorToP2;\n      ({\n        ancestorID,\n        ancestorName,\n        ancestorLastName,\n        ancestorGender,\n        levelFromP1,\n        levelFromP2,\n        pathFromAncestorToP1,\n        pathFromAncestorToP2\n      } = relationRecord);\n      const pathToP1 = pathFromAncestorToP1;\n      const pathToP2 = pathFromAncestorToP2;\n      console.log(pathFromAncestorToP1);\n      console.log(pathFromAncestorToP1.reverse().map(a => a.name).join(\" ben \"));\n      console.log(pathFromAncestorToP2.reverse().map(a => a.name).join(\" ben \"));\n      var p1Level = levelFromP1;\n      var p2Level = levelFromP2;\n      const translatedName1 = translateName(person1FullName);\n      const translatedName2 = translateName(person2FullName);\n      const gender1 = pathToP1[0].gender;\n      const gender2 = pathToP2[0].gender;\n      console.log(`Level: (${p1Level}, ${p2Level})`);\n      if (p1Level === 0 && p2Level === 1) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} هو والد ${translatedName2}`;\n        } else {\n          return `${translatedName1} هي والدة ${translatedName2}`;\n        }\n      } else if (p1Level === 1 && p2Level === 0) {\n        if (gender1 === 'Male') {\n          console.log(`${translatedName1} هو ابن ${translatedName2}`);\n          return `${translatedName1} هو ابن ${translatedName2}`;\n        } else {\n          console.log(`${translatedName1} هي إبنة ${person2FullName}`);\n          return `${translatedName1} هي إبنة ${translatedName2}`;\n        }\n      } else if (p1Level === 2 && p2Level === 0) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} هو حفيد ${translatedName2}`;\n        } else {\n          return `${translatedName1} هي حفيدة ${translatedName2}`;\n        }\n      } else if (p1Level === 0 && p2Level === 2) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} هو جدّ ${translatedName2}`;\n        } else {\n          return `${translatedName1} هي جدّة ${translatedName2}`;\n        }\n      } else if (p1Level === 3 && p2Level === 0) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} هو إبن حفيد ${translatedName2}`;\n        } else {\n          return `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\n        }\n      } else if (p1Level === 0 && p2Level === 3) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} و جد والد ${translatedName2}`;\n        } else {\n          return `${translatedName1} هي جدة والدة ${translatedName2}`;\n        }\n      } else if (p1Level === 1 && p2Level === 1) {\n        if (gender1 === 'Male' && gender2 === 'Male') {\n          return `${translatedName1} و ${translatedName2} إخوة`;\n        } else if (gender1 === 'Female' && gender2 === 'Female') {\n          return `${translatedName1} و ${translatedName2} أخوات`;\n        } else {\n          return `${translatedName1} و ${translatedName2} إخوة`;\n        }\n      } else if (p1Level === 2 && p2Level === 1) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} هو ابن أخ ${translatedName2}`;\n        } else {\n          return `${translatedName1} هي إبن أخ ${translatedName2}`;\n        }\n      } else if (p1Level === 1 && p2Level === 2) {\n        if (gender1 === 'Male') {\n          return `${translatedName1} هو عم ${translatedName2}'`;\n        } else {\n          return `${translatedName1} هي عمّة ${translatedName2}`;\n        }\n      } else if (p1Level === 2 && p2Level === 2) {\n        console.log(`${translatedName1} و ${translatedName2} أولاد العم.`);\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        if (gender1 === 'Male') {\n          if (p2AncestorGender === 'Male') {\n            if (p1AncestorGender === 'Male') {\n              // ولد عمه\n              return `${translatedName1} إبن عم ${translatedName2}`;\n            } else {\n              // ولد عمته\n              return `${translatedName1} هو إبن عمّة ${translatedName2}`;\n            }\n          } else {\n            if (p1AncestorGender === 'Male') {\n              // ولد خاله\n              return `${translatedName1} هو إبن خال ${translatedName2}`;\n            } else {\n              // ولد خالته\n              return `${translatedName1} هو إبن خالة ${translatedName2}`;\n            }\n          }\n        } else {\n          if (p1AncestorGender === 'Male') {\n            if (p2AncestorGender === 'Male') {\n              // بنت عمه\n              return `${translatedName1} هي إبنة عمّ ${translatedName2}`;\n            } else {\n              // بنت عمته\n              return `${translatedName1} هي إبنة عمّة ${translatedName2}`;\n            }\n          } else {\n            if (p2AncestorGender === 'Male') {\n              // بنت خاله\n              return `${translatedName1} هي إبنة خال ${translatedName2}`;\n            } else {\n              // بنت خالته\n              return `${translatedName1} هي إبنة خالة ${translatedName2}`;\n            }\n          }\n        }\n      } else if (p1Level === 2 && p2Level === 3) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        console.log(p1AncestorGender, p2AncestorGender);\n        if (gender1 === 'Male') {\n          if (p1AncestorGender === 'Male') {\n            // father's side\n            if (p2AncestorGender === 'Male') {\n              // father's brother's son\n              return `${translatedName1} هو إبن عم والد ${translatedName2}`;\n            } else {\n              return `${translatedName1} هو إبن عم والدة ${translatedName2}`;\n            }\n          } else {\n            // mother's side\n            if (p2AncestorGender === 'Male') {\n              // mother's brother's son\n              return `${translatedName1} هو إبن عمة والدة ${translatedName2}.`;\n            } else {\n              // mother's brother's daughter\n              return `${translatedName1} هو إبن عمّة والدة ${translatedName2}`;\n            }\n          }\n        } else {\n          // If person1 is female\n          if (p1AncestorGender === 'Male') {\n            // father's side\n            if (p2AncestorGender === 'Male') {\n              // father's brother's son\n              return `${translatedName1} هي إبنة عم والد ${translatedName2}`;\n            } else {\n              // father's brother's daughter\n              return `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\n            }\n          } else {\n            // mother's side\n            if (p2AncestorGender === 'Male') {\n              // mother's brother's son\n              return `${translatedName1} هي إبنة عمة والد ${translatedName2}`;\n            } else {\n              // mother's brother's daughter\n              return `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\n            }\n          }\n        }\n      } else if (p1Level === 3 && p2Level === 2) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        console.log(p1AncestorGender, p2AncestorGender);\n        if (p1AncestorGender === 'Male') {\n          // father's side\n          if (p2AncestorGender === 'Male') {\n            // father's brother's son\n            return `والد ${translatedName1} هو إبن عم ${translatedName2}`;\n          } else {\n            return `والد ${translatedName1} هو إبن خال ${translatedName2}`;\n          }\n        } else {\n          // mother's side\n          if (p2AncestorGender === 'Male') {\n            // mother's brother's son\n            return `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\n          } else {\n            // mother's brother's daughter\n            return `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\n          }\n        }\n      } else if (p1Level === 3 && p2Level === 3) {\n        const p1AncestorGender = pathToP1[1].gender;\n        const p2AncestorGender = pathToP2[1].gender;\n        const p1GreatAncestorGender = pathToP1[2].gender;\n        const p2GreatAncestorGender = pathToP2[2].gender;\n        if (p1AncestorGender === 'Male') {\n          if (p2AncestorGender === 'Male') {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n              } else {\n                return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\n              } else {\n                return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\n              }\n            }\n          } else {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\n              } else {\n                return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\n              } else {\n                return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            }\n          }\n        } else {\n          if (p2AncestorGender === 'Male') {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\n              } else {\n                return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\n              } else {\n                return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\n              }\n            }\n          } else {\n            if (p1GreatAncestorGender === 'Male') {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\n              } else {\n                return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            } else {\n              if (p2GreatAncestorGender === 'Male') {\n                return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\n              } else {\n                return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\n              }\n            }\n          }\n        }\n      }\n      console.log('No direct relation found.');\n      errorContainer.innerText = 'لا يوجد قرابة مباشرة.';\n      return '';\n    } catch (error) {\n      console.error('Error in relationship lookup:', error);\n\n      // Correctly use 'error' here instead of 'err'\n      setError(`❌ خطأ: ${error.message || error}`);\n\n      // Show the error message in the error container\n      if (errorContainer) {\n        errorContainer.innerText = `❌ خطأ: ${error.message || error}`;\n      }\n      return '';\n    }\n  };\n  const {\n    ancName,\n    ancLastName\n  } = {\n    ancestorName,\n    ancestorLastName\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relation-page\",\n    children: [(duplicates.person1.length > 0 || duplicates.person2.length > 0) && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"duplicates-panel\",\n      children: [duplicates.person1.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"duplicates-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0623\\u0643\\u062A\\u0628 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: duplicates.person1.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`\n          }, `p1-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this), duplicates.person2.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"duplicates-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0627\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D \\\"\", person2, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: duplicates.person2.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`\n          }, `p2-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relation-form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\u0645\\u0627\\u0647\\u064A \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\\u061F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"DescriptionZone\",\n          children: \"\\u0627\\u0644\\u0647\\u062F\\u0641 \\u0645\\u0646 \\u0647\\u0630\\u0647 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0647\\u0648 \\u062A\\u062D\\u062F\\u064A\\u062F \\u0635\\u0644\\u0629 \\u0627\\u0644\\u0642\\u0631\\u0627\\u0628\\u0629 \\u0628\\u064A\\u0646 \\u0634\\u062E\\u0635\\u064A\\u0646 \\u0628\\u0646\\u0627\\u0621\\u064B\\u0627 \\u0639\\u0644\\u0649 \\u0627\\u0633\\u0645\\u0647\\u0645. \\u0643\\u0644 \\u0645\\u0627\\u0639\\u0644\\u064A\\u0643 \\u0641\\u0639\\u0644\\u0647 \\u0647\\u0648 \\u0627\\u062F\\u062E\\u0627\\u0644 \\u0627\\u0644\\u0627\\u0633\\u0645 \\u0644\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0627\\u0648\\u0644 \\u0648\\u0627\\u0644\\u062B\\u0627\\u0646\\u064A \\u0648\\u062B\\u0645 \\u0627\\u0644\\u0646\\u0642\\u0631 \\u0639\\u0644\\u0649 \\\"\\u0627\\u0644\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\\\" \\u0633\\u062A\\u0638\\u0647\\u0631 \\u0644\\u0643 \\u0627\\u0644\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0641\\u064A \\u0627\\u0633\\u0647\\u0644 \\u0627\\u0644\\u0635\\u0641\\u062D\\u0629 \\u0648\\u0627\\u0644\\u062A\\u064A \\u064A\\u062A\\u0648\\u0636\\u062D \\u0644\\u0643 \\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629 \\u0648\\u0645\\u062F\\u0649 \\u0642\\u0631\\u0627\\u0628\\u062A\\u0647\\u0627\\u061F \\u0641\\u064A \\u062D\\u0627\\u0644 \\u0648\\u062C\\u0648\\u062F \\u0627\\u064A \\u062A\\u0634\\u0627\\u0628\\u0647\\u0627\\u062A \\u0627\\u0648 \\u062A\\u0643\\u0631\\u0627\\u0631\\u0627\\u062A \\u0641\\u064A \\u0627\\u0644\\u0627\\u0633\\u0645\\u0627\\u0621 \\u0633\\u064A\\u0645 \\u062A\\u0648\\u0641\\u064A\\u0631 \\u062E\\u064A\\u0627\\u0631\\u0627\\u062A \\u0644\\u062A\\u062D\\u062F\\u064A\\u062F \\u0627\\u0644\\u0634\\u062E\\u0635 \\u0627\\u0644\\u0635\\u062D\\u064A\\u062D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: FetchRelationship,\n          className: \"relation-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u0623\\u0648\\u0644\",\n              value: person1,\n              onChange: e => setPerson1(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0627\\u0644\\u0625\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \\u0627\\u0644\\u062B\\u0627\\u0646\\u064A\",\n              value: person2,\n              onChange: e => setPerson2(e.target.value),\n              className: \"inputNames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ButtonSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"checkButton\",\n              children: \"\\u062A\\u062D\\u0642\\u0642 \\u0645\\u0646 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"resetButton\",\n              children: \"\\u0625\\u0644\\u063A\\u0627\\u0621\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 17\n      }, this), \" \", relationship && !error && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"relationship-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"resultTitle\",\n          children: \"\\u0646\\u062A\\u064A\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"relationText\",\n          children: relationship\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"result-details\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"result-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062F\\u0631\\u062C\\u0629 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"score-cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"score-bar-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"score-bar-fill\",\n                      style: {\n                        width: '80%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 767,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 766,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"score-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"score-value\",\n                      children: \"80%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 770,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"score-category high\",\n                      children: \"\\u0642\\u0648\\u064A\\u0629\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0639\\u0644\\u0627\\u0642\\u0629\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"relationship-tag\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"tag blood\",\n                    children: \"\\u062F\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 777,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u062A\\u0641\\u0633\\u064A\\u0631 \\u0625\\u0636\\u0627\\u0641\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"relation-explanation\",\n                  children: \"\\u0647\\u0624\\u0644\\u0627\\u0621 \\u0627\\u0644\\u0634\\u062E\\u0635\\u064A\\u0646 \\u0645\\u0631\\u062A\\u0628\\u0637\\u064A\\u0646 \\u0639\\u0646 \\u0637\\u0631\\u064A\\u0642 \\u0627\\u0644\\u0623\\u0628\\u0646\\u0627\\u0621 \\u0648\\u0627\\u0644\\u0623\\u062C\\u062F\\u0627\\u062F.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0623\\u062C\\u064A\\u0627\\u0644 \\u0628\\u064A\\u0646\\u0647\\u0645\\u0627\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"generation-distance\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"numGen\",\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 51\n                  }, this), \" \\u0623\\u062C\\u064A\\u0627\\u0644\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u0623\\u0642\\u0631\\u0628 \\u062C\\u062F \\u0645\\u0634\\u062A\\u0631\\u0643\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 682,\n    columnNumber: 5\n  }, this);\n};\n_s(RelationPage, \"esK0f1HtHN5dnTqTOLu22ZVCHQw=\");\n_c = RelationPage;\nexport default RelationPage;\nvar _c;\n$RefreshReg$(_c, \"RelationPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","translations","require","config","neo4jURI","process","env","REACT_APP_NEO4J_URI","neo4jUser","REACT_APP_NEO4J_USER","neo4jPassword","REACT_APP_NEO4J_PASSWORD","driver","auth","basic","session","getPersonMatches","name","fatherName","grandfatherName","lastName","cypherQuery","queryParamsObject","personName","familyName","params","result","run","query","records","map","record","id","get","toNumber","father","grandfather","Error","console","error","setError","setPersonDetails","close","countBenAndBent","str","matches","match","length","splitName","fullName","parts","replace","trim","split","bentCount","translateName","language","nameParts","reverseTranslations","Object","fromEntries","entries","key","value","dict","translatedParts","part","join","RelationPage","_s","person1","setPerson1","person2","setPerson2","relationship","setRelationship","duplicates","setDuplicates","ancestorName","setAncestorName","ancestorLastName","setAncestorLastName","FetchRelationship","e","preventDefault","getRelationship","message","person1FullName","person2FullName","isArabic","text","test","translatedName1","translatedName2","person1Name","person1FatherName","person1GrandfatherName","person1LastName","log","person2Name","person2FatherName","person2GrandfatherName","person2LastName","errorContainer","document","getElementById","person1Matches","person2Matches","person1ID","person2ID","getAncestors","gender","levelFromP1","levelFromP2","pathFromAncestorToP1","pathFromAncestorToP2","relationRecord","ancestorID","ancestorGender","pathToP1","pathToP2","reverse","a","p1Level","p2Level","gender1","gender2","p1AncestorGender","p2AncestorGender","p1GreatAncestorGender","p2GreatAncestorGender","innerText","ancName","ancLastName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","p","idx","onSubmit","type","placeholder","onChange","target","class","style","width","_c","$RefreshReg$"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/src/components/RelationChecker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './RelationChecker.css';\r\nconst translations = require('./translation.json');\r\nrequire('dotenv').config();\r\n\r\nconst neo4jURI = process.env.REACT_APP_NEO4J_URI;\r\nconst neo4jUser = process.env.REACT_APP_NEO4J_USER;\r\nconst neo4jPassword = process.env.REACT_APP_NEO4J_PASSWORD;\r\n\r\nconst driver = require('neo4j-driver').driver(\r\n    neo4jURI,\r\n    require('neo4j-driver').auth.basic(neo4jUser, neo4jPassword)\r\n);\r\nconst session = driver.session();\r\nconst getPersonMatches = async (name, fatherName = \"\", grandfatherName = \"\", lastName) => {\r\n\r\n  let cypherQuery = ``;\r\n  const queryParamsObject = {};\r\n\r\n  if (personName){\r\n    \r\n    if (fatherName) {\r\n      \r\n      if (grandfatherName) {\r\n        \r\n        if (familyName) {\r\n          \r\n          cypherQuery += `\r\n            MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\r\n            WHERE child.name = $personName AND \r\n                  father.name = $fatherName AND \r\n                  grandfather.name = $grandfatherName AND \r\n                  child.lastName = $familyName\r\n            RETURN child.name AS childName, father.name AS fatherName, grandfather.name AS grandfatherName, child.lastName AS familyName,  \r\n            child.YoB AS childYoB, child.gender AS childGender, id(child) AS childID,\r\n            child.isAlive AS lifeStatus, child.YoD AS YoD\r\n          `;\r\n          \r\n          queryParamsObject.personName = name;\r\n          queryParamsObject.fatherName = fatherName;\r\n          queryParamsObject.grandfatherName = grandfatherName;\r\n          queryParamsObject.familyName = lastName;\r\n          \r\n        } \r\n        else {\r\n          cypherQuery += `\r\n            MATCH (grandfather:Person)-[:FATHER_OF]->(father:Person)-[:FATHER_OF]->(child:Person)\r\n            WHERE child.name = $personName AND \r\n                  father.name = $fatherName AND \r\n                  grandfather.name = $grandfatherName\r\n            RETURN child.name AS childName, father.name AS fatherName, grandfather.name AS grandfatherName, \r\n            child.YoB AS childYoB, child.gender AS childGender, id(child) AS childID, child.isAlive AS lifeStatus, child.YoD AS YoD`;\r\n          \r\n          queryParamsObject.personName = personName;\r\n          queryParamsObject.fatherName = fatherName;\r\n          queryParamsObject.grandfatherName = grandfatherName;\r\n        }\r\n        \r\n      } else {\r\n        if (familyName){\r\n          cypherQuery += `\r\n          MATCH (father:Person)-[:FATHER_OF]->(child:Person)\r\n          WHERE child.name = $personName AND \r\n                father.name = $fatherName AND\r\n                child.lastName = $familyName\r\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n          RETURN child.name AS childName, \r\n                father.name AS fatherName,\r\n                grandfather.name as grandfatherName,\r\n                child.lastName AS familyName,\r\n                child.YoB AS childYoB, \r\n                child.gender AS childGender, \r\n                id(child) AS childID,\r\n                child.isAlive AS lifeStatus, \r\n                child.YoD AS YoD\r\n          `;\r\n          queryParamsObject.personName = personName;\r\n          queryParamsObject.fatherName = fatherName;\r\n          queryParamsObject.familyName = familyName;\r\n        }\r\n        else{\r\n          cypherQuery += `\r\n          MATCH (father:Person)-[:FATHER_OF]->(child:Person)\r\n          \r\n          WHERE child.name = $personName AND \r\n                father.name = $fatherName\r\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n          RETURN child.name AS childName, \r\n                  father.name AS fatherName, \r\n                  grandfather.name as grandfatherName,\r\n                  child.lastName AS familyName,\r\n                  child.YoB AS childYoB, \r\n                  child.gender AS childGender, \r\n                  id(child) AS childID, \r\n                  child.isAlive AS lifeStatus,\r\n                  child.YoD AS YoD\r\n          `;\r\n          queryParamsObject.personName = personName;\r\n          queryParamsObject.fatherName = fatherName;\r\n        }\r\n        }\r\n    }\r\n    else {\r\n      if (familyName){\r\n        cypherQuery += `\r\n        MATCH (child:Person)\r\n        WHERE child.name = $personName AND child.lastName = $familyName\r\n        OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\r\n        OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n        RETURN \r\n          child.name AS childName, \r\n          father.name AS fatherName,\r\n          grandfather.name AS grandfatherName,\r\n          child.lastName AS familyName,\r\n          child.YoB AS childYoB, \r\n          child.gender AS childGender, \r\n          id(child) AS childID,\r\n          child.isAlive AS lifeStatus,\r\n          child.YoD AS YoD\r\n      `;\r\n      queryParamsObject.personName = personName;\r\n      queryParamsObject.familyName = familyName;\r\n      }\r\n      else{\r\n        cypherQuery += `\r\n          MATCH (child:Person)\r\n          WHERE child.name = $personName\r\n          OPTIONAL MATCH (father:Person)-[:FATHER_OF]->(child)\r\n          OPTIONAL MATCH (grandfather:Person)-[:FATHER_OF]->(father)\r\n          RETURN child.name AS childName, \r\n                child.YoB AS childYoB, \r\n                child.gender AS childGender,\r\n                father.name AS fatherName, \r\n                grandfather.name AS grandfatherName,\r\n                  child.lastName AS familyName,\r\n                id(child) AS childID,\r\n                child.isAlive AS lifeStatus,\r\n                child.YoD AS YoD\r\n\r\n        `;\r\n        queryParamsObject.personName = personName;\r\n      }\r\n    }\r\n  }\r\n\r\n  const params = { name, lastName, fatherName, grandfatherName };\r\n  try {\r\n    const result = await session.run(query, params);\r\n\r\n    return result.records.map(record => ({\r\n      id: record.get('personID').toNumber(),\r\n      name: record.get('personName'),\r\n      father: record.get('fatherName') || \"Unknown\",\r\n      grandfather: record.get('grandfatherName') || \"Unknown\",\r\n      lastName: record.get('familyName')\r\n    }));\r\n  } \r\n  catch (Error) {\r\n    console.error('Query Error:', Error);\r\n    setError('حدث خطأ أثناء البحث.');\r\n    setPersonDetails(null);\r\n  } \r\n  finally {\r\n    await session.close();\r\n  }\r\n\r\n};\r\n\r\nfunction countBenAndBent(str) {\r\n  const matches = str.match(/\\b(ben|bent)\\b/gi);\r\n  return matches ? matches.length : 0;\r\n}\r\n\r\n// Function that split english translated name that may contain ben to full name only parts.\r\nfunction splitName(fullName) {\r\n  const parts = fullName.replace(/\\s+(ben|bent)\\s+/gi, ' ').trim().split(/\\s+/);\r\n  const bentCount = countBenAndBent(fullName);\r\n  if (parts.length === 2) {\r\n    if (bentCount === 0){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: \"\",\r\n        grandfatherName: \"\",\r\n        familyName: parts[1]\r\n      };\r\n    }\r\n    else if (bentCount === 1){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: \"\",\r\n        familyName: \"\"\r\n      };\r\n    }\r\n    \r\n  } \r\n  else if (parts.length === 3) {\r\n    if (bentCount === 1){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: \"\",\r\n        familyName: parts[2]\r\n      };\r\n    }\r\n    else if (bentCount === 2){\r\n      return {\r\n        personName: parts[0],\r\n        fatherName: parts[1],\r\n        grandfatherName: parts[2],\r\n        familyName: \"\"\r\n      };\r\n    }\r\n    \r\n  } else if (parts.length === 4) {\r\n    return {\r\n      personName: parts[0],\r\n      fatherName: parts[1],\r\n      grandfatherName: parts[2],\r\n      familyName: parts[3]\r\n    };\r\n  }\r\n  // Default case if structure doesn't match\r\n  return { personName: parts[0], fatherName: \"\", grandfatherName: \"\", familyName: parts[1] };\r\n}\r\n\r\nexport const translateName = (fullName, language = true) => {\r\n  const nameParts = fullName.split(' ');\r\n\r\n  // Build reverse translation map if needed\r\n  const reverseTranslations = Object.fromEntries(\r\n    Object.entries(translations).map(([key, value]) => [value, key])\r\n  );\r\n\r\n  const dict = language ? translations : reverseTranslations;\r\n\r\n  const translatedParts = nameParts.map(part => dict[part] || part);\r\n\r\n  return translatedParts.join(' ');\r\n};\r\n\r\nconst RelationPage = () => {\r\n  const [person1, setPerson1] = useState('');\r\n  const [person2, setPerson2] = useState('');\r\n  const [relationship, setRelationship] = useState('');\r\n  const [duplicates, setDuplicates] = useState({ person1: [], person2: [] });\r\n  const [error, setError] = useState(null);\r\n  const [ancestorName, setAncestorName] = useState('');\r\n  const [ancestorLastName, setAncestorLastName] = useState('');\r\n\r\n  const FetchRelationship = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const result = await getRelationship(person1, person2);\r\n  \r\n    if (result.error === 'non-unique-name') {\r\n      setDuplicates(result.duplicates);\r\n      setRelationship(result.message); // optional message\r\n    } else {\r\n      setDuplicates({ person1: [], person2: [] });\r\n      setRelationship(result);\r\n    }\r\n  };\r\n  \r\n  const getRelationship = async (person1FullName, person2FullName) => {\r\n    const isArabic = (text) => /[\\u0600-\\u06FF]/.test(text);\r\n    let translatedName1, translatedName2;\r\n  \r\n    if (isArabic(person1FullName)){\r\n      translatedName1 = translateName(person1FullName, false);\r\n    }\r\n    else{\r\n      translatedName1 = person1FullName;\r\n    }\r\n    if (isArabic(person2FullName)){\r\n      translatedName2 = translateName(person2FullName, false);\r\n    }\r\n    else{\r\n      translatedName2 = person2FullName;\r\n    }\r\n    \r\n    const { personName: person1Name, fatherName: person1FatherName, grandfatherName: person1GrandfatherName, familyName: person1LastName } = splitName(translatedName1);\r\n    console.log(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\r\n    const { personName: person2Name, fatherName: person2FatherName, grandfatherName: person2GrandfatherName, familyName: person2LastName } = splitName(translatedName2);\r\n    const errorContainer = document.getElementById('error-container');\r\n    try {\r\n\r\n      const person1Matches = await getPersonMatches(person1Name, person1FatherName, person1GrandfatherName, person1LastName);\r\n      if (person1Matches.length === 0) {\r\n        throw new Error(`لا يوجد أشخاص بإسم ${person1FullName} الرجاء التثبت في الإسم جيدا`);\r\n      }\r\n  \r\n      const person2Matches = await getPersonMatches(person2Name, person2FatherName, person2GrandfatherName, person2LastName);\r\n      if (person2Matches.length === 0) {\r\n        throw new Error(`لا يوجد أشخاص بإسم ${person2FullName} الرجاء التثبت في الإسم جيدا`);\r\n      }\r\n  \r\n      console.log(\"P1 matches : \", person1Matches);\r\n      console.log(\"P2 matches : \", person2Matches);\r\n  \r\n      let person1ID, person2ID;\r\n      if (person1Matches.length > 1 || person2Matches.length > 1) {\r\n        return {\r\n          error: 'non-unique-name',\r\n          message: 'تم العثور على عدة أشخاص بنفس الاسم. الرجاء اختيار الصحيح.',\r\n          duplicates: {\r\n            person1: person1Matches.length > 1 ? person1Matches : [],\r\n            person2: person2Matches.length > 1 ? person2Matches : []\r\n          }\r\n        };\r\n      }\r\n      else{\r\n        person1ID = person1Matches[0].id;\r\n        person2ID = person2Matches[0].id;\r\n      }\r\n      // Function that return the ancestors of a given person starting with the person itself and going up to the root.\r\n      const getAncestors = async (person1ID, person2ID) => {\r\n        const result = await session.run(`\r\n          MATCH path1 = (common:Person)-[:FATHER_OF|MOTHER_OF*0..4]->(p1:Person)\r\n          WHERE id(p1) = $person1ID\r\n      \r\n          MATCH path2 = (common)-[:FATHER_OF|MOTHER_OF*0..4]->(p2:Person)\r\n          WHERE id(p2) = $person2ID\r\n            AND id(p1) <> id(p2)\r\n      \r\n          WITH common, path1, path2, length(path1) AS level1, length(path2) AS level2\r\n          ORDER BY (level1 + level2) ASC\r\n          LIMIT 1\r\n      \r\n          RETURN \r\n            common.name AS commonAncestorName,\r\n            common.lastName AS commonAncestorLastName,\r\n            id(common) AS commonAncestorID,\r\n            common.gender AS commonAncestorGender,\r\n            level1 AS generationsFromP1,\r\n            level2 AS generationsFromP2,\r\n            [n IN nodes(path1) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP1,\r\n            [n IN nodes(path2) | { id: id(n), name: n.name, lastName: n.lastName, gender: n.gender }] AS pathToP2\r\n        `, { person1ID, person2ID });\r\n      \r\n        if (result.records.length === 0) {\r\n          throw new Error('Person not found or no ancestors available.');\r\n        }    \r\n        const record = result.records[0];\r\n      \r\n        return {\r\n            id: record.get('commonAncestorID').toNumber(),\r\n            name: record.get('commonAncestorName'),\r\n            lastName: record.get('commonAncestorLastName'),\r\n            gender: record.get('commonAncestorGender'),\r\n            levelFromP1: record.get('generationsFromP1').toNumber(),\r\n            levelFromP2: record.get('generationsFromP2').toNumber(),\r\n            pathFromAncestorToP1: record.get('pathToP1'),\r\n            pathFromAncestorToP2: record.get('pathToP2')\r\n        };\r\n      };\r\n      \r\n      let relationRecord = await getAncestors(person1ID, person2ID);\r\n      let ancestorID, ancestorName, ancestorLastName, ancestorGender;\r\n      let levelFromP1, levelFromP2, pathFromAncestorToP1, pathFromAncestorToP2;\r\n\r\n      ({ \r\n        ancestorID, \r\n        ancestorName, \r\n        ancestorLastName, \r\n        ancestorGender, \r\n        levelFromP1, \r\n        levelFromP2, \r\n        pathFromAncestorToP1, \r\n        pathFromAncestorToP2 \r\n      } = relationRecord);\r\n\r\n      const pathToP1 = pathFromAncestorToP1;\r\n      const pathToP2 = pathFromAncestorToP2;\r\n      console.log(pathFromAncestorToP1);\r\n  \r\n      console.log(pathFromAncestorToP1.reverse().map(a => a.name).join(\" ben \"));\r\n      console.log(pathFromAncestorToP2.reverse().map(a => a.name).join(\" ben \"));\r\n  \r\n  \r\n      var p1Level = levelFromP1;\r\n      var p2Level = levelFromP2;\r\n            \r\n      const translatedName1 = translateName(person1FullName);\r\n      const translatedName2 = translateName(person2FullName);\r\n  \r\n      const gender1 = pathToP1[0].gender;\r\n      const gender2 = pathToP2[0].gender;\r\n  \r\n      console.log(`Level: (${p1Level}, ${p2Level})`);\r\n  \r\n      if (p1Level === 0 && p2Level === 1) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} هو والد ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي والدة ${translatedName2}`;\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 1 && p2Level === 0) {\r\n        if (gender1 === 'Male'){\r\n          console.log(`${translatedName1} هو ابن ${translatedName2}`);\r\n          return `${translatedName1} هو ابن ${translatedName2}`;\r\n        }\r\n        else{\r\n          console.log(`${translatedName1} هي إبنة ${person2FullName}`);\r\n          return `${translatedName1} هي إبنة ${translatedName2}`;\r\n        }\r\n      } \r\n  \r\n      else if (p1Level === 2 && p2Level === 0) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} هو حفيد ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي حفيدة ${translatedName2}`;\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 0 && p2Level === 2) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} هو جدّ ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي جدّة ${translatedName2}`;\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 3 && p2Level === 0) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} هو إبن حفيد ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي إبنة حفيدة ${translatedName2}`;\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 0 && p2Level === 3) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} و جد والد ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي جدة والدة ${translatedName2}`;\r\n        }\r\n      } \r\n      \r\n      else if (p1Level === 1 && p2Level === 1) {\r\n        if (gender1 === 'Male' && gender2 === 'Male'){\r\n          return `${translatedName1} و ${translatedName2} إخوة`;\r\n        }\r\n        else if (gender1 === 'Female' && gender2 === 'Female'){\r\n          return `${translatedName1} و ${translatedName2} أخوات`;\r\n        }\r\n        else{\r\n          return `${translatedName1} و ${translatedName2} إخوة`;\r\n        }\r\n      } \r\n      \r\n      else if (p1Level === 2 && p2Level === 1) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} هو ابن أخ ${translatedName2}`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي إبن أخ ${translatedName2}`;\r\n        }\r\n      } \r\n      \r\n      else if (p1Level === 1 && p2Level === 2) {\r\n        if (gender1 === 'Male'){\r\n          return `${translatedName1} هو عم ${translatedName2}'`;\r\n        }\r\n        else{\r\n          return `${translatedName1} هي عمّة ${translatedName2}`;\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 2 && p2Level === 2) {\r\n        console.log(`${translatedName1} و ${translatedName2} أولاد العم.`);\r\n    \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n  \r\n        if (gender1 === 'Male') { \r\n          if (p2AncestorGender === 'Male') { \r\n            if (p1AncestorGender === 'Male'){  // ولد عمه\r\n              return `${translatedName1} إبن عم ${translatedName2}`;\r\n            }\r\n            else{ // ولد عمته\r\n              return `${translatedName1} هو إبن عمّة ${translatedName2}`;\r\n            }\r\n          } \r\n          else {  \r\n            if (p1AncestorGender === 'Male'){  // ولد خاله\r\n              return `${translatedName1} هو إبن خال ${translatedName2}`;\r\n            }\r\n            else{ // ولد خالته\r\n              return `${translatedName1} هو إبن خالة ${translatedName2}`;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (p1AncestorGender === 'Male') { \r\n            if (p2AncestorGender === 'Male'){  // بنت عمه\r\n              return `${translatedName1} هي إبنة عمّ ${translatedName2}`;\r\n            }\r\n            else{ // بنت عمته\r\n              return `${translatedName1} هي إبنة عمّة ${translatedName2}`;\r\n            }\r\n          } \r\n          else {  \r\n            if (p2AncestorGender === 'Male'){  // بنت خاله\r\n              return `${translatedName1} هي إبنة خال ${translatedName2}`;\r\n            }\r\n            else{ // بنت خالته\r\n              return `${translatedName1} هي إبنة خالة ${translatedName2}`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      else if (p1Level === 2 && p2Level === 3) {         \r\n  \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n        console.log(p1AncestorGender, p2AncestorGender);\r\n        if (gender1 === 'Male') { \r\n          if (p1AncestorGender === 'Male') {  // father's side\r\n            if (p2AncestorGender === 'Male') {  // father's brother's son\r\n              return `${translatedName1} هو إبن عم والد ${translatedName2}`;\r\n            } else { \r\n              return `${translatedName1} هو إبن عم والدة ${translatedName2}`;\r\n            }\r\n          } else {  // mother's side\r\n            if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n              return `${translatedName1} هو إبن عمة والدة ${translatedName2}.`;\r\n            } else {  // mother's brother's daughter\r\n              return `${translatedName1} هو إبن عمّة والدة ${translatedName2}`;\r\n            }\r\n          }\r\n        } \r\n        else {  // If person1 is female\r\n          if (p1AncestorGender === 'Male') {  // father's side\r\n            if (p2AncestorGender === 'Male') {  // father's brother's son\r\n              return `${translatedName1} هي إبنة عم والد ${translatedName2}`;\r\n            } else {  // father's brother's daughter\r\n              return `${translatedName1} هي إبنة عم والدة ${translatedName2}`;\r\n            }\r\n          } else {  // mother's side\r\n            if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n              return `${translatedName1} هي إبنة عمة والد ${translatedName2}`;\r\n            } else {  // mother's brother's daughter\r\n              return `${translatedName1} هي إبنة عمة والدة ${translatedName2}`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      else if (p1Level === 3 && p2Level === 2) {          \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n        console.log(p1AncestorGender, p2AncestorGender);\r\n        if (p1AncestorGender === 'Male') {  // father's side\r\n          if (p2AncestorGender === 'Male') {  // father's brother's son\r\n            return `والد ${translatedName1} هو إبن عم ${translatedName2}`;\r\n          } else { \r\n            return `والد ${translatedName1} هو إبن خال ${translatedName2}`;\r\n          }\r\n        } \r\n        else {  // mother's side\r\n          if (p2AncestorGender === 'Male') {  // mother's brother's son\r\n            return `والدة ${translatedName1} هي إبنة عم ${translatedName2}`;\r\n          } else {  // mother's brother's daughter\r\n            return `والدة ${translatedName1} هي إبنة خال  ${translatedName2}`;\r\n          }\r\n        }\r\n      }\r\n      else if (p1Level === 3 && p2Level === 3) {          \r\n        \r\n        const p1AncestorGender = pathToP1[1].gender;\r\n        const p2AncestorGender = pathToP2[1].gender;\r\n        const p1GreatAncestorGender = pathToP1[2].gender;\r\n        const p2GreatAncestorGender = pathToP2[2].gender;\r\n\r\n        if (p1AncestorGender === 'Male') { \r\n          if (p2AncestorGender === 'Male'){\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّة ${translatedName1} من الأب و جد ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّ ${translatedName1} من الأب و جد ${translatedName2} من الأم إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّ ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّة ${translatedName1} من الأب و جد${translatedName2} من الأم إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّة ${translatedName1} من الأب و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (p2AncestorGender === 'Male'){\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّ ${translatedName1} من الأم و جد${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّة ${translatedName1} من الأم و جد ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب أخوات.`;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (p1GreatAncestorGender === 'Male'){\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّ ${translatedName1} من الأم و جد ${translatedName2} من الأم إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّ ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n            else {\r\n              if (p2GreatAncestorGender === 'Male'){\r\n                return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأب إخوة.`;\r\n              }\r\n              else{\r\n                return `جدّة ${translatedName1} من الأم و جدة ${translatedName2} من الأم إخوة.`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      console.log('No direct relation found.');\r\n      errorContainer.innerText = 'لا يوجد قرابة مباشرة.';\r\n      return '';\r\n    } catch (error) {\r\n      console.error('Error in relationship lookup:', error);\r\n    \r\n      // Correctly use 'error' here instead of 'err'\r\n      setError(`❌ خطأ: ${error.message || error}`);\r\n    \r\n      // Show the error message in the error container\r\n      if (errorContainer) {\r\n        errorContainer.innerText = `❌ خطأ: ${error.message || error}`;\r\n      }\r\n      return '';\r\n    }\r\n  };\r\n  const { ancName, ancLastName } = {ancestorName, ancestorLastName};\r\n\r\n  return (\r\n    <div className=\"relation-page\">\r\n    {/* Left Panel: Duplicate Suggestions */}\r\n    {(duplicates.person1.length > 0 || duplicates.person2.length > 0) && (\r\n      <aside className=\"duplicates-panel\">\r\n        {duplicates.person1.length > 0 && (\r\n          <section className=\"duplicates-group\">\r\n            <h3>أكتب الاسم الكامل للشخص الصحيح:</h3>\r\n            <ul>\r\n              {duplicates.person1.map((p, idx) => (\r\n                <li key={`p1-${idx}`}>\r\n                  {`${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n  \r\n        {duplicates.person2.length > 0 && (\r\n          <section className=\"duplicates-group\">\r\n            <h3>اختر الشخص الصحيح \"{person2}\"</h3>\r\n            <ul>\r\n              {duplicates.person2.map((p, idx) => (\r\n                <li key={`p2-${idx}`}>\r\n                  {`${translateName(p.name)} بن ${translateName(p.father)} بن ${translateName(p.grandfather)} ${translateName(p.lastName)}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n      </aside>\r\n    )}\r\n    { /* Panel for signaling errors  */}\r\n    \r\n    {/* Main Panel: Form + Result */}\r\n    <main className=\"main-panel\">\r\n      <section className=\"relation-form-section\">\r\n        <h2 className=\"section-title\">ماهي العلاقة بينهما؟</h2>\r\n        <p id=\"DescriptionZone\">\r\n          الهدف من هذه الصفحة هو تحديد صلة القرابة بين شخصين بناءًا على اسمهم. كل ماعليك فعله\r\n          هو ادخال الاسم للشخص الاول والثاني وثم النقر على \"التحقق من العلاقة\" ستظهر لك النتيجة في اسهل الصفحة\r\n          والتي يتوضح لك نوع العلاقة ومدى قرابتها؟ في حال وجود اي تشابهات او تكرارات في الاسماء سيم توفير خيارات لتحديد الشخص الصحيح\r\n        </p>\r\n        <form onSubmit={FetchRelationship} className=\"relation-form\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"الإسم الكامل الأول\"\r\n              value={person1}\r\n              onChange={(e) => setPerson1(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"الإسم الكامل الثاني\"\r\n              value={person2}\r\n              onChange={(e) => setPerson2(e.target.value)}\r\n              className=\"inputNames\"\r\n            />\r\n          </div>\r\n          <div className='ButtonSection'>\r\n            <button type=\"submit\" className=\"checkButton\">تحقق من العلاقة</button>\r\n            <button type=\"reset\" className='resetButton'>إلغاء</button>\r\n          </div>\r\n          \r\n        </form>\r\n      </section>\r\n\r\n  \r\n      {/* Result */}\r\n      {error && <div className=\"error-message\">{error}</div>} {/* Show the error message */}\r\n\r\n      {relationship && !error  && (\r\n        <section className=\"relationship-result\">\r\n          <h2 id=\"resultTitle\">نتيجة العلاقة</h2>\r\n          <p className=\"relationText\">{relationship}</p>\r\n  \r\n          <div class=\"result-details\">\r\n            <table class=\"result-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>درجة العلاقة</th>\r\n                  <td class=\"score-cell\">\r\n                    <div class=\"score-bar-wrapper\">\r\n                      <div class=\"score-bar-fill\" style={{width: '80%'}}></div>\r\n                    </div>\r\n                    <div class=\"score-meta\">\r\n                      <span class=\"score-value\">80%</span>\r\n                      <span class=\"score-category high\">قوية</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>نوع العلاقة</th>\r\n                  <td class=\"relationship-tag\"><span class=\"tag blood\">دم</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <th>تفسير إضافي</th>\r\n                  <td class=\"relation-explanation\">\r\n                    هؤلاء الشخصين مرتبطين عن طريق الأبناء والأجداد.\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>عدد الأجيال بينهما</th>\r\n                  <td class=\"generation-distance\"><span id=\"numGen\">5</span> أجيال</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>أقرب جد مشترك</th>\r\n                  {/* <td class=\"common-ancestor\"> {translateName(ancName)} {translateName(ancLastName)}</td> */}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n        </section>\r\n      )}\r\n    </main>\r\n  </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default RelationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}