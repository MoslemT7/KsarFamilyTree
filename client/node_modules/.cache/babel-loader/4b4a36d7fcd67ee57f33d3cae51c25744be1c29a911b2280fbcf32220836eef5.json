{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar result_eager_1 = __importDefault(require(\"./result-eager\"));\nvar error_1 = require(\"./error\");\n/**\n * Protocol for transforming {@link Result}.\n *\n * @typedef {function<T>(result:Result):Promise<T>} ResultTransformer\n * @interface\n *\n * @see {@link resultTransformers} for provided implementations.\n * @see {@link Driver#executeQuery} for usage.\n */\n/**\n * Defines the object which holds the common {@link ResultTransformer} used with {@link Driver#executeQuery}.\n */\nvar ResultTransformers = /** @class */function () {\n  function ResultTransformers() {}\n  /**\n   * Creates a {@link ResultTransformer} which transforms {@link Result} to {@link EagerResult}\n   * by consuming the whole stream.\n   *\n   * This is the default implementation used in {@link Driver#executeQuery}\n   *\n   * @example\n   * // This:\n   * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\n   *   resultTransformer: neo4j.resultTransformers.eagerResultTransformer()\n   * })\n   * // is equivalent to:\n   * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\n   *\n   * @returns {ResultTransformer<EagerResult<Entries>>} The result transformer\n   * @alias {@link ResultTransformers#eager}\n   */\n  ResultTransformers.prototype.eagerResultTransformer = function () {\n    return createEagerResultFromResult;\n  };\n  /**\n   * Creates a {@link ResultTransformer} which transforms {@link Result} to {@link EagerResult}\n   * by consuming the whole stream.\n   *\n   * This is the default implementation used in {@link Driver#executeQuery} and a alias to\n   * {@link resultTransformers.eagerResultTransformer}\n   *\n   * @example\n   * // This:\n   * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\n   *   resultTransformer: neo4j.resultTransformers.eager()\n   * })\n   * // is equivalent to:\n   * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\n   *\n   * @returns {ResultTransformer<EagerResult<Entries>>} The result transformer\n   * @experimental this is a preview\n   * @since 5.22.0\n   * @alias {@link ResultTransformers#eagerResultTransformer}\n   */\n  ResultTransformers.prototype.eager = function () {\n    return createEagerResultFromResult;\n  };\n  /**\n   * Creates a {@link ResultTransformer} which maps the {@link Record} in the result and collects it\n   * along with the {@link ResultSummary} and {@link Result#keys}.\n   *\n   * NOTE: The config object requires map or/and collect to be valid.\n   *\n   * @example\n   * // Mapping the records\n   * const { keys, records, summary } = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\n   *     map(record) {\n   *        return record.get('name')\n   *     }\n   *   })\n   * })\n   *\n   * records.forEach(name => console.log(`${name} has 25`))\n   *\n   * @example\n   * // Mapping records and collect result\n   * const names = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\n   *     map(record) {\n   *        return record.get('name')\n   *     },\n   *     collect(records, summary, keys) {\n   *        return records\n   *     }\n   *   })\n   * })\n   *\n   * names.forEach(name => console.log(`${name} has 25`))\n   *\n   * @example\n   * // The transformer can be defined one and used everywhere\n   * const getRecordsAsObjects = neo4j.resultTransformers.mappedResultTransformer({\n   *   map(record) {\n   *      return record.toObject()\n   *   },\n   *   collect(objects) {\n   *      return objects\n   *   }\n   * })\n   *\n   * // The usage in a driver.executeQuery\n   * const objects = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: getRecordsAsObjects\n   * })\n   * objects.forEach(object => console.log(`${object.name} has 25`))\n   *\n   *\n   * // The usage in session.executeRead\n   * const objects = await session.executeRead(tx => getRecordsAsObjects(tx.run('MATCH (p:Person{ age: $age }) RETURN p.name as name')))\n   * objects.forEach(object => console.log(`${object.name} has 25`))\n   *\n   * @param {object} config The result transformer configuration\n   * @param {function(record:Record):R} [config.map=function(record) {  return record }] Method called for mapping each record\n   * @param {function(records:R[], summary:ResultSummary, keys:string[]):T} [config.collect=function(records, summary, keys) { return { records, summary, keys }}] Method called for mapping\n   * the result data to the transformer output.\n   * @returns {ResultTransformer<T>} The result transformer\n   * @see {@link Driver#executeQuery}\n   */\n  ResultTransformers.prototype.mappedResultTransformer = function (config) {\n    return createMappedResultTransformer(config);\n  };\n  /**\n   * Creates a {@link ResultTransformer} which maps the {@link Record} in the result and collects it\n   * along with the {@link ResultSummary} and {@link Result#keys}.\n   *\n   * NOTE: The config object requires map or/and collect to be valid.\n   *\n   * This method is a alias to {@link ResultTransformers#mappedResultTransformer}\n   *\n   *\n   * @example\n   * // Mapping the records\n   * const { keys, records, summary } = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: neo4j.resultTransformers.mapped({\n   *     map(record) {\n   *        return record.get('name')\n   *     }\n   *   })\n   * })\n   *\n   * records.forEach(name => console.log(`${name} has 25`))\n   *\n   * @example\n   * // Mapping records and collect result\n   * const names = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: neo4j.resultTransformers.mapped({\n   *     map(record) {\n   *        return record.get('name')\n   *     },\n   *     collect(records, summary, keys) {\n   *        return records\n   *     }\n   *   })\n   * })\n   *\n   * names.forEach(name => console.log(`${name} has 25`))\n   *\n   * @example\n   * // The transformer can be defined one and used everywhere\n   * const getRecordsAsObjects = neo4j.resultTransformers.mapped({\n   *   map(record) {\n   *      return record.toObject()\n   *   },\n   *   collect(objects) {\n   *      return objects\n   *   }\n   * })\n   *\n   * // The usage in a driver.executeQuery\n   * const objects = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: getRecordsAsObjects\n   * })\n   * objects.forEach(object => console.log(`${object.name} has 25`))\n   *\n   *\n   * // The usage in session.executeRead\n   * const objects = await session.executeRead(tx => getRecordsAsObjects(tx.run('MATCH (p:Person{ age: $age }) RETURN p.name as name')))\n   * objects.forEach(object => console.log(`${object.name} has 25`))\n   *\n   * @param {object} config The result transformer configuration\n   * @param {function(record:Record):R} [config.map=function(record) {  return record }] Method called for mapping each record\n   * @param {function(records:R[], summary:ResultSummary, keys:string[]):T} [config.collect=function(records, summary, keys) { return { records, summary, keys }}] Method called for mapping\n   * the result data to the transformer output.\n   * @returns {ResultTransformer<T>} The result transformer\n   * @experimental This is a preview feature\n   * @alias {@link ResultTransformers#mappedResultTransformer}\n   * @since 5.22.0\n   * @see {@link Driver#executeQuery}\n   */\n  ResultTransformers.prototype.mapped = function (config) {\n    return createMappedResultTransformer(config);\n  };\n  /**\n   * Creates a {@link ResultTransformer} which collects the first record {@link Record} of {@link Result}\n   * and discard the rest of the records, if existent.\n   *\n   * @example\n   * // Using in executeQuery\n   * const maybeFirstRecord = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n   *   resultTransformer: neo4j.resultTransformers.first()\n   * })\n   *\n   * @example\n   * // Using in other results\n   * const record = await neo4j.resultTransformers.first()(result)\n   *\n   *\n   * @template Entries The shape of the record.\n   * @returns {ResultTransformer<Record<Entries>|undefined>} The result transformer\n   * @see {@link Driver#executeQuery}\n   * @experimental This is a preview feature.\n   * @since 5.22.0\n   */\n  ResultTransformers.prototype.first = function () {\n    return first;\n  };\n  /**\n   * Creates a {@link ResultTransformer} which consumes the result and returns the {@link ResultSummary}.\n   *\n   * This result transformer is a shortcut to `(result) => result.summary()`.\n   *\n   * @example\n   * const summary = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\n   *   resultTransformer: neo4j.resultTransformers.summary()\n   * })\n   *\n   * @returns {ResultTransformer<ResultSummary<T>>} The result transformer\n   * @see {@link Driver#executeQuery}\n   * @experimental This is a preview feature\n   */\n  ResultTransformers.prototype.summary = function () {\n    return summary;\n  };\n  return ResultTransformers;\n}();\n/**\n * Holds the common {@link ResultTransformer} used with {@link Driver#executeQuery}.\n */\nvar resultTransformers = new ResultTransformers();\nObject.freeze(resultTransformers);\nexports.default = resultTransformers;\nfunction createEagerResultFromResult(result) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, summary, records, keys;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, result];\n        case 1:\n          _a = _b.sent(), summary = _a.summary, records = _a.records;\n          return [4 /*yield*/, result.keys()];\n        case 2:\n          keys = _b.sent();\n          return [2 /*return*/, new result_eager_1.default(keys, records, summary)];\n      }\n    });\n  });\n}\nfunction createMappedResultTransformer(config) {\n  var _this = this;\n  if (config == null || config.collect == null && config.map == null) {\n    throw (0, error_1.newError)('Requires a map or/and a collect functions.');\n  }\n  return function (result) {\n    return __awaiter(_this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, new Promise(function (resolve, reject) {\n              var state = {\n                records: [],\n                keys: []\n              };\n              result.subscribe({\n                onKeys: function (keys) {\n                  state.keys = keys;\n                },\n                onNext: function (record) {\n                  if (config.map != null) {\n                    var mappedRecord = config.map(record);\n                    if (mappedRecord !== undefined) {\n                      state.records.push(mappedRecord);\n                    }\n                  } else {\n                    state.records.push(record);\n                  }\n                },\n                onCompleted: function (summary) {\n                  if (config.collect != null) {\n                    resolve(config.collect(state.records, summary, state.keys));\n                  } else {\n                    var obj = {\n                      records: state.records,\n                      summary: summary,\n                      keys: state.keys\n                    };\n                    resolve(obj);\n                  }\n                },\n                onError: function (error) {\n                  reject(error);\n                }\n              });\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n}\nfunction first(result) {\n  return __awaiter(this, void 0, void 0, function () {\n    var it, _a, value, done;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          it = result[Symbol.asyncIterator]();\n          return [4 /*yield*/, it.next()];\n        case 1:\n          _a = _b.sent(), value = _a.value, done = _a.done;\n          _b.label = 2;\n        case 2:\n          _b.trys.push([2,, 3, 6]);\n          if (done === true) {\n            return [2 /*return*/, undefined];\n          }\n          return [2 /*return*/, value];\n        case 3:\n          if (!(it.return != null)) return [3 /*break*/, 5];\n          return [4 /*yield*/, it.return()];\n        case 4:\n          _b.sent();\n          _b.label = 5;\n        case 5:\n          return [7 /*endfinally*/];\n        case 6:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\nfunction summary(result) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, result.summary()];\n        case 1:\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","result_eager_1","require","error_1","ResultTransformers","prototype","eagerResultTransformer","createEagerResultFromResult","eager","mappedResultTransformer","config","createMappedResultTransformer","mapped","first","summary","resultTransformers","freeze","default","_a","records","keys","_b","_this","collect","map","newError","state","subscribe","onKeys","onNext","record","mappedRecord","undefined","onCompleted","obj","onError","error","it","asyncIterator","return"],"sources":["D:/Study/Projects/El-Kasr Family Tree/client/node_modules/neo4j-driver-core/lib/result-transformers.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar result_eager_1 = __importDefault(require(\"./result-eager\"));\nvar error_1 = require(\"./error\");\n/**\n * Protocol for transforming {@link Result}.\n *\n * @typedef {function<T>(result:Result):Promise<T>} ResultTransformer\n * @interface\n *\n * @see {@link resultTransformers} for provided implementations.\n * @see {@link Driver#executeQuery} for usage.\n */\n/**\n * Defines the object which holds the common {@link ResultTransformer} used with {@link Driver#executeQuery}.\n */\nvar ResultTransformers = /** @class */ (function () {\n    function ResultTransformers() {\n    }\n    /**\n     * Creates a {@link ResultTransformer} which transforms {@link Result} to {@link EagerResult}\n     * by consuming the whole stream.\n     *\n     * This is the default implementation used in {@link Driver#executeQuery}\n     *\n     * @example\n     * // This:\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\n     *   resultTransformer: neo4j.resultTransformers.eagerResultTransformer()\n     * })\n     * // is equivalent to:\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\n     *\n     * @returns {ResultTransformer<EagerResult<Entries>>} The result transformer\n     * @alias {@link ResultTransformers#eager}\n     */\n    ResultTransformers.prototype.eagerResultTransformer = function () {\n        return createEagerResultFromResult;\n    };\n    /**\n     * Creates a {@link ResultTransformer} which transforms {@link Result} to {@link EagerResult}\n     * by consuming the whole stream.\n     *\n     * This is the default implementation used in {@link Driver#executeQuery} and a alias to\n     * {@link resultTransformers.eagerResultTransformer}\n     *\n     * @example\n     * // This:\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\n     *   resultTransformer: neo4j.resultTransformers.eager()\n     * })\n     * // is equivalent to:\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\n     *\n     * @returns {ResultTransformer<EagerResult<Entries>>} The result transformer\n     * @experimental this is a preview\n     * @since 5.22.0\n     * @alias {@link ResultTransformers#eagerResultTransformer}\n     */\n    ResultTransformers.prototype.eager = function () {\n        return createEagerResultFromResult;\n    };\n    /**\n     * Creates a {@link ResultTransformer} which maps the {@link Record} in the result and collects it\n     * along with the {@link ResultSummary} and {@link Result#keys}.\n     *\n     * NOTE: The config object requires map or/and collect to be valid.\n     *\n     * @example\n     * // Mapping the records\n     * const { keys, records, summary } = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\n     *     map(record) {\n     *        return record.get('name')\n     *     }\n     *   })\n     * })\n     *\n     * records.forEach(name => console.log(`${name} has 25`))\n     *\n     * @example\n     * // Mapping records and collect result\n     * const names = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\n     *     map(record) {\n     *        return record.get('name')\n     *     },\n     *     collect(records, summary, keys) {\n     *        return records\n     *     }\n     *   })\n     * })\n     *\n     * names.forEach(name => console.log(`${name} has 25`))\n     *\n     * @example\n     * // The transformer can be defined one and used everywhere\n     * const getRecordsAsObjects = neo4j.resultTransformers.mappedResultTransformer({\n     *   map(record) {\n     *      return record.toObject()\n     *   },\n     *   collect(objects) {\n     *      return objects\n     *   }\n     * })\n     *\n     * // The usage in a driver.executeQuery\n     * const objects = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: getRecordsAsObjects\n     * })\n     * objects.forEach(object => console.log(`${object.name} has 25`))\n     *\n     *\n     * // The usage in session.executeRead\n     * const objects = await session.executeRead(tx => getRecordsAsObjects(tx.run('MATCH (p:Person{ age: $age }) RETURN p.name as name')))\n     * objects.forEach(object => console.log(`${object.name} has 25`))\n     *\n     * @param {object} config The result transformer configuration\n     * @param {function(record:Record):R} [config.map=function(record) {  return record }] Method called for mapping each record\n     * @param {function(records:R[], summary:ResultSummary, keys:string[]):T} [config.collect=function(records, summary, keys) { return { records, summary, keys }}] Method called for mapping\n     * the result data to the transformer output.\n     * @returns {ResultTransformer<T>} The result transformer\n     * @see {@link Driver#executeQuery}\n     */\n    ResultTransformers.prototype.mappedResultTransformer = function (config) {\n        return createMappedResultTransformer(config);\n    };\n    /**\n     * Creates a {@link ResultTransformer} which maps the {@link Record} in the result and collects it\n     * along with the {@link ResultSummary} and {@link Result#keys}.\n     *\n     * NOTE: The config object requires map or/and collect to be valid.\n     *\n     * This method is a alias to {@link ResultTransformers#mappedResultTransformer}\n     *\n     *\n     * @example\n     * // Mapping the records\n     * const { keys, records, summary } = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: neo4j.resultTransformers.mapped({\n     *     map(record) {\n     *        return record.get('name')\n     *     }\n     *   })\n     * })\n     *\n     * records.forEach(name => console.log(`${name} has 25`))\n     *\n     * @example\n     * // Mapping records and collect result\n     * const names = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: neo4j.resultTransformers.mapped({\n     *     map(record) {\n     *        return record.get('name')\n     *     },\n     *     collect(records, summary, keys) {\n     *        return records\n     *     }\n     *   })\n     * })\n     *\n     * names.forEach(name => console.log(`${name} has 25`))\n     *\n     * @example\n     * // The transformer can be defined one and used everywhere\n     * const getRecordsAsObjects = neo4j.resultTransformers.mapped({\n     *   map(record) {\n     *      return record.toObject()\n     *   },\n     *   collect(objects) {\n     *      return objects\n     *   }\n     * })\n     *\n     * // The usage in a driver.executeQuery\n     * const objects = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: getRecordsAsObjects\n     * })\n     * objects.forEach(object => console.log(`${object.name} has 25`))\n     *\n     *\n     * // The usage in session.executeRead\n     * const objects = await session.executeRead(tx => getRecordsAsObjects(tx.run('MATCH (p:Person{ age: $age }) RETURN p.name as name')))\n     * objects.forEach(object => console.log(`${object.name} has 25`))\n     *\n     * @param {object} config The result transformer configuration\n     * @param {function(record:Record):R} [config.map=function(record) {  return record }] Method called for mapping each record\n     * @param {function(records:R[], summary:ResultSummary, keys:string[]):T} [config.collect=function(records, summary, keys) { return { records, summary, keys }}] Method called for mapping\n     * the result data to the transformer output.\n     * @returns {ResultTransformer<T>} The result transformer\n     * @experimental This is a preview feature\n     * @alias {@link ResultTransformers#mappedResultTransformer}\n     * @since 5.22.0\n     * @see {@link Driver#executeQuery}\n     */\n    ResultTransformers.prototype.mapped = function (config) {\n        return createMappedResultTransformer(config);\n    };\n    /**\n     * Creates a {@link ResultTransformer} which collects the first record {@link Record} of {@link Result}\n     * and discard the rest of the records, if existent.\n     *\n     * @example\n     * // Using in executeQuery\n     * const maybeFirstRecord = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\n     *   resultTransformer: neo4j.resultTransformers.first()\n     * })\n     *\n     * @example\n     * // Using in other results\n     * const record = await neo4j.resultTransformers.first()(result)\n     *\n     *\n     * @template Entries The shape of the record.\n     * @returns {ResultTransformer<Record<Entries>|undefined>} The result transformer\n     * @see {@link Driver#executeQuery}\n     * @experimental This is a preview feature.\n     * @since 5.22.0\n     */\n    ResultTransformers.prototype.first = function () {\n        return first;\n    };\n    /**\n     * Creates a {@link ResultTransformer} which consumes the result and returns the {@link ResultSummary}.\n     *\n     * This result transformer is a shortcut to `(result) => result.summary()`.\n     *\n     * @example\n     * const summary = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\n     *   resultTransformer: neo4j.resultTransformers.summary()\n     * })\n     *\n     * @returns {ResultTransformer<ResultSummary<T>>} The result transformer\n     * @see {@link Driver#executeQuery}\n     * @experimental This is a preview feature\n     */\n    ResultTransformers.prototype.summary = function () {\n        return summary;\n    };\n    return ResultTransformers;\n}());\n/**\n * Holds the common {@link ResultTransformer} used with {@link Driver#executeQuery}.\n */\nvar resultTransformers = new ResultTransformers();\nObject.freeze(resultTransformers);\nexports.default = resultTransformers;\nfunction createEagerResultFromResult(result) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, summary, records, keys;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, result];\n                case 1:\n                    _a = _b.sent(), summary = _a.summary, records = _a.records;\n                    return [4 /*yield*/, result.keys()];\n                case 2:\n                    keys = _b.sent();\n                    return [2 /*return*/, new result_eager_1.default(keys, records, summary)];\n            }\n        });\n    });\n}\nfunction createMappedResultTransformer(config) {\n    var _this = this;\n    if (config == null || (config.collect == null && config.map == null)) {\n        throw (0, error_1.newError)('Requires a map or/and a collect functions.');\n    }\n    return function (result) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {\n                        var state = { records: [], keys: [] };\n                        result.subscribe({\n                            onKeys: function (keys) {\n                                state.keys = keys;\n                            },\n                            onNext: function (record) {\n                                if (config.map != null) {\n                                    var mappedRecord = config.map(record);\n                                    if (mappedRecord !== undefined) {\n                                        state.records.push(mappedRecord);\n                                    }\n                                }\n                                else {\n                                    state.records.push(record);\n                                }\n                            },\n                            onCompleted: function (summary) {\n                                if (config.collect != null) {\n                                    resolve(config.collect(state.records, summary, state.keys));\n                                }\n                                else {\n                                    var obj = { records: state.records, summary: summary, keys: state.keys };\n                                    resolve(obj);\n                                }\n                            },\n                            onError: function (error) {\n                                reject(error);\n                            }\n                        });\n                    })];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    }); };\n}\nfunction first(result) {\n    return __awaiter(this, void 0, void 0, function () {\n        var it, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    it = result[Symbol.asyncIterator]();\n                    return [4 /*yield*/, it.next()];\n                case 1:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    _b.label = 2;\n                case 2:\n                    _b.trys.push([2, , 3, 6]);\n                    if (done === true) {\n                        return [2 /*return*/, undefined];\n                    }\n                    return [2 /*return*/, value];\n                case 3:\n                    if (!(it.return != null)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, it.return()];\n                case 4:\n                    _b.sent();\n                    _b.label = 5;\n                case 5: return [7 /*endfinally*/];\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction summary(result) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, result.summary()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n"],"mappings":"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AkB,GAAG,aAAe,YAAY;EAChD,SAASA,kBAAkBA,CAAA,EAAG,CAC9B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,kBAAkB,CAACC,SAAS,CAACC,sBAAsB,GAAG,YAAY;IAC9D,OAAOC,2BAA2B;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,kBAAkB,CAACC,SAAS,CAACG,KAAK,GAAG,YAAY;IAC7C,OAAOD,2BAA2B;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,kBAAkB,CAACC,SAAS,CAACI,uBAAuB,GAAG,UAAUC,MAAM,EAAE;IACrE,OAAOC,6BAA6B,CAACD,MAAM,CAAC;EAChD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIN,kBAAkB,CAACC,SAAS,CAACO,MAAM,GAAG,UAAUF,MAAM,EAA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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}